[11/10 18:55:59] \c test;
[11/10 18:55:59] DROP DATABASE IF EXISTS database2466;
[11/10 18:55:59] CREATE DATABASE database2466 WITH ENCODING 'utf8'  TEMPLATE template0;
[11/10 18:55:59] \c database2466;
[11/10 18:55:59] CREATE TEMP TABLE t0(c0 FLOAT  UNIQUE DEFAULT (0.736151935112926), c1 BIT VARYING(383)  UNIQUE PRIMARY KEY, UNIQUE(c1), CHECK(CAST(lower(CAST((0.057058975)::MONEY AS VARCHAR(267))) AS BOOLEAN)), EXCLUDE (c1 text_ops NULLS LAST WITH <->, c1 NULLS LAST WITH ?&)) PARTITION BY HASH((((CAST(t0.c0 AS INT))^(num_nulls(0.05705897420193773, 0.610441651006387697719901552773080766201019287109375))))) WITH (autovacuum_vacuum_cost_limit=2970, autovacuum_analyze_scale_factor=0.1, parallel_workers=472, autovacuum_vacuum_threshold=750491278) ON COMMIT PRESERVE ROWS ;
[11/10 18:55:59] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 TEXT COLLATE "C" , c1 int4range , UNIQUE(c0), EXCLUDE (c0 WITH >=), CHECK(((t0.c0)=(((t0.c0)||((0.29529370022995682365518632650491781532764434814453125)::INT))))), PRIMARY KEY(c0)) PARTITION BY HASH((((((t0.c1)*(t0.c1)))-(((t0.c1)*(t0.c1)))))) WITH (autovacuum_enabled=0, autovacuum_vacuum_scale_factor=0) ON COMMIT DELETE ROWS ;
[11/10 18:55:59] CREATE TABLE IF NOT EXISTS t0(c0 integer , c1 inet  CHECK (NOT (((CAST((('[211832089,700551444)'::int4range)-('(-1649965752,700551444]'::int4range)) AS int4range))&<((((('[211832089,1332437172)'::int4range)-('[-975317674,700551444)'::int4range)))*((('[-1549315790,-531759101)'::int4range)*('(-975317674,211832089)'::int4range)))))))) NOT NULL, UNIQUE(c0, c1) WITH (autovacuum_freeze_min_age=201568261, autovacuum_vacuum_threshold=680597094, autovacuum_enabled=1, parallel_workers=176, autovacuum_analyze_scale_factor=0.01, fillfactor=92, autovacuum_vacuum_cost_limit=8384, autovacuum_analyze_threshold=1807361553, autovacuum_vacuum_scale_factor=1)) PARTITION BY LIST((t0.c0)) WITH (autovacuum_freeze_table_age=1278448644, autovacuum_freeze_max_age=1271491686, autovacuum_vacuum_cost_delay=58);
[11/10 18:55:59] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 smallint , c1 int4range ) PARTITION BY RANGE((t0.c1), (((((((((B'1111111111111111111111111111111111011110000010110110001110001110')||(B'10100110000000101110111101000')))#(((B'1111111111111111111111111111111111100000010011100000000000000011')||(B'1100101000000100110100011001')))))#(((((B'10100110000000101110111101000')<<(B'11101100011110111110001011011')))#(((B'1111111111111111111111111111111111100000010011100000000000000011')|(B'11100010011101100101101111000')))))))#(((((((B'1111111111111111111111111111111111000101110111011101010101010110')|(B'1101100110010110100011011000101')))||(((B'1111111111111111111111111111111110011110111011111000010011000000')||(B'1111111111111111111111111111111111111100010101000110001011101000')))))|(((((B'1101100110010110100011011000101')<<(B'1111111111111111111111111111111111100000010011100000000000000011')))<<(((B'1100100001000001011100111010')&(B'1111111111111111111111111111111110000000000101100110000010101101')))))))))int8_minmax_multi_ops);
[11/10 18:55:59] CREATE TABLE IF NOT EXISTS t0(c0 DECIMAL , CHECK(NOT (NOT ((0.73615193) NOT IN (0.12645996, -2146017107)))), UNIQUE(c0), EXCLUDE ((CAST(0.057058975 AS MONEY)) tid_ops NULLS LAST WITH <>, c0 cid_ops NULLS LAST WITH =), PRIMARY KEY(c0)) PARTITION BY LIST(((((((((('[-1709920975,-1549315790]'::int4range)*('(884085481,1869203050)'::int4range)))-(range_merge('[1353614300,1558712691]'::int4range, '(495942747,1778274915]'::int4range))))-((((('(1292135498,1903355900]'::int4range)-('(-2035290923,474925944]'::int4range)))*((('[-1412064234,2016028419)'::int4range)*('(-1412064234,-749884653]'::int4range)))))))*((((((('[-671094412,-426180936)'::int4range)*('(-1709920975,61337417]'::int4range)))*((('(1558712691,1869203050)'::int4range)-('[-1364549589,209983290)'::int4range)))))-((((('(1110885902,1526215094]'::int4range)*('(-851582441,1866836731)'::int4range)))*((('(-2072152748,-380536295)'::int4range)*('(-1750348154,209983290)'::int4range))))))))));
[11/10 18:55:59] CREATE TEMP TABLE t0(c0 BIT VARYING(482)  NULL, c1 TEXT COLLATE "C" , UNIQUE(c0, c1)) WITH (autovacuum_freeze_min_age=405330567, autovacuum_enabled=0, parallel_workers=127, autovacuum_analyze_threshold=456123763, autovacuum_vacuum_cost_limit=8375, fillfactor=56, autovacuum_vacuum_cost_delay=60, autovacuum_freeze_max_age=578718261, autovacuum_vacuum_scale_factor=0.5, autovacuum_freeze_table_age=1156939256) ON COMMIT DELETE ROWS ;
[11/10 18:55:59] CREATE TEMPORARY TABLE IF NOT EXISTS t1(c0 int4range  NULL CHECK (pg_is_other_temp_schema()) DEFAULT ((((((((('(-1615988814,-1412064234)'::int4range)*('[-919793855,-61578520]'::int4range)))-((('(437703742,1031931520]'::int4range)-('(-669454082,1735350931)'::int4range)))))*(CAST((-569678962)::INT AS int4range))))*((((((('[-380536295,1903355900)'::int4range)*('[-2035290923,-591144588]'::int4range)))*((('(-702236512,1433301467]'::int4range)*('[584037448,1194415045]'::int4range)))))*('(421450712,1658902556)'::int4range))))), c1 boolean ) INHERITS(t0) WITH (autovacuum_analyze_scale_factor=0.9, autovacuum_vacuum_cost_delay=12, autovacuum_freeze_min_age=617550765, autovacuum_freeze_max_age=1599834601, autovacuum_enabled=0, autovacuum_vacuum_scale_factor=0.1, autovacuum_vacuum_cost_limit=1455, parallel_workers=180);
[11/10 18:55:59] CREATE TABLE IF NOT EXISTS t1(LIKE t0);
[11/10 18:55:59] CREATE TEMP TABLE t2(c0 DECIMAL , c1 REAL , UNIQUE(c0), PRIMARY KEY(c1, c0), FOREIGN KEY (c0, c1) REFERENCES t1(c1, c0) MATCH SIMPLE) PARTITION BY HASH((NOT ((t2.c0) NOT IN (0.6017888996941234136528464659932069480419158935546875, 0.4080505035519437218027860581059940159320831298828125)))bytea_minmax_ops, ('104.199.26.252')macaddr_minmax_ops, (CAST(0.59211993 AS MONEY)));
[11/10 18:55:59] CREATE TEMPORARY TABLE t2(c0 FLOAT , c1 BIT VARYING(296) ) WITH (autovacuum_enabled=0, autovacuum_analyze_threshold=675295553, autovacuum_freeze_min_age=266049064, autovacuum_vacuum_threshold=1887765851);
[11/10 18:55:59] CREATE TEMPORARY TABLE t3(c0 REAL  PRIMARY KEY, c1 int4range , c2 VARCHAR(49) COLLATE "en_US.utf8" ) PARTITION BY HASH((0.14799215396321219184727624451625160872936248779296875)date_bloom_ops);
[11/10 18:55:59] CREATE TEMP TABLE t3(c0 TEXT , c1 FLOAT  CHECK ((CAST(0.383861450570779805246957039344124495983123779296875 AS VARCHAR) SIMILAR TO ((t3.c0)||(((CAST(0.28636173326706171327060701514710672199726104736328125 AS INT))*(- (1392752978))))))) UNIQUE NULL PRIMARY KEY DEFAULT (6.1337417E7)) PARTITION BY LIST((0.26011246)int2_ops);
[11/10 18:55:59] CREATE TEMPORARY TABLE IF NOT EXISTS t3(LIKE t1 EXCLUDING DEFAULTS INCLUDING COMMENTS);
[11/10 18:55:59] RESET ROLE;
[11/10 18:55:59] SET CONSTRAINTS ALL IMMEDIATE;
[11/10 18:55:59] ALTER TABLE  t2 ALTER c1 SET STATISTICS 2266, ALTER c1  SET(n_distinct_inherited=-1.0E-5), VALIDATE CONSTRAINT asdf, ALTER c1  TYPE inet, DISABLE ROW LEVEL SECURITY, ALTER c1 SET NOT NULL, SET WITHOUT CLUSTER, NO FORCE ROW LEVEL SECURITY, FORCE ROW LEVEL SECURITY, ENABLE ROW LEVEL SECURITY, SET WITHOUT OIDS, ALTER c0  RESET(n_distinct, n_distinct_inherited), SET LOGGED, OWNER TO CURRENT_USER, ALTER c0 SET STORAGE MAIN, NOT OF, ALTER c0 DROP DEFAULT;
[11/10 18:55:59] CREATE STATISTICS  s0 (dependencies, ndistinct, mcv) ON c0, c1 FROM t2;
[11/10 18:55:59] DISCARD PLANS;
[11/10 18:55:59] RESET ROLE;
[11/10 18:55:59] SET geqo_effort=2;
[11/10 18:55:59] RESET ALL;
[11/10 18:55:59] CREATE STATISTICS  s1 (mcv, dependencies, ndistinct) ON c0, c1 FROM t2;
[11/10 18:55:59] UPDATE t2 SET c0 = 4.2145072E8, c1 = DEFAULT WHERE TRUE;
[11/10 18:55:59] SET parallel_setup_cost=6853374988913468944;
[11/10 18:55:59] ANALYZE;
[11/10 18:55:59] UPDATE t0 SET c0 = B'1111111111111111111111111111111110011110111011111000010011000000', c1 = '-1750348154' WHERE (t0.c1 SIMILAR TO t0.c1);
[11/10 18:55:59] INSERT INTO t1(c0, c1) VALUES(((((((((B'1111111111111111111111111111111111100110100110001111111010111000')<<(B'11010000101101101010000111110')))>>(((B'111101100000100000011010000000')#(B'1111111111111111111111111111111110011111101011011111011110110010')))))#(((((B'1111111111111111111111111111111110010010001110110111001001010110')&(B'1101111011010011100011001101010')))<<(((B'1111111111111111111111111111111110000110101011111110110011010101')||(NULL)))))))|(((((((B'1111111111111111111111111111111110000001100110000000111010000111')#(B'1100101000000100110100011001')))<<(((B'1111111111111111111111111111111110000001100110000000111010000111')&(B'1100101111101001000000101000111')))))<<(((((B'1111111111111111111111111111111111111011100010101101010010010000')&(B'1111111111111111111111111111111111100000010011100000000000000011')))#(((B'1111111111111111111111111111111111010011010011011010101100010011')>>(B'1010011111011111010001100100000')))))))), '둈oꌠ	');
[11/10 18:55:59] INSERT INTO t2(c0) VALUES(CAST(0.83807135 AS REAL));
[11/10 18:55:59] UNLISTEN *;
[11/10 18:55:59] DISCARD SEQUENCES;
[11/10 18:55:59] UPDATE t2 SET c0 = DEFAULT WHERE ((((1088295830)::VARCHAR(534) COLLATE "C"))||(0.65725985832857614088453601652872748672962188720703125))!~*((CAST(4.95942752E8 AS MONEY))::VARCHAR COLLATE "C");
[11/10 18:55:59] INSERT INTO t2(c0, c1) VALUES(((((((0.43271428)::MONEY)::INT)+(num_nulls(FALSE))))-(((((+ (1363850937))-(CAST(-919793855 AS INT))))+(lower('[-9223372036854775808,-1046155004]'::int4range))))), B'1111111111111111111111111111111111100110100110001111111010111000'), (abs(((('(-1615988814,992329066]'::int4range)::INT)^(- (-1364549589)))), B'1111111111111111111111111111111110100100100111000101111001101000'), (-1.41206426E9, ((((((((B'1010100111010101011101111110100')#(B'1111111111111111111111111111111111010111111111111110100101110100')))<<(((B'100001010110100000011100101111')>>(B'1111111111111111111111111111111110110010011101001111000111000101')))))<<(((((B'1111111111111111111111111111111110101001000010010111000000010100')|(B'101001110000011001000100010100')))>>(((B'1111111111111111111111111111111110011111101011011111011110110010')||(B'100001010110100000011100101111')))))))#(((((((B'1111111111111111111111111111111111110001011000010000100110110101')||(B'1111111111111111111111111111111111100101111010110011001100101000')))&(((B'10111001100001110010000110000')<<(B'1111111111111111111111111111111111100111000101010010101011101011')))))|(((((B'1111111111111111111111111111111110100100000011110101011101100010')#(B'1011100111010000001000101110011')))||(((B'1111111111111111111111111111111110011111101011011111011110110010')&(NULL)))))))));
[11/10 18:55:59] INSERT INTO t2(c1, c0) VALUES(((B'1111111111111111111111111111111110001101110100001001001111111010')#(((((((B'1111111111111111111111111111111110010001100010100000100101010011')&(B'10110111000101111011000100011')))#(((B'1111111111111111111111111111111111101001010100010111101000011001')||(B'1001111000110111100100101000')))))||(((((B'1111111111111111111111111111111111111111111111111111111111111111')|(B'101101011101001100111001000011')))>>(((B'101001110000011001000100010100')#(B'1100101111100010101011100000000')))))))), (((masklen('202.217.142.67'))+(- (((-1058364073)-(-477910765))))))::INT);
[11/10 18:55:59] COMMENT ON TABLE t0 IS 'b!';
[11/10 18:55:59] ANALYZE( SKIP_LOCKED);
[11/10 18:55:59] RESET ROLE;
[11/10 18:55:59] UPDATE t2 SET c1 = DEFAULT;
[11/10 18:55:59] ALTER TABLE  ONLY t1 DROP  IF EXISTS c1 RESTRICT, SET WITHOUT CLUSTER, ENABLE ROW LEVEL SECURITY, NOT OF, ALTER c1  RESET(n_distinct_inherited, n_distinct), ALTER c0 SET STORAGE MAIN, ADD CONSTRAINT 둈 EXCLUDE (c1 NULLS LAST WITH ##, c1 varchar_ops WITH ^) NOT VALID, SET LOGGED, NO FORCE ROW LEVEL SECURITY, VALIDATE CONSTRAINT asdf, ALTER c0 SET DEFAULT ((((((((B'1111111111111111111111111111111110010111101010111100111010000110')<<(B'1111111111111111111111111111111110111011110011100000001101010001')))|(((B'111011001001011011110101101010')<<(B'1100101000000100110100011001')))))||(((((B'1111111011000011001011010111000')&(B'111100101100101110100110001')))#(((B'1001101001000001111110101110000')&(B'1111111111111111111111111111111111100111000101010010101011101011')))))))<<(B'1101110001001101000111100010100')), OWNER TO CURRENT_USER, ALTER c1 SET STATISTICS 183;
[11/10 18:55:59] ALTER TABLE  t3 ADD CONSTRAINT j EXCLUDE ((t3.c1) int2_bloom_ops DESC NULLS LAST WITH <>) WITH (autovacuum_analyze_threshold=1875372666, autovacuum_freeze_max_age=532718609, fillfactor=39);
[11/10 18:55:59] ALTER TABLE  ONLY t2 OWNER TO SESSION_USER, SET UNLOGGED, VALIDATE CONSTRAINT asdf, ADD CONSTRAINT J EXCLUDE (c1 ASC NULLS FIRST WITH <, ((0.42689335)::MONEY) tsvector_ops ASC WITH >), REPLICA IDENTITY FULL, FORCE ROW LEVEL SECURITY;
[11/10 18:55:59] ALTER TABLE  t2 OWNER TO CURRENT_USER, REPLICA IDENTITY FULL, ALTER c0  RESET(n_distinct), DISABLE ROW LEVEL SECURITY, SET LOGGED, FORCE ROW LEVEL SECURITY, SET WITHOUT CLUSTER, ALTER c0  SET(n_distinct=-1), ALTER c0 DROP DEFAULT, DROP  IF EXISTS c0 RESTRICT, ALTER c0  SET DATA TYPE BIT VARYING(220), NO FORCE ROW LEVEL SECURITY, SET WITHOUT OIDS, ALTER c0 SET STATISTICS 3986, ALTER c0 SET STORAGE MAIN, NOT OF, ADD CONSTRAINT C FOREIGN KEY (c1, c0) REFERENCES t0(c0, c1) ON DELETE CASCADE;
[11/10 18:55:59] ALTER TABLE  t0 ENABLE ROW LEVEL SECURITY;
[11/10 18:55:59] DELETE FROM ONLY t2 WHERE lower(('0?WIIf' COLLATE "C"))!~((((0.2751473685122283)::VARCHAR(717))||(((t2.c1)|(t2.c1)))) COLLATE "en_US.utf8") RETURNING (0.5601327)::MONEY;
[11/10 18:55:59] DELETE FROM ONLY t0 RETURNING '250.243.42.244';
[11/10 18:55:59] CREATE SEQUENCE IF NOT EXISTS seq NO MINVALUE MAXVALUE 986801598;
[11/10 18:55:59] DELETE FROM t3 WHERE (((((t3.c0)&(t3.c0)))|(((((t3.c0)|(B'100010110011111011010001001000')))>>(t3.c0))))) BETWEEN (t3.c0) AND (((((t3.c0)||(((t3.c0)|(t3.c0)))))>>(((t3.c0)||(((t3.c0)<<(t3.c0))))))) RETURNING 0.72982026579521797060579046956263482570648193359375;
[11/10 18:55:59] DELETE FROM ONLY t1 WHERE ((((TRUE)::VARCHAR COLLATE "C") COLLATE "C") SIMILAR TO t1.c1) RETURNING 0.7008351986905598796084859714028425514698028564453125;
[11/10 18:55:59] SET parallel_tuple_cost=3997138778309426936;
[11/10 18:55:59] DELETE FROM t3 WHERE t3.c1~t3.c1;
[11/10 18:55:59] RESET ROLE;
[11/10 18:55:59] CLUSTER ;
[11/10 18:55:59] NOTIFY asdf;
[11/10 18:55:59] CREATE STATISTICS  IF NOT EXISTS s2 (dependencies) ON c1, c0 FROM t2;
[11/10 18:55:59] CREATE STATISTICS  IF NOT EXISTS s3 ON c1, c0 FROM t1;
[11/10 18:55:59] UPDATE t1 SET c0 = B'110100101100100001001011101001', c1 = (((((((('[5037950,287231283)'::int4range)-('(1710522695,1996703225]'::int4range)))::VARCHAR)||(NULL)))||(+ (((upper('(209983290,2073629631]'::int4range))^(- (285877394))))))) WHERE (((((((('[-1841597866,559548207]'::int4range)-('(-1657985849,-1264045996]'::int4range)))*((('[-516642952,-253283769]'::int4range)*('(209983290,1504231143)'::int4range)))))@>((((('[-1471172439,433788994)'::int4range)*('(-74787696,554049759)'::int4range)))*((('[-975317674,348151272)'::int4range)-('[1424669684,1519424891)'::int4range)))))))AND((t1.c0) BETWEEN (((((t1.c0)&(t1.c0)))>>(((t1.c0)|(t1.c0))))) AND (((((t1.c0)||(t1.c0)))|(((t1.c0)&(t1.c0)))))));
[11/10 18:55:59] UPDATE t2 SET c0 = (0.2540772) WHERE ((t2.c0)<=(((((('[-1750348154,700551444]'::int4range)-('(-2035290923,-1144126639]'::int4range)))*((('[-1377766704,-737477651)'::int4range)-('(-851582441,1543564084]'::int4range)))))::INT));
[11/10 18:55:59] UPDATE t3 SET c0 = DEFAULT, c1 = DEFAULT WHERE (((((((('[1031931520,1357517420)'::int4range)-('(-1637005198,24701294)'::int4range)))-((('(-1852959348,1526215094)'::int4range)*('(-545220335,1599037155)'::int4range)))))-((((('[-1593315037,-1046155004)'::int4range)-('(-1166946317,-1019775867)'::int4range)))-((('[690038671,999400240)'::int4range)-('(-303647481,785294518]'::int4range)))))))<<((((((('[762629699,785782850]'::int4range)*('[1627422997,1813485186)'::int4range)))*((('(745203124,1162846722]'::int4range)*('(-1120281251,-1064042115)'::int4range)))))*((((('[-35756122,1724737593)'::int4range)-('[-1148628480,147243391]'::int4range)))*(CAST(FALSE AS int4range)))))));
[11/10 18:55:59] UPDATE t1 SET c0 = DEFAULT, c1 = '0.5601326587121271' WHERE NOT (((((t1.c0)#(((t1.c0)#(t1.c0)))))IS DISTINCT FROM(t1.c0)));
[11/10 18:55:59] INSERT INTO t3(c1) VALUES(''), ('r,졚A25#'), ('-1058364073'), ('r,졚A25#');
[11/10 18:55:59] CREATE INDEX i0 ON ONLY t2 USING HASH(c1);
[11/10 18:55:59] CREATE UNIQUE INDEX i0 ON t3 USING HASH(c0);
[11/10 18:55:59] CREATE INDEX i0 ON ONLY t0 USING HASH(c0) WHERE ((md5(t0.c1))LIKE((t0.c1 COLLATE "en_US.utf8")));
[11/10 18:55:59] CREATE UNIQUE INDEX i0 ON ONLY t0 USING GIN(((((CAST(FALSE AS VARCHAR(509)))||(0.6045059)) SIMILAR TO t0.c1)) NULLS LAST, (CAST(((((- (-912861871))%(+ (1801836915))))^(+ (((1303749501)/(-1931015922))))) AS DECIMAL))) INCLUDE(c1) WHERE ((t0.c1)LIKE(t0.c1));
[11/10 18:55:59] UPDATE t3 SET c0 = B'1111111111111111111111111111111110011011101011111100100111110010', c1 = (t3.c1) WHERE t3.c1~t3.c1;
[11/10 18:55:59] ALTER TABLE  t3 SET WITHOUT OIDS, ALTER c1  RESET(n_distinct_inherited), DROP c1 RESTRICT, FORCE ROW LEVEL SECURITY, DISABLE ROW LEVEL SECURITY, NOT OF, ALTER c0 SET STORAGE EXTENDED, VALIDATE CONSTRAINT asdf;
[11/10 18:55:59] ALTER TABLE  ONLY t0 ALTER c0  SET(n_distinct=1.0E-9), OWNER TO SESSION_USER;
[11/10 18:55:59] COMMIT;
[11/10 18:55:59] SET SESSION statement_timeout = 5000;
;
