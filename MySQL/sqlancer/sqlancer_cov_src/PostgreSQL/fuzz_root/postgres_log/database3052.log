[11/11 06:29:36] \c test;
[11/11 06:29:36] DROP DATABASE IF EXISTS database3052;
[11/11 06:29:36] CREATE DATABASE database3052 ;
[11/11 06:29:36] \c database3052;
[11/11 06:29:36] CREATE TEMP TABLE t0(c0 money  PRIMARY KEY, EXCLUDE ((((((((((B'1111111111111111111111111111111110101111110010000011011111100000')|(B'1010100111011000111110011100000')))&(((B'1011100111000100010111011100')|(B'1110010000101110101101110100010')))))#(((((B'1111111111111111111111111111111111010111100100101011010100010010')||(B'1010101111111111111000010001101')))&(((B'1111111111111111111111111111111110001001001100011111001100101100')&(B'101111011110011101101110011101')))))))&(B'110011011010101001100100001111'))) NULLS FIRST WITH <=, c0 WITH <) WHERE ((((('/-' COLLATE "C") COLLATE "C")!~*(('' COLLATE "C") COLLATE "en_US.utf8"))OR((CAST(0.63867176 AS MONEY)) BETWEEN SYMMETRIC (t0.c0) AND ((0.85819757)::MONEY))))) PARTITION BY RANGE((t0.c0)macaddr8_ops);
[11/11 06:29:36] CREATE UNLOGGED TABLE IF NOT EXISTS t0(c0 boolean  DEFAULT (((1.44283661E9)::MONEY) IS NULL), c1 BIT VARYING(165) );
[11/11 06:29:36] CREATE TEMP TABLE IF NOT EXISTS t1(c0 REAL , c1 int4range  NULL CHECK (abbrev('136.102.225.235')!~upper(lower('s)[yh_*'))) NO INHERIT UNIQUE, c2 FLOAT  PRIMARY KEY UNIQUE) INHERITS(t0) PARTITION BY HASH((((t1.c1)*(t1.c1)))) WITH (autovacuum_vacuum_cost_limit=9562, parallel_workers=269, autovacuum_vacuum_threshold=502515664);
[11/11 06:29:36] CREATE TEMP TABLE t1(LIKE t0);
[11/11 06:29:36] CREATE TABLE t2(c0 inet , c1 DECIMAL ) WITH (autovacuum_freeze_min_age=179058509, parallel_workers=529, fillfactor=91, autovacuum_enabled=0, autovacuum_vacuum_cost_delay=8, autovacuum_vacuum_cost_limit=652, autovacuum_freeze_table_age=1236602176, autovacuum_analyze_scale_factor=0.9, autovacuum_freeze_max_age=352462729, autovacuum_analyze_threshold=1763363726, autovacuum_vacuum_scale_factor=0.01);
[11/11 06:29:36] CREATE UNLOGGED TABLE IF NOT EXISTS t3(LIKE t0);
[11/11 06:29:36] CREATE TABLE t4(LIKE t2 INCLUDING COMMENTS);
[11/11 06:29:36] DROP INDEX IF EXISTS i0, i2 RESTRICT;
[11/11 06:29:36] UPDATE t1 SET c1 = B'1111111111111111111111111111111110110110101011001100110000010111', c0 = FALSE WHERE (CAST(((t1.c1)>>(((t1.c1)>>(t1.c1)))) AS VARCHAR(813)) SIMILAR TO text('95.74.107.224'));
[11/11 06:29:36] UPDATE t0 SET c1 = DEFAULT, c0 = DEFAULT WHERE t0.c0;
[11/11 06:29:36] SET vacuum_multixact_freeze_min_age=DEFAULT;
[11/11 06:29:36] CREATE STATISTICS  s0 (mcv) ON c0, c1 FROM t0;
[11/11 06:29:36] DELETE FROM ONLY t2 WHERE (upper_inf((((('[-1516435726,1898661641]'::int4range)*('[776758396,939743907)'::int4range)))*((('[-1303490873,-769290457)'::int4range)*('(-678251246,982515305]'::int4range)))))) IS TRUE;
[11/11 06:29:36] ALTER TABLE  ONLY t4 ALTER c1 SET STATISTICS 8633, ADD CONSTRAINT u PRIMARY KEY(c1) WITH (autovacuum_freeze_table_age=933642095, autovacuum_freeze_max_age=805107665, autovacuum_analyze_scale_factor=1.0E-5, fillfactor=82, autovacuum_vacuum_scale_factor=0.01, autovacuum_analyze_threshold=1693464859, autovacuum_enabled=1, autovacuum_freeze_min_age=594731228, parallel_workers=923, autovacuum_vacuum_threshold=1401599265), OWNER TO CURRENT_USER, NOT OF, ALTER c0  RESET(n_distinct_inherited, n_distinct);
[11/11 06:29:36] ALTER TABLE  ONLY t0 OWNER TO SESSION_USER, ENABLE ROW LEVEL SECURITY;
[11/11 06:29:36] RESET ALL;
[11/11 06:29:36] SET CONSTRAINTS ALL IMMEDIATE;
[11/11 06:29:36] ALTER TABLE  t4 ALTER c0 SET DEFAULT '56.33.39.107', ALTER c0  RESET(n_distinct_inherited, n_distinct), ALTER c0 SET STATISTICS 9953, ADD CONSTRAINT u FOREIGN KEY (c0, c1) REFERENCES t1(c0, c1) MATCH FULL ON DELETE SET NULL, ALTER c1 SET STORAGE PLAIN, ALTER c0  TYPE DECIMAL, ALTER c1  SET(n_distinct=-1.0E-5, n_distinct_inherited=-0.2);
[11/11 06:29:36] ALTER TABLE  ONLY t1 ALTER c0 SET STATISTICS 7139, ALTER c0 SET STORAGE MAIN, ALTER c1 SET DEFAULT ((((B'1111111111111111111111111111111110100101100111010000011011110010')|(B'11111100100110000010000101')))<<(((((((B'1111111111111111111111111111111110110011000001011111000110010111')&(B'1010100111011000111110011100000')))|(((B'1000100011110101110010111100110')||(B'1111111111111111111111111111111110101111110010000011011111100000')))))<<(((((B'1111101111111111001010001011000')|(B'1010010111110110100100111101001')))|(((B'11010011001100111010101101000')&(B'1010100111011000111110011100000')))))))), NOT OF, SET WITHOUT CLUSTER, DROP  IF EXISTS c1, OWNER TO SESSION_USER;
[11/11 06:29:36] ALTER TABLE  t4 NOT OF, ALTER c0  TYPE BIT VARYING(395), ADD CONSTRAINT Q FOREIGN KEY (c0, c1) REFERENCES t3(c0, c1) ON DELETE RESTRICT NOT VALID, SET WITHOUT OIDS, ALTER c0 SET STATISTICS 941, ALTER c1 DROP DEFAULT, REPLICA IDENTITY FULL, ENABLE ROW LEVEL SECURITY, SET WITHOUT CLUSTER, DROP  IF EXISTS c1 RESTRICT, FORCE ROW LEVEL SECURITY, ALTER c0 DROP NOT NULL, ALTER c0 SET STORAGE EXTENDED, NO FORCE ROW LEVEL SECURITY, OWNER TO SESSION_USER, DISABLE ROW LEVEL SECURITY, SET UNLOGGED, ALTER c0  SET(n_distinct=1.0E-9), ALTER c0  RESET(n_distinct_inherited, n_distinct), VALIDATE CONSTRAINT asdf;
[11/11 06:29:36] ALTER TABLE  ONLY t0 NOT OF;
[11/11 06:29:36] ALTER TABLE  ONLY t3 SET UNLOGGED, ALTER c0 SET STORAGE PLAIN, OWNER TO SESSION_USER, DISABLE ROW LEVEL SECURITY, NOT OF, ENABLE ROW LEVEL SECURITY, ALTER c0  TYPE boolean, SET WITHOUT OIDS, ALTER c1 SET STATISTICS 3782, SET WITHOUT CLUSTER, REPLICA IDENTITY NOTHING, DROP  IF EXISTS c0, NO FORCE ROW LEVEL SECURITY, VALIDATE CONSTRAINT asdf, ALTER c0  RESET(n_distinct_inherited, n_distinct), ADD CONSTRAINT K CHECK(t3.c0), FORCE ROW LEVEL SECURITY, ALTER c1 DROP DEFAULT, ALTER c0  SET(n_distinct_inherited=1.0E-9, n_distinct=-0.5), ALTER c0 SET NOT NULL;
[11/11 06:29:36] ALTER TABLE  t2 ALTER c0 SET STATISTICS 8523, ALTER c1  TYPE REAL, DISABLE ROW LEVEL SECURITY, ALTER c1 DROP NOT NULL, ENABLE ROW LEVEL SECURITY, ADD CONSTRAINT a UNIQUE(c0, c1), FORCE ROW LEVEL SECURITY, ALTER c1  SET(n_distinct=-1.0E-10, n_distinct_inherited=0.1), SET LOGGED, VALIDATE CONSTRAINT asdf;
[11/11 06:29:36] LISTEN asdf;
[11/11 06:29:36] UPDATE t2 SET c0 = DEFAULT, c1 = (t2.c1) WHERE (((((((('[-1957301659,2113901656)'::int4range)*('(-1966196617,12266508)'::int4range)))*((('(-2066408488,617300454)'::int4range)*('(26707791,776758396)'::int4range)))))*((((('[1,630291196]'::int4range)*('[-865395737,1361739177)'::int4range)))-((('(-1251603372,1236207779]'::int4range)*('(382004891,410917311]'::int4range)))))))-|-((((((('[-179163553,1670805322)'::int4range)*('[945342419,1349751603)'::int4range)))-((('(-1654560222,-1303490873]'::int4range)*('(-2006742170,-1291185638)'::int4range)))))*((((('(-1771097517,-159123989)'::int4range)-('[-2037687024,-1315829540]'::int4range)))*((('(-1686553934,1193958766)'::int4range)*('[-454578785,617300454]'::int4range))))))));
[11/11 06:29:36] UPDATE t4 SET c1 = DEFAULT WHERE (((0.55842640863565506936794236025889404118061065673828125) BETWEEN (t4.c1) AND (0.43593995572585964026757210376672446727752685546875))OR(isempty((((('(-1997333609,380879510)'::int4range)*('[-1686553934,-1291185638]'::int4range)))*((('[791787350,982515305]'::int4range)*('[-106142693,630291196)'::int4range)))))));
[11/11 06:29:36] CLUSTER ;
[11/11 06:29:36] RESET ROLE;
[11/11 06:29:36] UPDATE t3 SET c1 = B'1000110011000111100101001001000', c0 = DEFAULT WHERE ((((((CAST('aP' AS VARCHAR) COLLATE "C")) ISNULL)OR(t3.c0)))AND(((t3.c0)IS DISTINCT FROM(t3.c0))));
[11/11 06:29:36] NOTIFY test, '';
[11/11 06:29:36] DISCARD TEMPORARY;
[11/11 06:29:36] ANALYZE( VERBOSE);
[11/11 06:29:36] CREATE STATISTICS  s1 ON c0, c1 FROM t3;
[11/11 06:29:36] CREATE INDEX i0 ON ONLY t0 USING GIST(c0, c1 DESC NULLS LAST) INCLUDE(c0, c1) WHERE t0.c0;
[11/11 06:29:36] CREATE INDEX i0 ON t0 USING GIST(c1 ASC, (0.6153514) DESC NULLS LAST) WHERE (t0.c1) BETWEEN (t0.c1) AND (((t0.c1)>>(t0.c1)));
[11/11 06:29:36] CREATE INDEX i0 ON t4(c1 DESC, (((t4.c1)<(0.0389268984155608510633328478434123098850250244140625))) DESC) WHERE NOT (((((('-1993215188' COLLATE "en_US.utf8"))||(0.6472843)))LIKE(CAST((0.08935333)::MONEY AS VARCHAR))));
[11/11 06:29:36] CREATE UNIQUE INDEX i0 ON ONLY t0((0.22969667199538068569353299608337692916393280029296875), (get_byte((0.09456389)::VARCHAR(185), CAST('[-2010996998,1179760873]'::int4range AS INT))) bool_ops) INCLUDE(c0);
[11/11 06:29:36] CREATE INDEX i0 ON ONLY t4(('0.173.236.7') DESC, ((0.09456389)::INT) DESC) WHERE NOT (inet_same_family('95.36.106.151', '63.172.74.60'));
[11/11 06:29:36] CREATE UNIQUE INDEX i0 ON ONLY t2(c1, c1 DESC NULLS FIRST, c0) INCLUDE(c1, c0);
[11/11 06:29:36] CREATE TEMPORARY RECURSIVE VIEW v0(c0, c1, c2) AS (SELECT (CAST(t4.c0 AS INT))::DECIMAL, CAST(t0.c1 AS INT), (-1.23142746E9)::MONEY FROM t0, ONLY t4, t3, t2 ORDER BY t4.c1 ASC LIMIT 1299726771613979048);
[11/11 06:29:36] CREATE VIEW v0(c0) AS (SELECT DISTINCT length(upper('()')) FROM t4* LIMIT 2909980026238080924 OFFSET 7153650665659679114);
[11/11 06:29:36] REINDEX TABLE CONCURRENTLY t0;
[11/11 06:29:36] ALTER TABLE  ONLY t2 DISABLE ROW LEVEL SECURITY, ALTER c1  TYPE FLOAT, ADD CONSTRAINT H FOREIGN KEY (c1, c0) REFERENCES t0(c0, c1) ON UPDATE RESTRICT NOT DEFERRABLE NOT VALID, NOT OF, ALTER c1 SET NOT NULL, ALTER c1  RESET(n_distinct_inherited, n_distinct);
[11/11 06:29:36] ALTER TABLE  ONLY t3 ENABLE ROW LEVEL SECURITY, FORCE ROW LEVEL SECURITY;
[11/11 06:29:36] DELETE FROM ONLY t0 RETURNING 0.50170300513713517176483946968801319599151611328125;
[11/11 06:29:36] SET SESSION enable_sort=1;
[11/11 06:29:36] DISCARD SEQUENCES;
[11/11 06:29:36] ANALYZE( SKIP_LOCKED) t4;
[11/11 06:29:36] SET commit_delay=DEFAULT;
[11/11 06:29:36] DISCARD ALL;
[11/11 06:29:36] COMMENT ON COLUMN t2.c0 IS NULL;
[11/11 06:29:36] UPDATE t3 SET c1 = B'110101010101100001111111101100', c0 = DEFAULT WHERE NOT (t3.c0);
[11/11 06:29:36] SET synchronize_seqscans=DEFAULT;
[11/11 06:29:36] RESET ALL;
[11/11 06:29:36] DROP INDEX IF EXISTS i0, i1 CASCADE;
[11/11 06:29:36] COMMIT;
[11/11 06:29:36] SET SESSION statement_timeout = 5000;
;
