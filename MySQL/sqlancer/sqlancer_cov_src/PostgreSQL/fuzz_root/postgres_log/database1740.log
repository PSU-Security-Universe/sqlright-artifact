[11/09 19:18:34] \c test;
[11/09 19:18:34] DROP DATABASE IF EXISTS database1740;
[11/09 19:18:34] CREATE DATABASE database1740  TEMPLATE template0;
[11/09 19:18:34] \c database1740;
[11/09 19:18:34] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 boolean , c1 REAL ) PARTITION BY RANGE((0.13663642186660684973986690238234587013721466064453125), (CAST(get_byte(('Fo' COLLATE "en_US.utf8"), ((-1597104048)/(-1597104048))) AS INT))) WITH (autovacuum_vacuum_threshold=1853011482, autovacuum_freeze_table_age=1319731383, autovacuum_vacuum_cost_limit=9098, autovacuum_vacuum_cost_delay=20, autovacuum_vacuum_scale_factor=1.0E-5, autovacuum_freeze_min_age=900267116);
[11/09 19:18:34] CREATE TABLE IF NOT EXISTS t0(c0 REAL , UNIQUE(c0), CHECK(((((((('(-1668830990,-1668830990)'::int4range)-('(-1959592932,1543463260)'::int4range)))*((('(-1597104048,-138170702)'::int4range)*('[-1959592932,-130849716]'::int4range)))))<@((('[-1167984112,2061048025]'::int4range)*((('(276233419,600703141)'::int4range)*('(600703141,2061048025)'::int4range))))))) IS NOT UNKNOWN), PRIMARY KEY(c0), EXCLUDE (c0 numeric_ops DESC NULLS FIRST WITH =)) PARTITION BY LIST((CAST(0.4615763085213162586484259009012021124362945556640625 AS BOOLEAN))varchar_ops);
[11/09 19:18:34] CREATE UNLOGGED TABLE t0(c0 TEXT  CHECK ((((((((('(-1167984112,-766452024)'::int4range)*('[-224863465,2008364173)'::int4range)))*((('[-1611276063,1702534259)'::int4range)*('(-383918699,2008364173]'::int4range)))))*(range_merge((('[-1611276063,-130849716]'::int4range)-('[-224863465,2008364173)'::int4range)), (('(235693003,1613032436]'::int4range)-('[-2066368682,-340273806)'::int4range))))))<@((((((('[-1611276063,2008364173)'::int4range)-('(1192036450,1891766264)'::int4range)))*((('[-2076196193,-1]'::int4range)*('(-1611276063,1891766264)'::int4range)))))*((((('(-939005289,420365848]'::int4range)*('(-2076196193,-1687403830]'::int4range)))*((('(-2036886916,-224863465)'::int4range)-('[-865838393,420365848)'::int4range))))))))) PRIMARY KEY NOT NULL UNIQUE, UNIQUE(c0), CHECK(inet_same_family('196.252.209.200', '171.52.185.41'))) PARTITION BY RANGE((0.36698942234146725294152702190331183373928070068359375)uuid_minmax_multi_ops) WITH (fillfactor=19, autovacuum_freeze_min_age=807060549, parallel_workers=97, autovacuum_vacuum_cost_delay=26, autovacuum_enabled=1);
[11/09 19:18:34] CREATE TEMP TABLE t0(c0 BIT VARYING(175) , c1 DECIMAL , CHECK(upper_inc((((('[270671215,2061048025)'::int4range)*('(379466365,1858801835)'::int4range)))*((('(1540680129,1785216257]'::int4range)*('(-383918699,194579925)'::int4range))))))) ON COMMIT DROP ;
[11/09 19:18:34] CREATE UNLOGGED TABLE t0(c0 boolean  DEFAULT (FALSE) UNIQUE, c1 REAL  DEFAULT (0.5347264) UNIQUE NOT NULL PRIMARY KEY) WITH (fillfactor=74, autovacuum_vacuum_threshold=1481025699, autovacuum_vacuum_cost_delay=40, autovacuum_vacuum_cost_limit=3719, autovacuum_freeze_min_age=877602066, autovacuum_analyze_scale_factor=0.1, parallel_workers=442, autovacuum_freeze_table_age=306893871, autovacuum_freeze_max_age=1786549428, autovacuum_analyze_threshold=1452604721);
[11/09 19:18:34] CREATE UNLOGGED TABLE t1(LIKE t0);
[11/09 19:18:34] CREATE TABLE IF NOT EXISTS t2(c0 money  UNIQUE CHECK ((t2.c0)::BOOLEAN)) INHERITS(t0) PARTITION BY HASH((((((((((B'1111111111111111111111111111111110011001011010111001110011000011')||(B'1111111111111111111111111111111111010100000010101001001010000010')))||(((B'1111111111111111111111111111111110101110101001111100100110111000')|(B'1111111111111111111111111111111110011001010100000011001000101110')))))#(((((B'1111111111111111111111111111111111001100000011010110111001100001')|(B'1111010110110010001100011011001')))||(B'1111111111111111111111111111111110010100110101100100010110110011')))))>>(((((((B'1111111111111111111111111111111110001011001100101111110000011100')>>(B'1001010000011101000111000110001')))#(CAST(t2.c0 AS BIT))))|(((((B'111010111011110010000110101110')&(B'1111111111111111111111111111111111111110100000011000000001101000')))&(((B'1111111111111111111111111111111111010110101001010101010010110000')&(B'1111111111111111111111111111111111111100001100001101000111011000'))))))))), (((((((((B'10001110011100101100101000101')>>(B'1000000110100000011000110101000')))||(((B'1111111111111111111111111111111111100000011000011101011110110101')#(B'100111011010001010111111111111')))))&(((((B'101011001111101000010000110100')&(B'1111111111111111111111111111111110011001010100000011001000101110')))||(((B'1111111111111111111111111111111111111011010101111001011000010001')#(B'1111111111111111111111111111111110100010010000100000011111110000')))))))||(((((CAST(FALSE AS BIT(805)))|(((B'1111111111111111111111111111111110110011010001000111010000100100')&(B'1111111111111111111111111111111111010100000010101001001010000010')))))<<(((((B'1111111111111111111111111111111110011001010100000011001000101110')<<(B'110010100000101111100011010110')))>>(((B'1101110010010101100010100101001')>>(B'1001000111000111001111100101000')))))))))varchar_ops, (0.1854831356748045667615087950252927839756011962890625)interval_ops, ((((((('-1095098453' COLLATE "en_US.utf8"))||(t2.c0)))||(((pg_trigger_depth())/(((-1563380398)^(1288437068)))))) COLLATE "en_US.utf8"))macaddr8_bloom_ops) WITH (parallel_workers=83, autovacuum_vacuum_scale_factor=0.2, autovacuum_analyze_scale_factor=0.8, autovacuum_freeze_max_age=1063715760, autovacuum_freeze_table_age=1050900217);
[11/09 19:18:34] CREATE TEMP TABLE IF NOT EXISTS t2(LIKE t1);
[11/09 19:18:34] CREATE TABLE IF NOT EXISTS t3(LIKE t2);
[11/09 19:18:34] DISCARD SEQUENCES;
[11/09 19:18:34] VACUUM VERBOSE ANALYZE t1;
[11/09 19:18:34] UPDATE t2 SET c0 = (t2.c0), c1 = (t2.c1) WHERE NOT (t2.c0);
[11/09 19:18:34] DELETE FROM ONLY t0 WHERE t0.c0;
[11/09 19:18:34] CREATE STATISTICS  IF NOT EXISTS s0 ON c1, c0 FROM t2;
[11/09 19:18:34] DROP INDEX IF EXISTS i0, i0 CASCADE;
[11/09 19:18:34] TRUNCATE TABLE t2 CONTINUE IDENTITY;
[11/09 19:18:34] DROP INDEX IF EXISTS i0, i1;
[11/09 19:18:34] RESET ROLE;
[11/09 19:18:34] DELETE FROM t2 WHERE t2.c0;
[11/09 19:18:34] CREATE STATISTICS  s1 ON c0, c1 FROM t2;
[11/09 19:18:34] CREATE UNIQUE INDEX i0 ON t1 USING GIST((CAST(lower((('(1188490921,1997163599]'::int4range)-('[-2066368682,-438352837)'::int4range))) AS INT)), c1 ASC, (CAST(0.6480948 AS MONEY)) ASC);
[11/09 19:18:34] CREATE UNIQUE INDEX i0 ON ONLY t2 USING HASH(c0);
[11/09 19:18:34] CREATE INDEX i0 ON ONLY t2((CAST(((B'1111111111111111111111111111111111010111111010010110110100001001')&(((B'1111111111111111111111111111111110011011011011000100001011001010')>>(((B'1011110011100101000101100011011')>>(B'1111111111111111111111111111111111101011100001101111001000101011')))))) AS INT))) WHERE (((((t2.c0)::VARCHAR(967) COLLATE "C"))||(t2.c0)) SIMILAR TO initcap(CAST(t2.c0 AS VARCHAR)));
[11/09 19:18:34] CREATE UNIQUE INDEX i0 ON ONLY t3((+ (((('[-100924199,1785216257)'::int4range)*((('[194579925,1785216257)'::int4range)-('(-1238662149,2086619345)'::int4range)))))::INT)), c1 DESC);
[11/09 19:18:34] UPDATE t1 SET c0 = DEFAULT WHERE (t1.c0) IS UNKNOWN;
[11/09 19:18:34] DROP INDEX IF EXISTS i3, i0, i0;
[11/09 19:18:34] DISCARD TEMP;
[11/09 19:18:34] UPDATE t0 SET c1 = DEFAULT, c0 = FALSE WHERE t0.c0;
[11/09 19:18:34] CREATE VIEW v0(c0, c1) AS (SELECT DISTINCT ON ('39.41.141.220') 0.26184738, t0.c1 FROM t0*, t3* LIMIT 1335347667782540880) WITH CASCADED CHECK OPTION;
[11/09 19:18:34] CREATE MATERIALIZED VIEW v0(c0) AS (SELECT 0.338367 FROM ONLY t3 WHERE t3.c0 LIMIT 5141895320130079052);
[11/09 19:18:34] CREATE UNIQUE INDEX i0 ON ONLY t1((((((((CAST('194.76.194.1' AS int4range))*((('(235693003,1192036450)'::int4range)*('[-1848231270,-582675808)'::int4range)))))*((((('[-483819662,235693003]'::int4range)*('[613286632,1129205528]'::int4range)))-((('(-530458699,1740064664]'::int4range)*('(-1475806805,625030862)'::int4range)))))))*((((((('[-1044231989,-91339737]'::int4range)-('[-1797113659,-1358544564)'::int4range)))-((('[-552895804,-167472298]'::int4range)-('[-78146031,234838694]'::int4range)))))-((((('(2013253801,2086619345)'::int4range)-('[1087386024,2013253801)'::int4range)))*((('[-616216908,1537212513]'::int4range)*('[10736720,511498399)'::int4range))))))))) ASC, c1 ASC) WHERE t1.c0;
[11/09 19:18:34] CREATE INDEX i0 ON ONLY t1(c1 DESC) WHERE t1.c0;
[11/09 19:18:34] SET CONSTRAINTS ALL DEFERRED;
[11/09 19:18:34] UNLISTEN asdf;
[11/09 19:18:34] ANALYZE;
[11/09 19:18:34] SET LOCAL vacuum_cleanup_index_scale_factor=DEFAULT;
