[11/09 11:51:16] \c test;
[11/09 11:51:16] DROP DATABASE IF EXISTS database1449;
[11/09 11:51:16] CREATE DATABASE database1449 WITH ENCODING 'utf8'  TEMPLATE template0;
[11/09 11:51:16] \c database1449;
[11/09 11:51:16] CREATE TABLE IF NOT EXISTS t0(c0 FLOAT  DEFAULT (0.5619779432543163) PRIMARY KEY, c1 bigserial  CHECK ((((((((('[-692888895,-692888895]'::int4range)*('[-71960515,274684837)'::int4range)))*((('(-1273978544,1761396228)'::int4range)*('(-1603170624,253856222)'::int4range)))))*(((((NULL)*('(-1404901744,1346670651)'::int4range)))*((('[-377287037,1604908161]'::int4range)*('(-1814709795,1025031234)'::int4range)))))))<<((((((('(-2144272182,-1408570046)'::int4range)*('[-405896353,62844702)'::int4range)))*('[-1814709795,-1408570046)'::int4range)))-((((('(274543248,949372630]'::int4range)*('[-1940937516,2056001561)'::int4range)))-((('[-1173133277,1896132926)'::int4range)-('[-1380135658,-377287037]'::int4range))))))))) UNIQUE, c2 bigserial  UNIQUE CHECK ((((((((t0.c0)::VARCHAR(794))LIKE(upper('m/'))))AND((0.66889614)::BOOLEAN)))AND(CAST(0.890492375690543180866143302409909665584564208984375 AS VARCHAR(509))!~CAST(CAST(0.39519206 AS MONEY) AS VARCHAR(915))))), UNIQUE(c2), EXCLUDE (((((((((('[-663980136,665983313)'::int4range)*('(-590330138,2122091523]'::int4range)))-((('(-932237061,-663980136)'::int4range)*('[-1038556703,-405896353)'::int4range)))))*((((('(-20714230,1227468693]'::int4range)-('(-663980136,949372630)'::int4range)))-('[-266591051,2122091523]'::int4range)))))*((((((('[-1000920169,91320948)'::int4range)-('(-692888895,1896132926)'::int4range)))*((('(-1807879872,-692888895)'::int4range)*('(-1361785388,135738739)'::int4range)))))*((((('[-739803305,-590330138]'::int4range)*('[-1173819922,2122091523)'::int4range)))*((('[-266591051,787739586]'::int4range)*('(-405108265,191153722]'::int4range))))))))) ASC WITH /, ('175.202.112.178') ASC WITH -, (CAST(0.39519206 AS MONEY)) DESC NULLS LAST WITH <>), CHECK(NOT ('off')));
[11/09 11:51:16] CREATE TEMP TABLE t0(c0 money , c1 BIT VARYING(465) , CHECK(pg_jit_available())) ON COMMIT DELETE ROWS ;
[11/09 11:51:16] CREATE UNLOGGED TABLE t1(LIKE t0);
[11/09 11:51:16] CREATE TEMP TABLE t2(LIKE t0);
[11/09 11:51:16] CREATE TEMP TABLE t3(c0 TEXT , c1 DECIMAL , PRIMARY KEY(c1, c0), CHECK((t3.c0) BETWEEN ((t3.c0 COLLATE "C")) AND (t3.c0))) INHERITS(t0, t1, t2) ON COMMIT DELETE ROWS ;
[11/09 11:51:16] CREATE UNLOGGED TABLE t3(c0 REAL , c1 inet  NOT NULL PRIMARY KEY, UNIQUE(c1, c0), EXCLUDE ((lower((lower('1416602058') COLLATE "C"))) timestamp_ops WITH =, (length((('F_hN' COLLATE "en_US.utf8"))::VARCHAR)) WITH >) WITH (autovacuum_vacuum_threshold=1439426530) WHERE ((t3.c1) NOT IN (t3.c1, t3.c1, t3.c1)), CHECK((upper_inc('[470428387,1740298840)'::int4range)) IS TRUE)) PARTITION BY HASH((B'1111111111111111111111111111111110101100111100011000101010010111'), (-413873015)) WITH (autovacuum_freeze_min_age=619154599, autovacuum_vacuum_scale_factor=0.1, autovacuum_vacuum_cost_limit=856, autovacuum_freeze_table_age=1038748030, autovacuum_vacuum_cost_delay=0, parallel_workers=579);
[11/09 11:51:16] CREATE UNLOGGED TABLE t3(c0 inet ) INHERITS(t1) WITH (parallel_workers=662, autovacuum_freeze_min_age=638183234);
[11/09 11:51:16] CREATE TEMPORARY TABLE t3(LIKE t0 INCLUDING STORAGE);
[11/09 11:51:16] CLUSTER ;
[11/09 11:51:16] CREATE STATISTICS  IF NOT EXISTS s0 ON c0, c1 FROM t1;
[11/09 11:51:16] RESET ROLE;
[11/09 11:51:16] LISTEN test;
[11/09 11:51:16] ALTER TABLE  ONLY t1 NO FORCE ROW LEVEL SECURITY, ALTER c0  SET(n_distinct_inherited=-0.5, n_distinct=1.0E-4);
[11/09 11:51:16] DELETE FROM t1;
[11/09 11:51:16] INSERT INTO t2(c1) VALUES(B'101000101011010000100110010011'), (((((((((B'1111111111111111111111111111111110010001111011010110000000111111')||(B'1111111111111111111111111111111111011010011011010000111110111010')))>>(((B'1111111111111111111111111111111110111010000100110110100000100011')<<(B'1111111111111111111111111111111111010001110000100010011010010100')))))<<(((((B'11110110101011111001111011111')<<(B'1111111111111111111111111111111110101101101111001100110100010110')))&(((B'11010000101101101101111001011')#(B'1000110100011111110101101111')))))))#(((((((B'1111010010111100000110000010000')||(B'1110100111011101011101101110111')))||(((B'1111111111111111111111111111111111001010001001110101111000111000')|(B'1111110101001011111101000110010')))))>>(((((B'11101111101110111100011110')&(B'1111111111111111111111111111111111100100101101100000110001111001')))&(((B'1111111111111111111111111111111110111001111110011011000011101110')<<(B'100001110000010001010011101101'))))))))), (B'1111111111111111111111111111111111000101001001001100000001010010'), (B'1111111111111111111111111111111110101110110101001100110111010100') ON CONFLICT  DO NOTHING;
[11/09 11:51:16] RESET ROLE;
[11/09 11:51:16] CREATE UNIQUE INDEX i0 ON ONLY t3 USING GIST((t3.c1) ASC, c1);
[11/09 11:51:16] CREATE INDEX i0 ON ONLY t3(c1 quad_point_ops);
[11/09 11:51:16] CREATE INDEX i0 ON t2(c1 multirange_ops) INCLUDE(c0, c1);
[11/09 11:51:16] CREATE UNIQUE INDEX i0 ON t3(c0, c1 DESC) WHERE (((substr('␽', -1250779026, 525471831))||(CAST(t3.c0 AS INT))) SIMILAR TO lower((('-739803305')||(t3.c0))));
[11/09 11:51:16] CREATE INDEX i0 ON t0 USING GIST((t0.c1) ASC) INCLUDE(c1);
[11/09 11:51:16] CREATE UNIQUE INDEX i0 ON t2 USING GIST(((((((((('(-1940937516,-141032917)'::int4range)*('[-2049544925,1204173015]'::int4range)))*((('(-1119841575,2143044156)'::int4range)*('[-1148838531,1791655112]'::int4range)))))*('(-471588478,274543248]'::int4range)))-(((((CAST('0.144.210.212' AS int4range))*((('[-1415608390,319347709]'::int4range)-('(-527201646,-123952171)'::int4range)))))*((((('(-1589213147,1004508884]'::int4range)*('(665983313,1931559726]'::int4range)))*((('[-450394373,1270856657)'::int4range)-('(665983313,2044934157)'::int4range))))))))), (CAST('215.255.64.184' AS INT)) tsvector_ops, c1 bpchar_pattern_ops DESC) INCLUDE(c1);
[11/09 11:51:16] CREATE UNIQUE INDEX i0 ON t2((((0.34583039819121397240309079279541037976741790771484375)::VARCHAR(857) COLLATE "C"))) WHERE ((-9.3223706E8) NOT IN (0.816248, 0.8549658, 0.5619779)) IS FALSE;
[11/09 11:51:16] REINDEX TABLE CONCURRENTLY t0;
[11/09 11:51:16] CREATE MATERIALIZED VIEW v0(c0) AS (SELECT DISTINCT ON (t0.c0) ((((-2023780277)-(- (CAST(0.37664348 AS INT)))))+(pg_backend_pid())) FROM t3*, t0*, ONLY t2);
[11/09 11:51:16] CREATE MATERIALIZED VIEW v0(c0, c1) AS (SELECT '215.4.71.230', 0.2596815352299322 FROM t1*, t2*, t3* WHERE lower((t1.c0)::VARCHAR)!~CAST(((((t1.c1)<<(t3.c1)))&(t1.c1)) AS VARCHAR) ORDER BY t1.c1 ASC);
[11/09 11:51:16] CREATE MATERIALIZED VIEW v0(c0, c1, c2) AS (SELECT t1.c1, ((strpos((('>GgदJ')||('(-627089355,369040782]'::int4range)), ('-630386758' COLLATE "en_US.utf8")))-(+ (- (CAST(t3.c1 AS INT))))), pg_current_logfile() FROM t1*, ONLY t3, ONLY t2 WHERE ((convert_from('0.39519205100722643', 'UTF8'))::BOOLEAN) IS TRUE);
[11/09 11:51:16] CREATE TEMP RECURSIVE VIEW v0(c0) AS (SELECT DISTINCT '69.203.122.44' FROM ONLY t2 LIMIT 4621787607668312207);
[11/09 11:51:16] DISCARD SEQUENCES;
[11/09 11:51:16] DROP INDEX IF EXISTS i1;
[11/09 11:51:16] CREATE INDEX i1 ON t2(c0);
[11/09 11:51:16] ANALYZE( VERBOSE);
[11/09 11:51:16] CREATE STATISTICS  s1 ON c0, c1 FROM t0;
[11/09 11:51:16] SET CONSTRAINTS ALL IMMEDIATE;
[11/09 11:51:16] ALTER TABLE  t3 ENABLE ROW LEVEL SECURITY, SET WITHOUT OIDS;
[11/09 11:51:16] CREATE STATISTICS  s2 ON c0, c1 FROM t3;
[11/09 11:51:16] DISCARD SEQUENCES;
[11/09 11:51:16] COMMENT ON COLUMN t0.c0 IS NULL;
[11/09 11:51:16] SET enable_indexscan=DEFAULT;
[11/09 11:51:16] RESET ALL;
[11/09 11:51:16] RESET ROLE;
[11/09 11:51:16] UPDATE t2 SET c0 = DEFAULT WHERE pg_jit_available();
[11/09 11:51:16] ALTER TABLE  t2 ALTER c0  TYPE name;
[11/09 11:51:16] ALTER TABLE  t2 DROP c0, NO FORCE ROW LEVEL SECURITY;
[11/09 11:51:16] NOTIFY asdf;
[11/09 11:51:16] DROP STATISTICS s2;
[11/09 11:51:16] CREATE SEQUENCE IF NOT EXISTS seq AS bigint INCREMENT BY 305757017 START -761168298 NO CYCLE;
[11/09 11:51:16] CREATE TEMPORARY SEQUENCE IF NOT EXISTS seq INCREMENT -663980136 MINVALUE -1182318818 CACHE 8925065419701635603 NO CYCLE;
[11/09 11:51:16] VACUUM (ANALYZE 0, INDEX_CLEANUP);
[11/09 11:51:16] CLUSTER t0;
[11/09 11:51:16] CLUSTER t2;
[11/09 11:51:16] CLUSTER t0;
[11/09 11:51:16] CLUSTER ;
[11/09 11:51:16] TRUNCATE TABLE t1, t0 RESTART IDENTITY CASCADE;
[11/09 11:51:16] RESET ROLE;
[11/09 11:51:16] SET enable_tidscan=1;
[11/09 11:51:16] COMMIT;
[11/09 11:51:16] SET SESSION statement_timeout = 5000;
;
