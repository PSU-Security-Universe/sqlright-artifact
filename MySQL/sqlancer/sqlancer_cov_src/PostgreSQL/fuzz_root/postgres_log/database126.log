[11/07 23:32:24] \c test;
[11/07 23:32:24] DROP DATABASE IF EXISTS database126;
[11/07 23:32:24] CREATE DATABASE database126 ;
[11/07 23:32:24] \c database126;
[11/07 23:32:24] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 FLOAT  NULL, c1 integer , c2 REAL  UNIQUE PRIMARY KEY CHECK (NOT ((t0.c2) BETWEEN SYMMETRIC (t0.c1) AND (0.42136604))) NO INHERIT) PARTITION BY RANGE((- (t0.c1))numeric_ops, (((((((((B'1111111111111111111111111111111111011000011101101101010110010001')&(B'1111111111111111111111111111111111011000011101101101010110010001')))>>(B'1001101000000001000100000010110')))#(((((B'1111111111111111111111111111111111101110101011011011001101100101')<<(B'1001101000000001000100000010110')))|((t0.c2)::BIT)))))&(((((((B'1001101000000001000100000010110')|(B'1111111111111111111111111111111111110101011001101100010111001011')))||(((B'1111111111111111111111111111111111110101011001101100010111001011')>>(B'1001110100111011101000101111110')))))||(((((B'1111111111111111111111111111111110111011100001010010010011010111')#(B'1111111111111111111111111111111110111011100001010010010011010111')))<<(((B'1111111111111111111111111111111111000001111001111001101110100101')&(B'1001110100111011101000101111110'))))))))));
[11/07 23:32:24] CREATE UNLOGGED TABLE t0(c0 REAL , c1 FLOAT  PRIMARY KEY UNIQUE CHECK ((((((CAST('' AS VARCHAR))||(((B'1111111111111111111111111111111110110100101111000000100100110110')>>(B'1110000100010110010111010010000')))))||(CAST(0.67108345 AS MONEY))) SIMILAR TO to_char((0.58328587)::MONEY, CAST(TRUE AS VARCHAR)))) NO INHERIT) WITH (parallel_workers=677, autovacuum_enabled=1, autovacuum_analyze_scale_factor=0.2, autovacuum_freeze_table_age=1149715431, autovacuum_vacuum_cost_limit=9566, autovacuum_freeze_min_age=85219120);
[11/07 23:32:24] CREATE UNLOGGED TABLE t0(c0 DECIMAL , c1 inet , UNIQUE(c0), PRIMARY KEY(c0, c1) WITH (parallel_workers=521, autovacuum_vacuum_cost_delay=67, autovacuum_freeze_max_age=635082993), EXCLUDE (c1 oidvector_ops NULLS LAST WITH >, ((upper(upper('7#c3')))::VARCHAR(548)) enum_ops DESC NULLS FIRST WITH <>) WHERE ((((((((((((('CX' COLLATE "en_US.utf8") COLLATE "C"))LIKE(CAST(((B'101110101110010000110001000000')>>(B'110010000110100000010110111000')) AS VARCHAR))))AND((0.5346882288536741)::VARCHAR(136)~*((('0.4213660228187326' COLLATE "en_US.utf8"))||(('dJ' COLLATE "en_US.utf8"))))))AND(((('[783879232,1291880470]'::int4range)*('[1234256131,1657953387]'::int4range)))::VARCHAR(134)!~*(((('-177814069')||(1291880470)))||(((B'1111111111111111111111111111111110111011100001010010010011010111')>>(B'1001001010010101101111011111011')))))))AND(split_part('	', 1888169616)~lower('0.6710834597328895'))))OR(((('840566200')||(t0.c1)) COLLATE "C")!~CAST(((B'1111111111111111111111111111111110101111011100000000101100000011')#(B'1001110100111011101000101111110')) AS VARCHAR))))) WITH (autovacuum_analyze_scale_factor=0.01, autovacuum_enabled=1, autovacuum_freeze_table_age=1078399395, parallel_workers=952, autovacuum_vacuum_threshold=647110298, autovacuum_vacuum_cost_limit=9031, autovacuum_freeze_min_age=64227050, autovacuum_analyze_threshold=679755885, autovacuum_vacuum_cost_delay=71, fillfactor=12);
[11/07 23:32:24] CREATE TEMP TABLE t0(c0 DECIMAL , c1 bigserial  UNIQUE PRIMARY KEY, c2 TEXT  UNIQUE NULL DEFAULT ((substr(CAST((0.60018736)::MONEY AS VARCHAR), ((CAST('[-1041785947,1657953387]'::int4range AS INT))+(CAST('25.174.233.56' AS INT))), + (upper('[-1542122582,871891040]'::int4range))) COLLATE "C")), CHECK(TRUE), EXCLUDE (c0 NULLS FIRST WITH <>, c2 varchar_ops WITH |, c2 oid_minmax_ops NULLS FIRST WITH <>), UNIQUE(c2, c0) WITH (autovacuum_analyze_scale_factor=0.2, fillfactor=62, autovacuum_freeze_max_age=1543051888, autovacuum_analyze_threshold=572386240, autovacuum_enabled=1, autovacuum_vacuum_cost_limit=2481, autovacuum_vacuum_cost_delay=35, autovacuum_vacuum_threshold=445177635, parallel_workers=1));
[11/07 23:32:24] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 money  DEFAULT (CAST(0.8304485 AS MONEY)) PRIMARY KEY NOT NULL, c1 TEXT COLLATE "C" , c2 BIT VARYING(138) ) WITH (autovacuum_vacuum_scale_factor=0.8, autovacuum_analyze_threshold=1471701650, fillfactor=60, autovacuum_analyze_scale_factor=0.9, autovacuum_freeze_max_age=1767973021, autovacuum_vacuum_cost_delay=20, parallel_workers=501, autovacuum_vacuum_cost_limit=1989, autovacuum_freeze_table_age=1514675120, autovacuum_enabled=1, autovacuum_vacuum_threshold=1145771637) ON COMMIT PRESERVE ROWS ;
[11/07 23:32:24] CREATE UNLOGGED TABLE t1(c0 FLOAT ) PARTITION BY LIST((0.510527777570329188705500200740061700344085693359375)bpchar_pattern_ops);
[11/07 23:32:24] CREATE TABLE IF NOT EXISTS t1(LIKE t0 INCLUDING GENERATED);
[11/07 23:32:24] CREATE UNLOGGED TABLE t2(LIKE t1);
[11/07 23:32:24] CREATE TABLE IF NOT EXISTS t3(LIKE t2);
[11/07 23:32:24] CREATE TABLE t4(LIKE t0);
[11/07 23:32:24] INSERT INTO t4(c2, c0, c1) VALUES(((((B'1001101000000001000100000010110')<<(((((B'1100001100100100000010000111000')>>(B'1001011100111101011000110100100')))<<(((B'1111111111111111111111111111111111001110110000101110111000011001')>>(B'1101000010101011010000100011101')))))))>>(((((((B'1001011100111101011000110100100')||(B'1011100010110000110010100011101')))<<(((B'1111111111111111111111111111111110100111101010011101101010000101')||(B'1111111111111111111111111111111111001110110000101110111000011001')))))&(((((B'1111111111111111111111111111111110001100011100011011111100111000')>>(B'10100100011011000111001100010')))&(((B'1111111111111111111111111111111110100111101010011101101010000101')<<(B'1111111111111111111111111111111110100100000101010001001110101010')))))))), (0.08942088)::MONEY, ''), (((((((((B'1010011001001010011110100000110')<<(B'1111111111111111111111111111111110001111010011101001000100111011')))#(((B'101101101010101111001001011011')#(B'1111111111111111111111111111111110010110111011100101100010111001')))))>>(B'100010010001001010010101111001')))<<(((((CAST(0.08145518 AS BIT(586)))|(((B'1111111111111111111111111111111110001100011100011011111100111000')>>(B'1111111111111111111111111111111110101111010110110011111111011100')))))&(((((B'100100111101000100101100110111')>>(B'1111111111111111111111111111111110110011100100110100111001100011')))|(((B'1100001100100100000010000111000')&(B'10100100011011000111001100010')))))))), (0.08942088)::MONEY, (lower(upper('NP')) COLLATE "en_US.utf8"));
[11/07 23:32:24] INSERT INTO t4(c1, c0) VALUES(CAST(0.18713848 AS VARCHAR(440)), (0.393992)::MONEY);
[11/07 23:32:24] INSERT INTO t4(c1, c2) VALUES((num_nonnulls(('&à±€(DgxXBp' SIMILAR TO 'jaP#')))::VARCHAR, B'1111111111111111111111111111111111111001000011111001000100011101'), ('0.18713848800017074', B'1001101000000001000100000010110'), ((((((((B'1001000110101000010010011011001')>>(B'1111111111111111111111111111111111000001111001111001101110100101')))<<(((B'111111111111111111111111111111111111111111111111111111111111111')||(B'1111111111111111111111111111111111001110010100100111000001101100')))))::VARCHAR(826))||(+ (get_bit(CAST(1129194545 AS VARCHAR(216)), ((766177883)*(97221813)))))), B'111100000110010111101001011111'), ('174052329', ((((((((B'1111111111111111111111111111111110000010101000100101101100101010')||(B'1111111111111111111111111111111111111110100100110110100101110001')))>>(((B'101110010110111110010110101')<<(B'1111111111111111111111111111111110100111101010011101101010000101')))))||(((((B'1001000110101000010010011011001')<<(B'100100111101000100101100110111')))&(((B'1110000100010110010111010010000')>>(B'1110101111101110001011101001010')))))))<<(((((((B'1111111111111111111111111111111111100100001111010011111000101001')>>(B'1111111111111111111111111111111111001110010100100111000001101100')))<<(((B'1111111111111111111111111111111110101111010110110011111111011100')<<(B'1111111111111111111111111111111110001000000000001100011001011001')))))&(((((B'101011100100000110111101010011')>>(B'1001001100100010100000100000011')))&(((B'1100010110100100101110001101011')<<(B'1111111111111111111111111111111110101111000101000011110000110101')))))))));
[11/07 23:32:24] INSERT INTO t3(c1) VALUES(lower((lower('574924153') COLLATE "C"))), (lower(((('(-1731480848,1291880470]'::int4range)*('[840566200,1001433259]'::int4range)))::VARCHAR));
[11/07 23:32:24] UPDATE t3 SET c0 = (0.3745717)::MONEY, c2 = B'1101011101011001011100100001101';
[11/07 23:32:24] RESET ROLE;
[11/07 23:32:24] DISCARD PLANS;
[11/07 23:32:24] ALTER TABLE  t4 ALTER c1  SET(n_distinct_inherited=-1.0E-5, n_distinct=-0.5), ENABLE ROW LEVEL SECURITY, ALTER c2 SET STATISTICS 1650;
[11/07 23:32:24] DISCARD TEMP;
[11/07 23:32:24] INSERT INTO t2(c0, c2, c1) VALUES((0.8850945)::MONEY, B'1111111111111111111111111111111110101111000110111001101110110000', replace(CAST(masklen('6.217.9.42') AS VARCHAR), md5('730885971'))), (CAST(1.75044224E9 AS MONEY), B'1111111111111111111111111111111111101001000111011100000110010111', lower((((('nGI')||(CAST(0.70952284 AS MONEY))))||('59.29.155.25'))));
[11/07 23:32:24] CREATE SEQUENCE IF NOT EXISTS seq AS smallint INCREMENT -2103289046 MINVALUE 1754244435 NO MAXVALUE START 1318965630 OWNED BY NONE;
[11/07 23:32:24] CREATE SEQUENCE IF NOT EXISTS seq INCREMENT BY -1148902185 MAXVALUE -1062164449 OWNED BY NONE;
[11/07 23:32:24] DELETE FROM t2 WHERE ((t2.c1)LIKE(upper(t2.c1)));
[11/07 23:32:24] CREATE MATERIALIZED VIEW v0(c0, c1, c2, c3, c4) AS (SELECT DISTINCT ON (t2.c2) (t2.c0)::INT, t2.c2, btrim(t2.c1, t2.c1), ((CAST(t2.c0 AS INT))*(CAST(0.4436542 AS INT))), 0.06905455973145946 FROM ONLY t2 WHERE t2.c1!~t2.c1 LIMIT 1233377629063331321 OFFSET 2181365315359800458);
[11/07 23:32:24] CREATE MATERIALIZED VIEW v0(c0, c1) AS (SELECT (t2.c0)::INT, - (CAST(0.468804 AS INT)) FROM ONLY t2, t4*, t1* LIMIT 1123574529571905537);
[11/07 23:32:24] CREATE MATERIALIZED VIEW v0(c0, c1, c2) AS (SELECT t4.c0, ((t3.c2)&(((t4.c2)||(((((t2.c2)>>(t2.c2)))>>(t2.c2)))))), ((t4.c2)<<(t4.c2)) FROM ONLY t4, ONLY t3, t2* LIMIT 1972015951006773316);
[11/07 23:32:24] CREATE RECURSIVE VIEW v0(c0, c1) AS (SELECT ALL 0.39555036268038623603615633328445255756378173828125, length(t3.c1) FROM t3);
[11/07 23:32:24] UPDATE t3 SET c0 = ((0.057492394)::MONEY), c2 = (t3.c2) WHERE (get_byte(((t3.c1)||(TRUE)), CAST(1636959288 AS INT)))::BOOLEAN;
[11/07 23:32:24] UPDATE t4 SET c1 = 'wx*', c0 = (t4.c0), c2 = DEFAULT WHERE (CAST(lower_inc((('[0,1268691364)'::int4range)*('(711205451,1580785875]'::int4range))) AS BOOLEAN)) IS TRUE;
[11/07 23:32:24] SET SESSION vacuum_cleanup_index_scale_factor=DEFAULT;
