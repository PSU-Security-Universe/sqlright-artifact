[11/10 18:12:12] \c test;
[11/10 18:12:12] DROP DATABASE IF EXISTS database2380;
[11/10 18:12:12] CREATE DATABASE database2380  TEMPLATE template0;
[11/10 18:12:12] \c database2380;
[11/10 18:12:12] CREATE TEMPORARY TABLE t0(c0 boolean , c1 BIT VARYING(250)  UNIQUE NOT NULL CHECK (t0.c0) NO INHERIT PRIMARY KEY, c2 inet ) PARTITION BY LIST(((((((((('(-3357040,-3357040)'::int4range)*('(-1601254944,809226224)'::int4range)))*((('(-224271856,1431066992]'::int4range)*('(-1795610025,1431066992)'::int4range)))))*((((('(-314019544,1121908377]'::int4range)*('[-1323509621,583382992)'::int4range)))*((('(-836455332,-219293261]'::int4range)*('[-1323509621,467139577)'::int4range)))))))*((((((('(559381677,2060185334]'::int4range)*('(339041197,467139577]'::int4range)))*((('(-1264215672,718089661]'::int4range)-('[-2041241264,-929913100]'::int4range)))))-((((('(-453789894,467139577]'::int4range)-('[-1878300005,742891308]'::int4range)))*((('(-1379223856,-942049701]'::int4range)-('[-3357040,-1)'::int4range)))))))))) ON COMMIT DROP ;
[11/10 18:12:12] CREATE TEMP TABLE IF NOT EXISTS t0(c0 DECIMAL  CHECK (((((((t0.c0) BETWEEN SYMMETRIC (0.0113726926723420884712822953588329255580902099609375) AND (0.69178382832963170034901168037322349846363067626953125)) IS UNKNOWN)AND((FALSE) IS UNKNOWN)))AND((((CAST('244.124.221.153' AS VARCHAR(488)) COLLATE "C"))LIKE((((B'1111111111111111111111111111111110101000110010010010110001000101')<<(B'1111111111111111111111111111111110100000100011101100100111100000')))::VARCHAR(542)))))) NO INHERIT, PRIMARY KEY(c0)) PARTITION BY HASH((((((((((B'1001101101100000100011101000010')#(B'1111111111111111111111111111111110010000000010110110101010011011')))>>(((B'1011100001101111100110100111')>>(B'1001101101100000100011101000010')))))<<(((((B'1111111111111111111111111111111111000111110110010111011001011011')<<(B'1111111111111111111111111111111110010100111110010010101001010111')))||(((B'1000011111001110000001000111011')#(B'1110000100011011001010100001100')))))))|(((((((B'110010111011000111110111')<<(B'1111111111111111111111111111111110000110010101010010000101010000')))||(((B'1111111111111111111111111111111110001110001100111010011011111001')||(B'101110001011001010010010111011')))))&(((((B'101010110011010010110110111101')<<(B'1111111111111111111111111111111111000001110001110101110011001010')))#(((B'10000101101110100110110100100')&(B'110011010111110010111001110010'))))))))), (t0.c0));
[11/10 18:12:12] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 CHAR(13) ) PARTITION BY LIST((lower(((CAST(t0.c0 AS VARCHAR))||(+ (467139577)))))enum_ops) ON COMMIT PRESERVE ROWS ;
[11/10 18:12:12] CREATE UNLOGGED TABLE t0(c0 boolean  CHECK (t0.c0) NO INHERIT NOT NULL PRIMARY KEY UNIQUE, c1 REAL , CHECK((((0.010429746)::MONEY)::BOOLEAN) IS TRUE), EXCLUDE (c1 WITH ->, c0 ASC NULLS LAST WITH /), UNIQUE(c1) WITH (fillfactor=81, autovacuum_freeze_max_age=1585887871, parallel_workers=307, autovacuum_vacuum_scale_factor=0.5, autovacuum_freeze_table_age=738826625, autovacuum_vacuum_threshold=572021594)) PARTITION BY RANGE((lower(((('&3AJsLis' COLLATE "C"))||('173.132.123.233'))))inet_minmax_multi_ops, ('208.78.26.163')int4_ops) WITH (autovacuum_enabled=1, autovacuum_vacuum_threshold=2110859412, autovacuum_freeze_max_age=1349833462, autovacuum_vacuum_scale_factor=0.01, autovacuum_vacuum_cost_limit=8304, autovacuum_analyze_threshold=1909016604, autovacuum_vacuum_cost_delay=25, autovacuum_analyze_scale_factor=0);
[11/10 18:12:12] CREATE UNLOGGED TABLE t0(c0 BIT VARYING(185) , c1 REAL , c2 int4range  NULL DEFAULT ('[-235314604,1373079529]'::int4range)) PARTITION BY HASH(('184.221.189.44')float8_ops);
[11/10 18:12:12] CREATE UNLOGGED TABLE IF NOT EXISTS t0(c0 boolean , c1 REAL ) WITH (autovacuum_analyze_threshold=482557092);
[11/10 18:12:12] CREATE TEMP TABLE t1(LIKE t0);
[11/10 18:12:12] CREATE TEMP TABLE IF NOT EXISTS t2(LIKE t0);
[11/10 18:12:12] CREATE UNLOGGED TABLE t3(c0 BIT VARYING(462)  UNIQUE NULL DEFAULT ((0.07598103)::BIT) PRIMARY KEY) PARTITION BY RANGE((NOT ((inet_same_family('66.32.176.36', '205.212.164.233')) IS FALSE))text_ops, ((((current_schema() COLLATE "en_US.utf8"))||('44.1.137.103')))pg_lsn_ops, (num_nonnulls(strpos(('W굯q媸}' COLLATE "en_US.utf8"), (('2125966703')||('(-2041241264,-235314604)'::int4range))), (('''' COLLATE "C"))::BOOLEAN))float4_minmax_ops);
[11/10 18:12:12] CREATE UNLOGGED TABLE IF NOT EXISTS t3(c0 inet , PRIMARY KEY(c0), UNIQUE(c0), CHECK(CAST('80.167.244.163' AS VARCHAR(747))!~((('809226224')||(CAST(-897612637 AS BOOLEAN))) COLLATE "en_US.utf8")), EXCLUDE (c0 WITH >) WHERE (TRUE), FOREIGN KEY (c0) REFERENCES t2(c1) MATCH FULL ON UPDATE RESTRICT) PARTITION BY RANGE((+ (((- (1267522416))/((('JxM[F{' COLLATE "C"))::INT)))), (get_byte((to_char(0.8059893, '1121908377') COLLATE "en_US.utf8"), ((+ (-502120866))+(- (-219293261))))));
[11/10 18:12:12] CREATE TEMP TABLE IF NOT EXISTS t3(LIKE t2);
[11/10 18:12:12] CREATE TEMP TABLE t4(LIKE t1);
[11/10 18:12:12] CLUSTER ;
[11/10 18:12:12] INSERT INTO t1(c1) VALUES(8.95895675E8), (0.4912061), (0.02693339489281954);
[11/10 18:12:12] DELETE FROM t1 WHERE ((((0.07598103)::INT)-(((family('132.163.30.173'))/(+ (280448420))))))::BOOLEAN RETURNING upper((((1460307734)*(-772481453)))::VARCHAR);
[11/10 18:12:12] DELETE FROM t4 RETURNING (5.593817E8)::MONEY;
[11/10 18:12:12] RESET ROLE;
[11/10 18:12:12] UPDATE t1 SET c1 = 0.22987407107292412, c0 = DEFAULT WHERE t1.c0;
[11/10 18:12:12] RESET ALL;
[11/10 18:12:12] CREATE STATISTICS  IF NOT EXISTS s0 ON c0, c1 FROM t2;
[11/10 18:12:12] DELETE FROM t1 RETURNING lower((CAST('Infinity' AS MONEY))::VARCHAR);
[11/10 18:12:12] DELETE FROM t1 WHERE (CAST('115.136.42.167' AS VARCHAR(469)) COLLATE "en_US.utf8")!~CAST(0.5322925760674885875545214730664156377315521240234375 AS VARCHAR(9));
[11/10 18:12:12] DROP STATISTICS s0;
[11/10 18:12:12] RESET ROLE;
[11/10 18:12:12] RESET ALL;
[11/10 18:12:12] UPDATE t4 SET c0 = TRUE, c1 = 0.9302338327180901 WHERE t4.c0;
[11/10 18:12:12] VACUUM (INDEX_CLEANUP, DISABLE_PAGE_SKIPPING);
[11/10 18:12:12] DROP INDEX IF EXISTS i2, i2 CASCADE;
[11/10 18:12:12] INSERT INTO t2(c1) VALUES(0.6740031151366351);
[11/10 18:12:12] INSERT INTO t4(c1) VALUES(0.56708294), (-1.6565772E7);
[11/10 18:12:12] UNLISTEN asdf;
[11/10 18:12:12] UPDATE t1 SET c0 = DEFAULT WHERE t1.c0;
[11/10 18:12:12] DROP INDEX IF EXISTS i1;
[11/10 18:12:12] INSERT INTO t4(c0, c1) VALUES(((0.9129182871827143941345639177598059177398681640625)<(0.470798076350499972164698192500509321689605712890625)), 0.4192888388980148), (FALSE, -1.919060019E9);
[11/10 18:12:12] DROP INDEX IF EXISTS i5, i1, i0;
[11/10 18:12:12] UPDATE t1 SET c1 = DEFAULT, c0 = TRUE WHERE CAST((((((('[-314019544,1291427330)'::int4range)*('[299403732,1292656530]'::int4range)))*((('(-985069336,-462120559)'::int4range)*('[-273220686,869304410]'::int4range)))))*((((('[1064451249,1946944125]'::int4range)*('[1576376287,1888326924]'::int4range)))-('(597301312,1454928952]'::int4range)))) AS BOOLEAN);
[11/10 18:12:12] UPDATE t2 SET c0 = TRUE WHERE t2.c0;
[11/10 18:12:12] UPDATE t2 SET c1 = 0.10973598574203103 WHERE t2.c0;
[11/10 18:12:12] ALTER TABLE  ONLY t4 VALIDATE CONSTRAINT asdf, ADD CONSTRAINT F CHECK(t4.c0), ALTER c1 SET STATISTICS 3769;
[11/10 18:12:12] ALTER TABLE  ONLY t3 DROP  IF EXISTS c1 RESTRICT, DISABLE ROW LEVEL SECURITY, FORCE ROW LEVEL SECURITY, VALIDATE CONSTRAINT asdf, ALTER c0  RESET(n_distinct), REPLICA IDENTITY NOTHING, SET WITHOUT CLUSTER, ALTER c0 SET STATISTICS 290;
[11/10 18:12:12] INSERT INTO t2(c0) VALUES(TRUE);
[11/10 18:12:12] INSERT INTO t0(c1) VALUES(+ ((NULL)::INT)), (0.4079279601879232);
[11/10 18:12:12] DROP INDEX IF EXISTS i0;
[11/10 18:12:12] INSERT INTO t0(c1, c0) VALUES(NULL, FALSE), (0.32003465, (((((((('(1018708700,1198340285)'::int4range)*('[678724819,1430353107]'::int4range)))-((('[1064451249,1763336357)'::int4range)*('(-1911093462,-1539546799)'::int4range)))))-((((('[-1978444670,1935855126]'::int4range)*('(1771713135,1935855126)'::int4range)))*((('[-1294992729,-1220483372)'::int4range)-('[236008335,774677691)'::int4range)))))))<@((((('[-167305705,1460069794]'::int4range)*((('[-1878300005,1373079529]'::int4range)*('[-443325067,-375889958]'::int4range)))))-((((('(-273220686,1120777596)'::int4range)*('[-167780573,2141050268)'::int4range)))*((('[-836455332,2132292289]'::int4range)*('(-1878300005,1558883311)'::int4range)))))))));
[11/10 18:12:12] DELETE FROM t3 WHERE (((((('[-1033917450,-787137654]'::int4range)*((('(-1932064077,-1882889357)'::int4range)-('(-942049701,1867448571]'::int4range)))))*((((('(-1198410696,861875826]'::int4range)*('[-1379223856,931000133]'::int4range)))-((('[-1911093462,31517770]'::int4range)-('[1430345672,1956252111)'::int4range)))))))>>((((((('(236008335,779396003)'::int4range)*('[339041197,1635200062)'::int4range)))*((('(1430353107,1946944125]'::int4range)*('[-1565029278,1611154888]'::int4range)))))*((((('(-761202414,-462120559]'::int4range)*('[-1091585024,1045699141]'::int4range)))-((('[354742207,1537311374]'::int4range)*('(-1043899190,1460307734)'::int4range))))))));
[11/10 18:12:12] UPDATE t4 SET c0 = ((CAST(((('1064451249')||(117792335)) COLLATE "en_US.utf8") AS INT)) NOTNULL), c1 = 0.7013957273051765 WHERE t4.c0;
[11/10 18:12:12] UPDATE t3 SET c0 = (t3.c0), c1 = 0.028088811564556337 WHERE (((((('u')::VARCHAR COLLATE "en_US.utf8"))||(text('90.155.114.63'))))LIKE(((CAST((('(-1240278501,758047310]'::int4range)*('[-1919060019,44621252]'::int4range)) AS VARCHAR))||(NOT (((((((t3.c0)OR(t3.c0)))AND(t3.c0)))AND(t3.c0)))))));
[11/10 18:12:12] CREATE MATERIALIZED VIEW v0(c0, c1) AS (SELECT DISTINCT ON (t3.c0) (((((CAST('(-1426382636,-1109242073]'::int4range AS VARCHAR(936)))||(0.14424096437535871562118927613482810556888580322265625)))||(CAST(0.8059893 AS MONEY))) COLLATE "en_US.utf8"), - (- (((CAST('' AS INT))^((0.845193271964475467683541864971630275249481201171875)::INT)))) FROM t4, ONLY t3, ONLY t2, ONLY t0, t1 WHERE t4.c0);
[11/10 18:12:12] CREATE MATERIALIZED VIEW v0(c0) AS (SELECT ALL (((((((('(-803041526,881932611)'::int4range)*('[-329172279,1285915272)'::int4range)))-('[346830519,542383740)'::int4range)))-(CAST((680181935) ISNULL AS int4range))))*((((((('[-63425158,1888326924]'::int4range)-('[-1271284137,-627139504)'::int4range)))*((('(-1323509621,-1241354496]'::int4range)*('(747543474,1680574106)'::int4range)))))*((((('[322856743,2041090736]'::int4range)*('[-1463210939,562209828)'::int4range)))*('[-458577895,1722658842)'::int4range)))))) FROM ONLY t1, t0, ONLY t2, ONLY t4 LIMIT 4770608036356600764 OFFSET 1623348607375958021);
[11/10 18:12:12] CREATE OR REPLACE TEMPORARY RECURSIVE VIEW v0(c0, c1, c2) AS (SELECT ALL 0.8544593, '203.175.81.215', family(CAST(current_schema() AS INET)) FROM ONLY t3, t0*, ONLY t1, t2* WHERE ((right('0.10973598574203103', -22124408) COLLATE "C") SIMILAR TO CAST(upper('!') AS VARCHAR)) LIMIT 2095159873668055713 OFFSET 2333670401524206541);
[11/10 18:12:12] INSERT INTO t1(c0, c1) VALUES(upper_inf((((('[-1387206404,809226224)'::int4range)*('(-1896521621,714913417)'::int4range)))-('(-2017724202,1722658842)'::int4range))), 0.9467800061997501);
[11/10 18:12:12] SET wal_compression=DEFAULT;
[11/10 18:12:12] NOTIFY asdf, '''[]럐';
[11/10 18:12:12] UPDATE t1 SET c0 = 'TRUE', c1 = 0.849554561235784 WHERE CAST(0.77180787884924217934212720138020813465118408203125 AS BOOLEAN);
[11/10 18:12:12] CLUSTER t4;
[11/10 18:12:12] CLUSTER ;
[11/10 18:12:12] RESET ROLE;
[11/10 18:12:12] COMMIT;
[11/10 18:12:12] SET SESSION statement_timeout = 5000;
;
