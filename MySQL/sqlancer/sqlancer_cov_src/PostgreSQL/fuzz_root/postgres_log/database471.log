[11/08 08:44:36] \c test;
[11/08 08:44:36] DROP DATABASE IF EXISTS database471;
[11/08 08:44:36] CREATE DATABASE database471 ;
[11/08 08:44:36] \c database471;
[11/08 08:44:36] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 DECIMAL  DEFAULT (0.4651505567209881508716762255062349140644073486328125) UNIQUE, c1 money ) PARTITION BY HASH((upper((upper('C') COLLATE "C")))bpchar_bloom_ops) WITH (autovacuum_analyze_threshold=971357836, parallel_workers=166, autovacuum_vacuum_cost_limit=1182, autovacuum_vacuum_threshold=304109991, fillfactor=60, autovacuum_freeze_max_age=77833057) ON COMMIT DROP ;
[11/08 08:44:36] CREATE TEMPORARY TABLE t0(c0 bigserial  UNIQUE PRIMARY KEY, c1 DECIMAL , c2 integer ) PARTITION BY RANGE((+ (CAST(((((B'1111001010110001111001101000001')&(B'1111001010110001111001101000001')))<<(((B'1011101111000000001100000100')||(B'1111111111111111111111111111111111111101001000111101000100100101')))) AS INT)))) WITH (autovacuum_freeze_table_age=1219143743, parallel_workers=928, autovacuum_freeze_min_age=918389294, autovacuum_vacuum_cost_delay=27, autovacuum_vacuum_scale_factor=0.8, autovacuum_freeze_max_age=93625514, autovacuum_vacuum_threshold=1006851847, fillfactor=68);
[11/08 08:44:36] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 inet ) PARTITION BY LIST((0.7359714558898689)pg_lsn_bloom_ops);
[11/08 08:44:36] CREATE TEMPORARY TABLE t0(c0 serial  PRIMARY KEY) PARTITION BY HASH((- (t0.c0))) ON COMMIT PRESERVE ROWS ;
[11/08 08:44:36] CREATE TABLE t0(c0 REAL , c1 REAL ) WITH (autovacuum_analyze_scale_factor=0.01, autovacuum_vacuum_cost_limit=1303, autovacuum_analyze_threshold=798422754, fillfactor=84, autovacuum_enabled=0, autovacuum_freeze_max_age=569585434, autovacuum_vacuum_scale_factor=0.01, autovacuum_vacuum_cost_delay=63, autovacuum_freeze_table_age=1153213468, autovacuum_vacuum_threshold=2068840552);
[11/08 08:44:36] CREATE UNLOGGED TABLE t1(c0 REAL  UNIQUE NOT NULL, c1 bigserial );
[11/08 08:44:36] CREATE TEMP TABLE t2(LIKE t0);
[11/08 08:44:36] CREATE TEMPORARY TABLE IF NOT EXISTS t3(LIKE t2 INCLUDING CONSTRAINTS INCLUDING IDENTITY INCLUDING CONSTRAINTS);
[11/08 08:44:36] UPDATE t1 SET c1 = 196870916, c0 = DEFAULT WHERE ((((((0.55446497922728443796813735389150679111480712890625)::INT)/(num_nulls(CAST(0.28785542 AS MONEY), t1.c1, t1.c1))))/(t1.c1))) BETWEEN (((t1.c1)%(t1.c1))) AND (num_nonnulls(t1.c0, (('[-991740773,1882876381)'::int4range)&&('[-1189278215,1268338556)'::int4range))));
[11/08 08:44:36] UPDATE t2 SET c0 = DEFAULT, c1 = DEFAULT WHERE (0.6871275189715913) NOT IN (lower('(-991740773,1882876381]'::int4range), t2.c0, t2.c1);
[11/08 08:44:36] ANALYZE;
[11/08 08:44:36] CREATE STATISTICS  IF NOT EXISTS s0 (mcv) ON c0, c1 FROM t3;
[11/08 08:44:36] UPDATE t3 SET c1 = 0.8891582665228761, c0 = (t3.c0) WHERE CAST(((t3.c1)>(((0.9307194)::MONEY)::INT)) AS BOOLEAN);
[11/08 08:44:36] UPDATE t3 SET c1 = 0.8891582665228761, c0 = DEFAULT WHERE pg_is_other_temp_schema();
[11/08 08:44:36] ALTER TABLE  t1 REPLICA IDENTITY NOTHING;
[11/08 08:44:36] SET SESSION geqo_selection_bias=1.5;
[11/08 08:44:36] DELETE FROM t3 WHERE (((((((('(-950481871,1506950384)'::int4range)*('(-1189278215,-1017477474]'::int4range)))*((('(-1189278215,1882876381]'::int4range)-('(-898553491,-1]'::int4range)))))-((((('[-1603787824,621162338)'::int4range)*('[-950481871,1162253909)'::int4range)))-(range_merge('[197112917,1815474054)'::int4range, '(-991740773,121541992]'::int4range))))))-|-((((((('[-1017477474,767529395]'::int4range)-('(-2045777720,1830975970]'::int4range)))*((('(-1456965668,1321012504)'::int4range)*('[-1733801308,1830975970]'::int4range)))))*((((('(-1559023412,2105389865]'::int4range)-('(-950481871,-570333009)'::int4range)))-((('(-1456965668,2105389865]'::int4range)-('[-112309573,286384019)'::int4range))))))));
[11/08 08:44:36] DELETE FROM t3 WHERE ((((((('>F')||(B'110101010010110110101001111110')))||((('[-366710829,2035872577)'::int4range)*('[-709754473,1405196361)'::int4range)))))||(0.11042169494994091838435679164831526577472686767578125)) SIMILAR TO (CAST(-366710829 AS VARCHAR) COLLATE "C"));
[11/08 08:44:36] DELETE FROM ONLY t2 WHERE CAST((((('(-898553491,-51688726]'::int4range)-('[-1126351178,1]'::int4range)))*((('(-210304612,-210304612]'::int4range)*('(-1985809245,1321012504]'::int4range)))) AS VARCHAR)~('767529395' COLLATE "en_US.utf8") RETURNING upper_inf((((('[-1508143746,1327222955]'::int4range)*('[-1329926273,1321012504]'::int4range)))*((('[-1335624580,-709754473)'::int4range)*('[-1712673793,-1189278215]'::int4range)))));
[11/08 08:44:36] INSERT INTO t3(c0) VALUES(0.8222097602499726), (1.882876381E9);
[11/08 08:44:36] INSERT INTO t2(c0, c1) VALUES(0.5546426048413823, 0.5193260754918925), (0.9307194053241765, 2.86384019E8);
[11/08 08:44:36] DELETE FROM ONLY t3 RETURNING ((((((((B'11111010110110100001101101')#(B'1111111111111111111111111111111110100101010001010110100110001111')))|(((B'1110001001001010011110100111')&(B'10100001011111001010100010010')))))&(((((B'1111111111111111111111111111111110000100000101100100111100100001')||(B'1111111111111111111111111111111110001000111001000010100011001010')))#(B'111000100011110000101111000000')))))#(((((((B'1111111111111111111111111111111110001110011010110101111010000100')>>(B'10001010100100110110001000100')))&(((B'1111111111111111111111111111111111001010011100010010100101101101')||(B'1111111111111111111111111111111111011001001000111000111111101111')))))>>(((((B'1111111111111111111111111111111110010000111110111001110110010011')|(B'1110001001001010011110100111')))||(((B'1011101111111011010001010101')|(B'1111111111111111111111111111111110011000101010000100101010100100'))))))));
[11/08 08:44:36] DELETE FROM t2;
[11/08 08:44:36] DISCARD SEQUENCES;
[11/08 08:44:36] SET LOCAL geqo_generations=1386235396;
[11/08 08:44:36] RESET ALL;
[11/08 08:44:36] UNLISTEN *;
[11/08 08:44:36] ANALYZE( SKIP_LOCKED) t1(c1);
[11/08 08:44:36] SET LOCAL join_collapse_limit=705842811;
[11/08 08:44:36] DISCARD SEQUENCES;
[11/08 08:44:36] INSERT INTO t1(c0) OVERRIDING USER VALUE VALUES(0.18737672570847363), (0.9003750628153672), (783873824);
[11/08 08:44:36] CLUSTER t1;
[11/08 08:44:36] CLUSTER ;
[11/08 08:44:36] CREATE STATISTICS  s1 ON c1, c0 FROM t3;
[11/08 08:44:36] UPDATE t2 SET c1 = 0.47730817668172265 WHERE (CAST('168.140.182.16' AS INT)) BETWEEN SYMMETRIC (num_nonnulls(t2.c0, (0.8814198143658951156709235874586738646030426025390625)::INT)) AND (0.21530903842227045);
[11/08 08:44:36] UPDATE t2 SET c1 = DEFAULT WHERE TRUE;
[11/08 08:44:36] DELETE FROM ONLY t3;
[11/08 08:44:36] SET CONSTRAINTS ALL IMMEDIATE;
[11/08 08:44:36] UPDATE t2 SET c0 = 0.7095143557610905, c1 = DEFAULT WHERE TRUE;
[11/08 08:44:36] DELETE FROM t1 WHERE ((((('>F')||(t1.c1))) NOT IN (('')::VARCHAR, CAST(0.04064945571291211923181663223658688366413116455078125 AS VARCHAR(233)), lower('0ìª€D')))OR(((((((upper_inf((('[-267744425,-210304612]'::int4range)*('[-1533299838,768141118)'::int4range))))AND(NOT ((('')LIKE(' '))))))AND(pg_jit_available())))OR((((('gal+Lh')||('178.30.130.192')))LIKE(chr(t1.c1))))))) RETURNING (0.33239278797510340979215470724739134311676025390625)::INT;
[11/08 08:44:36] DELETE FROM ONLY t0;
[11/08 08:44:36] RESET ROLE;
[11/08 08:44:36] CREATE INDEX i0 ON t3 USING HASH(c1);
[11/08 08:44:36] NOTIFY test, 'Mol!QFb0F';
[11/08 08:44:36] RESET ROLE;
[11/08 08:44:36] DISCARD SEQUENCES;
[11/08 08:44:36] COMMIT;
[11/08 08:44:36] SET SESSION statement_timeout = 5000;
;
