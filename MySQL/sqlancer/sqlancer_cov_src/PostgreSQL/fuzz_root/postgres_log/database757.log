[11/08 15:53:41] \c test;
[11/08 15:53:41] DROP DATABASE IF EXISTS database757;
[11/08 15:53:41] CREATE DATABASE database757 ;
[11/08 15:53:41] \c database757;
[11/08 15:53:41] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 bigserial , PRIMARY KEY(c0)) PARTITION BY HASH((((((('%' COLLATE "en_US.utf8"))::VARCHAR(372) COLLATE "C"))LIKE((((('f[5YCFA#' COLLATE "en_US.utf8") COLLATE "en_US.utf8"))||(CAST(0.40073985 AS MONEY)))))), ((((((((('[-663048495,297417980)'::int4range)*('(699092280,1317381166]'::int4range)))*((('(-1127741458,1317381166]'::int4range)-('(-1500857361,-663048495]'::int4range)))))-((((('[-1500857361,313272727)'::int4range)-('(-1500857361,1317381166)'::int4range)))*((('(-1874099465,1637247333]'::int4range)*('(-396595589,1637247333)'::int4range)))))))-('[-1443297536,313272727)'::int4range)))) ON COMMIT DROP ;
[11/08 15:53:41] CREATE UNLOGGED TABLE IF NOT EXISTS t0(c0 smallint  GENERATED  ALWAYS AS (t0.c0) STORED, c1 BIT VARYING(497)  DEFAULT (((((((((B'1111111111111111111111111111111110110001100011010110011000000100')#(B'1111111111111111111111111111111110010101001011010111000010110001')))>>(((B'1111111111111111111111111111111111101000010111000110111001111011')<<(B'1111111111111111111111111111111110100110100010101011101111101111')))))|(((((B'1111111111111111111111111111111110110000100111100111010010011101')&(B'1111111111111111111111111111111111101000010110011011001011110010')))|(((B'1001110100001011010010000101110')#(B'1111111111111111111111111111111110010101001011010111000010110001')))))))#(((((((B'1111111111111111111111111111111111100001100111101000000110010011')#(B'1100001100101100110100101100101')))<<(((B'1111111111111111111111111111111110110000100111100111010010011101')#(B'110101111011101101001100110000')))))&(((((B'1100001100101100110100101100101')<<(B'1110111101001100110001111001000')))>>(((B'1010010011000011100010111110010')|(B'1111111111111111111111111111111111110110010001101010101101101001'))))))))), c2 money  DEFAULT (CAST(-1.79218419E9 AS MONEY))) PARTITION BY RANGE((upper((upper('0.40073984484003866') COLLATE "C")))text_pattern_ops, (t0.c0)record_ops);
[11/08 15:53:41] CREATE UNLOGGED TABLE IF NOT EXISTS t0(c0 int4range , UNIQUE(c0)) PARTITION BY LIST((- (((((abs(2018351314))%(1637247333)))+(upper(t0.c0)))))) WITH (autovacuum_freeze_max_age=1146581650, autovacuum_freeze_table_age=213063989, autovacuum_analyze_scale_factor=0.1, fillfactor=81, autovacuum_vacuum_cost_limit=5645, autovacuum_vacuum_scale_factor=1, autovacuum_enabled=0, autovacuum_analyze_threshold=311231954, autovacuum_vacuum_threshold=992556722);
[11/08 15:53:41] CREATE UNLOGGED TABLE t0(c0 boolean , c1 BIT VARYING(337)  UNIQUE NULL DEFAULT (((((B'110100101001001001100100111110')&(((((B'110101111011101101001100110000')>>(B'10001101110100011110011111100')))<<(((B'1111111111111111111111111111111110010101001011010111000010110001')||(B'1111111111111111111111111111111111111111111111111111111111111111')))))))|(((((((B'1111111111111111111111111111111110110110100011101100010100110010')<<(B'111100001100010010100101100000')))<<(((B'1010101001000011001010101101')#(B'1111111111111111111111111111111111011000011110101010111011010001')))))|(((((B'1111111111111111111111111111111111001011011010000101100010100111')||(B'1111111111111111111111111111111110010110000111011011001111001000')))||(((NULL)>>(B'1111111111111111111111111111111110011111100000110010011011000010'))))))))), PRIMARY KEY(c0));
[11/08 15:53:41] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 REAL  NULL DEFAULT (0.022841118), c1 DECIMAL , PRIMARY KEY(c0, c1) WITH (autovacuum_vacuum_cost_limit=4663, autovacuum_vacuum_threshold=676520378, autovacuum_enabled=0, autovacuum_vacuum_scale_factor=0, parallel_workers=41, fillfactor=79, autovacuum_freeze_table_age=916749693, autovacuum_analyze_threshold=1408495235), CHECK(((((CAST('131.151.4.200' AS VARCHAR))||((TRUE)::INT)) COLLATE "C") SIMILAR TO rtrim(rtrim('L')))), EXCLUDE (c1 DESC WITH >)) ON COMMIT DROP ;
[11/08 15:53:41] CREATE UNLOGGED TABLE t0(c0 int4range  NOT NULL PRIMARY KEY CHECK (FALSE) UNIQUE, c1 name COLLATE "C"  NOT NULL CHECK ((((t0.c1) IN (upper(t0.c1), ((t0.c1)||(FALSE)), (t0.c1 COLLATE "C")))AND((CAST(((B'10011001110010100111011011010')#(B'1111111111111111111111111111111110001000000110010001111010000011')) AS BOOLEAN)) IS UNKNOWN))) DEFAULT (((((((('e5p3>')||('(-2011619709,727516204)'::int4range)))||(CAST(0.6706521 AS MONEY))) COLLATE "en_US.utf8"))||('209.83.83.167'))), c2 BIT VARYING(349) ) PARTITION BY LIST((0.399914059539630439843449494219385087490081787109375)time_bloom_ops);
[11/08 15:53:41] CREATE TABLE IF NOT EXISTS t0(c0 BIT VARYING(24) , c1 int4range , c2 TEXT COLLATE "en_US.utf8"  PRIMARY KEY NOT NULL) PARTITION BY LIST((CAST(0.1189033 AS MONEY)));
[11/08 15:53:41] CREATE TABLE IF NOT EXISTS t0(c0 inet  NOT NULL UNIQUE PRIMARY KEY, c1 bigserial  UNIQUE CHECK ((((((((('[-1443297536,1315746732]'::int4range)-('[-644516573,180092456]'::int4range)))*((('[-509705837,43038161]'::int4range)*('(-1429870096,1153268662]'::int4range)))))*((((('[-397299278,727516204]'::int4range)*('[-1593175013,-1256757420]'::int4range)))-((('(-1331792739,1796311825]'::int4range)*('[-791139330,1794657713]'::int4range)))))))&<((((((('(1796311825,9223372036854775807)'::int4range)*('(-1220024484,844893861)'::int4range)))-((('[-663048495,-190664837]'::int4range)*('[-1691682148,-1304314986]'::int4range)))))*((((('(-752949149,941723238)'::int4range)-('(1509066059,2018351314]'::int4range)))-((('(-1618794814,-1127741458)'::int4range)*('(178533037,1246117767]'::int4range))))))))) NO INHERIT);
[11/08 15:53:41] CREATE TABLE t0(c0 inet  UNIQUE CHECK (inet_same_family('65.1.30.130', t0.c0)) NO INHERIT NOT NULL PRIMARY KEY) PARTITION BY RANGE(('83.100.82.1'), ((1.79465766E9)::MONEY)int4_ops) WITH (autovacuum_vacuum_threshold=941264758, fillfactor=21, autovacuum_freeze_max_age=260351770, parallel_workers=1004, autovacuum_analyze_threshold=1057924564, autovacuum_freeze_table_age=1982931900, autovacuum_freeze_min_age=745071136, autovacuum_enabled=0, autovacuum_vacuum_cost_limit=8260);
[11/08 15:53:41] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 BIT VARYING(342)  DEFAULT (((((((((B'1111111111111111111111111111111111100111101110100001101001011001')&(B'1111111111111111111111111111111111011100111000001110101011001000')))#(((B'1111111111111111111111111111111110110111101001110111100111100000')|(B'1111111111111111111111111111111110111010010000001110110111111000')))))|(((((B'1111111111111111111111111111111111010100011111111001001010001101')#(B'111111111111111111111111111111111111111111111111111111111111111')))|(((B'1111111111111111111111111111111110011000001010100101110011011101')|(B'1111111111111111111111111111111110111111011011011101100110011101')))))))|(((((((B'1111111111111111111111111111111110101010111100110111011111111111')||(B'1110101000011011101110110101100')))#(((B'111000001011001100100100010011')&(B'100111001010001100110100001101')))))||(((((B'1111111111111111111111111111111110110010110111100001011110000010')&(B'1111111111111111111111111111111110001010011110010101000101110100')))|(((B'1111111111111111111111111111111111111000011110100101111101111011')<<(B'1111111111111111111111111111111111111111111111111111111111111111'))))))))) PRIMARY KEY, EXCLUDE (c0 WITH <>, c0 date_ops DESC NULLS LAST WITH /), UNIQUE(c0)) PARTITION BY LIST((1.31738112E9));
[11/08 15:53:41] CREATE TEMP TABLE t0(c0 VARCHAR(401) , CHECK((B'1111111101111100111001010101001') IN (((((B'1111111111111111111111111111111110011111100000110010011011000010')|(B'10001111111111011011001010')))#(((B'1010011111011001010110100110')&(B'1010011111011001010110100110')))), ((((B'1111111111111111111111111111111111101101111010111001011111111101')>>(B'1111111111111111111111111111111111011100111000001110101011001000')))&(B'1111111111111111111111111111111111010000110110000010101111111110')), ((((B'1111111111111111111111111111111111010010010000110001000000100000')||(B'1111111111111111111111111111111111010100101010100111000001000010')))||(((B'1111111111111111111111111111111111101011011010111000100100001010')>>(B'110001100111011100101011001000')))), ((((B'1111111111111111111111111111111110100001000101000000001001101111')<<(B'1100010001110111100011001111')))#(((B'100100001001010110011010001100')<<(B'1111111111111111111111111111111111010011000111101110100001100011')))))), EXCLUDE (('255.95.200.90') DESC NULLS FIRST WITH <->, c0 pg_lsn_bloom_ops NULLS LAST WITH !~) WITH (autovacuum_analyze_scale_factor=0.1, autovacuum_freeze_table_age=569928616) WHERE ((((((((('[-1108041511,202696560]'::int4range)*('[-190664837,445754787)'::int4range)))*((('(1697504950,2136028494]'::int4range)*('(-729836915,-608055314]'::int4range)))))-((((('[727516204,1035052460)'::int4range)*('[-254640130,411397146]'::int4range)))*((('(-1740452758,151461727]'::int4range)-('(-1127741458,217615684)'::int4range)))))))@>((((((('(-627995848,659023851)'::int4range)-('(28492545,509110571)'::int4range)))*((('[-1492729505,36806394]'::int4range)*('[-1426884609,-693392774]'::int4range)))))-((((('[-1001798128,782972914)'::int4range)*('(-604305035,1995990342]'::int4range)))*((('(397595475,1435951985)'::int4range)-('(-1792184143,-190664837]'::int4range))))))))), PRIMARY KEY(c0), UNIQUE(c0)) PARTITION BY LIST((((((((((B'1111111111111111111111111111111111111111100001000000010011010111')#(B'1111111111111111111111111111111110011101110011010000101110111000')))>>(((B'1111111111111111111111111111111110101100010001100001010101011111')>>(B'1111111111111111111111111111111110100011100101100010001001001011')))))|(((((B'1111111111111111111111111111111111001101011000001011111110101010')||(B'11011100000000010011011111001')))>>(((B'1111111111111111111111111111111111101101111010111001011111111101')|(B'1111111111111111111111111111111110010110111110101010111100100010')))))))||(((((((B'1111111111111111111111111111111110001010011110010101000101110100')#(B'1111111111111111111111111111111111101011101110101011110101000010')))|(((B'111011010000111011011001')<<(B'1111111111111111111111111111111111010001000111010000001001101000')))))>>(((B'1100010001110111100011001111')||(((B'1110101000011011101110110101100')>>(B'1111111111111111111111111111111110011000010011010000110011100000')))))))))oid_ops) WITH (fillfactor=49, autovacuum_enabled=1, autovacuum_analyze_scale_factor=0.5, autovacuum_freeze_table_age=520061602, autovacuum_vacuum_cost_delay=80, autovacuum_vacuum_scale_factor=0.9) ON COMMIT PRESERVE ROWS ;
[11/08 15:53:41] CREATE TABLE t0(c0 BIT VARYING(258)  NOT NULL) PARTITION BY LIST((CAST(0.71752226 AS MONEY)));
[11/08 15:53:41] CREATE TABLE IF NOT EXISTS t0(c0 inet  CHECK (((t0.c0)>('98.211.47.114'))) NO INHERIT DEFAULT ('130.10.21.177'), c1 FLOAT , CHECK(CAST('158.242.218.113' AS VARCHAR(802))~(rpad(127435812, '-589239608') COLLATE "C")), EXCLUDE ((- (CAST(((B'111101011100010110011011101010')<<(((B'111101001110101110111110011000')<<(B'1111111111111111111111111111111111101011000111001011101101110011')))) AS INT))) timestamptz_minmax_ops DESC WITH <=, (length(CAST(0.15934576 AS VARCHAR))) int8_ops ASC NULLS FIRST WITH *), PRIMARY KEY(c0, c1)) WITH (parallel_workers=536, autovacuum_freeze_min_age=709105262, autovacuum_enabled=1, autovacuum_freeze_max_age=1014691123, autovacuum_vacuum_cost_delay=20, fillfactor=52, autovacuum_analyze_scale_factor=0.5, autovacuum_vacuum_threshold=334226159, autovacuum_vacuum_cost_limit=108);
[11/08 15:53:41] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 DECIMAL , c1 boolean , UNIQUE(c0, c1)) PARTITION BY RANGE((NOT (t0.c1)), ('Et.f
F'), (+ (((((num_nonnulls(B'1111111111111111111111111111111110010100000111001000010111001101'))+(get_bit('-1874099465', -397299278))))-(((CAST(6.9909228E8 AS INT))+(CAST('53.27.245.172' AS INT))))))), (convert_from(((0.5803492)::MONEY)::VARCHAR, 'UTF8'))) WITH (autovacuum_vacuum_threshold=2048889219, autovacuum_freeze_min_age=129074064, autovacuum_enabled=1, autovacuum_freeze_table_age=1552951265, autovacuum_analyze_threshold=901204380, fillfactor=57, autovacuum_analyze_scale_factor=1, autovacuum_freeze_max_age=738043961) ON COMMIT DROP ;
[11/08 15:53:41] CREATE UNLOGGED TABLE IF NOT EXISTS t0(c0 TEXT COLLATE "en_US.utf8"  UNIQUE, CHECK(FALSE), EXCLUDE (c0 ASC WITH >) WITH (autovacuum_freeze_min_age=790701970, autovacuum_vacuum_scale_factor=0.01, autovacuum_freeze_max_age=1319604890), PRIMARY KEY(c0)) PARTITION BY RANGE(('238.106.68.13'), (CAST((0.9812029567578009)::INT AS INT))timestamp_minmax_ops, (0.8051414122830025110744145422358997166156768798828125), ((((((- (1794657713))::BIT(124))#(((((B'110000101111010101011110001010')#(B'1010101001000011001010101101')))<<(((B'1101100101100001100000001')&(B'1010010011111100011011011010011')))))))>>(((CAST(((B'1001110100001011010010000101110')|(B'1001000001110001111101011111')) AS BIT(385)))<<(B'101011111101000101000001000010')))))money_ops) WITH (autovacuum_vacuum_threshold=2029840939, autovacuum_vacuum_cost_delay=50, autovacuum_enabled=1);
[11/08 15:53:41] CREATE TEMPORARY TABLE t0(c0 DECIMAL ) PARTITION BY HASH(('97.237.95.18')int2_minmax_multi_ops, (t0.c0)timetz_minmax_multi_ops, ((floor())::INT)int2_ops) ON COMMIT DELETE ROWS ;
[11/08 15:53:41] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 VARCHAR(407)  DEFAULT (((((((-1492729505)::VARCHAR)||(CAST(0.6801434 AS MONEY))) COLLATE "C"))||((0.4202029995031562048524165220442228019237518310546875) BETWEEN SYMMETRIC (0.25919488129274104171173576105502434074878692626953125) AND (0.89719844945351223675089613607269711792469024658203125)))) PRIMARY KEY UNIQUE NULL) PARTITION BY LIST(((0.71752226)::MONEY));
[11/08 15:53:41] CREATE TABLE IF NOT EXISTS t0(c0 REAL  PRIMARY KEY NULL DEFAULT (0.97894984) UNIQUE, c1 DECIMAL  DEFAULT (0.176552091511072983820440640556626021862030029296875) NOT NULL);
[11/08 15:53:41] CREATE TABLE t1(c0 TEXT  PRIMARY KEY DEFAULT ('<') NULL UNIQUE, c1 money , EXCLUDE ((t1.c0) DESC WITH <<|, c1 kd_point_ops DESC WITH @>), UNIQUE(c1)) INHERITS(t0) PARTITION BY RANGE((0.29107295996414894734272138521191664040088653564453125)time_ops, (0.8606444723622992));
[11/08 15:53:41] CREATE TEMP TABLE t1(c0 money  NOT NULL PRIMARY KEY, EXCLUDE (c0 WITH <<, (((((((((B'11101001010001000101000011110')||(B'1111101000011011100101001000111')))<<(((B'1000001101100111000100101001100')#(B'1111111111111111111111111111111110101001111110010000011100000000')))))|(((((B'111011100110010001111011111100')|(B'110100101001001001100100111110')))&(((B'1111111111111111111111111111111110100110100010101011101111101111')||(B'1111111111111111111111111111111110011011001001001010010100110101')))))))|(((((((B'1111111111111111111111111111111110101001110001110010111111101101')#(B'1111111111111111111111111111111111101101111010111001011111111101')))<<(((B'1111111111111111111111111111111110011010000011000101101000111111')>>(B'1111111111111111111111111111111110010110000111011011001111001000')))))||(((((B'1111111111111111111111111111111111100111110001101100100010011010')#(B'1111111111111111111111111111111111101101111010111001011111111101')))||(((B'1110111110000100100101100011101')<<(B'1111111111111111111111111111111111100001100111101000000110010011'))))))))) ASC NULLS FIRST WITH ->>), FOREIGN KEY (c0) REFERENCES t0(c1) MATCH SIMPLE ON UPDATE SET NULL DEFERRABLE, UNIQUE(c0)) PARTITION BY RANGE((1.7853304E8)timetz_minmax_ops);
[11/08 15:53:41] CREATE TABLE t1(c0 money  CHECK ((((0.7837085)::MONEY)>=(t1.c0))) NO INHERIT, EXCLUDE (c0 record_ops WITH -, (+ (- (upper('(-1917019172,202696560]'::int4range)))) ASC NULLS FIRST WITH @>) WHERE ((CAST((0.86064446)::MONEY AS INT))::BOOLEAN), UNIQUE(c0)) WITH (autovacuum_vacuum_threshold=1284021669);
[11/08 15:53:41] CREATE TABLE IF NOT EXISTS t1(c0 inet  NULL PRIMARY KEY UNIQUE, c1 TEXT );
[11/08 15:53:41] CREATE UNLOGGED TABLE t2(c0 int4range  UNIQUE DEFAULT (((CAST(CAST((('[-2071274335,-1357683266)'::int4range)<<('[-362541722,1736356367]'::int4range)) AS INT) AS int4range))*(CAST(((((B'1110100000010001011010001111101')&(B'1111111111111111111111111111111110101011000010011111110100111010')))<<(((B'1111111111111111111111111111111110011001011101111111000010000110')&(B'1101000101001011101010100000110')))) AS int4range)))), c1 BIT VARYING(93) ) INHERITS(t0, t1) WITH (autovacuum_analyze_scale_factor=0.9, autovacuum_vacuum_cost_limit=6816, autovacuum_vacuum_scale_factor=1, autovacuum_analyze_threshold=254457116, autovacuum_vacuum_threshold=1805384262, autovacuum_enabled=1, autovacuum_vacuum_cost_delay=65);
[11/08 15:53:41] CREATE TABLE t2(LIKE t1 INCLUDING CONSTRAINTS);
[11/08 15:53:41] CREATE TABLE IF NOT EXISTS t3(LIKE t2 INCLUDING STORAGE INCLUDING STATISTICS);
[11/08 15:53:41] INSERT INTO t1(c0, c1) VALUES('204.224.255.223', '727516204');
[11/08 15:53:41] DELETE FROM t3 RETURNING get_byte(t3.c1, num_nulls(6.5902387E8));
[11/08 15:53:41] DELETE FROM ONLY t1 RETURNING ((((((((B'1111111111111111111111111111111110011110011010001011111001001111')<<(B'1111111111111111111111111111111110100100100010011010111110111111')))<<(((B'1111111111111111111111111111111110010110011000110101110111010000')>>(B'1111111111111111111111111111111110000101111100010010100100010011')))))>>(((((B'11000100001010110110000011010')<<(B'1111111111111111111111111111111111111000000001111011111111100101')))>>(((B'1111111111111111111111111111111110101111100100110001011100000101')&(B'10101100100110101111010100011')))))))||(((((((B'1111111111111111111111111111111110001111101101011111101101100011')<<(B'1111111111111111111111111111111110110011000011000111110101110101')))|(((B'1000111011100111010011100110110')||(B'1111111111111111111111111111111110010000010010111000001011110111')))))#(((((B'1100010001110111100011001111')#(B'1111111111111111111111111111111110110001100101101101001100000101')))<<(((B'1111111111111111111111111111111111111101111001001111010111110001')>>(B'1010011110011110110110101010010'))))))));
[11/08 15:53:41] DELETE FROM t3 WHERE FALSE;
[11/08 15:53:41] RESET ROLE;
[11/08 15:53:41] DELETE FROM t1 RETURNING upper(t1.c1);
[11/08 15:53:41] INSERT INTO t1(c0, c1) VALUES('19.82.160.113', '!YC4/a'), ('56.255.206.102', (pg_current_logfile() COLLATE "C")), ('36.101.75.26', ((((((('[-859158994,318266125]'::int4range)*('(217615684,1896306937)'::int4range)))-((('[452993468,954093097)'::int4range)-('[-1691682148,1315746732)'::int4range)))))*((((('[-608055314,1531884483]'::int4range)*('(-1697888850,1241110743)'::int4range)))-((('[1342234996,1518761110)'::int4range)*('[-1331792739,1521090530)'::int4range)))))))::VARCHAR(812));
[11/08 15:53:41] CLUSTER ;
[11/08 15:53:41] CLUSTER ;
[11/08 15:53:41] UPDATE t3 SET c1 = 'Mg#zJ' WHERE TRUE;
[11/08 15:53:41] CREATE STATISTICS  IF NOT EXISTS s0 (ndistinct, mcv, dependencies) ON c1, c0 FROM t2;
[11/08 15:53:41] INSERT INTO t3(c1, c0) VALUES('1509066059', '46.109.24.44');
[11/08 15:53:41] RESET ALL;
[11/08 15:53:41] INSERT INTO t1(c0, c1) VALUES('187.17.117.10', (((length('-948091309'))::VARCHAR(800))||(0.7667806704622946))) ON CONFLICT  DO NOTHING;
[11/08 15:53:41] DISCARD PLANS;
[11/08 15:53:41] RESET ROLE;
[11/08 15:53:41] UPDATE t3 SET c1 = DEFAULT, c0 = '48.133.98.186' WHERE ((((((('[-610377997,1359122975)'::int4range)*('[-702708449,-86850861]'::int4range)))*((('(-1079969966,40096426)'::int4range)*('[178533037,2095850444]'::int4range)))))*((((('[-1943795109,-246590352]'::int4range)*('[-1170149896,297417980)'::int4range)))*((('(-1500857361,421303325]'::int4range)-('(-2080846215,1317381166]'::int4range)))))))::BOOLEAN;
[11/08 15:53:41] UPDATE t1 SET c0 = DEFAULT WHERE CAST(NULL AS VARCHAR)~t1.c1;
[11/08 15:53:41] LISTEN asdf;
[11/08 15:53:41] CREATE SEQUENCE IF NOT EXISTS seq CACHE 3929678490739882836 CYCLE;
[11/08 15:53:41] UPDATE t3 SET c0 = (t3.c0), c1 = '' WHERE TRUE;
[11/08 15:53:41] RESET ALL;
[11/08 15:53:41] CREATE STATISTICS  s1 ON c0, c1 FROM t3;
[11/08 15:53:41] INSERT INTO t3(c0, c1) VALUES('200.0.87.44', ''), ('74.190.171.31', (CAST(-7.27027646E8 AS VARCHAR) COLLATE "C")), ('97.209.234.1', upper(upper(')'))), ('29.169.28.218', '');
[11/08 15:53:41] RESET ROLE;
[11/08 15:53:41] SET CONSTRAINTS ALL IMMEDIATE;
[11/08 15:53:41] INSERT INTO t3(c1, c0) VALUES(replace((((B'1111111111111111111111111111111110111100111000011010101001000100')||(B'1011001110010000110000011011')))::VARCHAR(568), (convert_from('aぱBqEk|y', 'UTF8') COLLATE "en_US.utf8")), '10.32.242.218'), ('', '248.0.112.102');
[11/08 15:53:41] INSERT INTO t3(c0) OVERRIDING USER VALUE VALUES('200.30.113.200'), ('17.83.170.201'), ('141.135.123.190');
[11/08 15:53:41] UPDATE t2 SET c0 = '163.182.94.207' WHERE CAST(ascii((t2.c1 COLLATE "C")) AS BOOLEAN);
[11/08 15:53:41] DROP INDEX IF EXISTS i1, i2;
[11/08 15:53:41] INSERT INTO t0(c0) OVERRIDING SYSTEM VALUE VALUES(0.5200045983378854), (0.9116437620519587) ON CONFLICT (c0) DO NOTHING;
[11/08 15:53:41] DISCARD TEMPORARY;
[11/08 15:53:41] CREATE INDEX i0 ON t3(c1);
[11/08 15:53:41] UPDATE t2 SET c1 = DEFAULT WHERE (((t2.c1)||(0.36374591031208869384983017880585975944995880126953125)) SIMILAR TO t2.c1);
[11/08 15:53:41] ANALYZE;
[11/08 15:53:41] ANALYZE;
[11/08 15:53:41] RESET ROLE;
[11/08 15:53:41] ALTER TABLE  ONLY t1 DROP c0 CASCADE;
[11/08 15:53:41] CREATE STATISTICS  IF NOT EXISTS s2 ON c0, c1 FROM t2;
[11/08 15:53:41] DISCARD TEMPORARY;
[11/08 15:53:41] DROP INDEX IF EXISTS i0, i0, i2 RESTRICT;
[11/08 15:53:41] INSERT INTO t0(c1, c0) VALUES(0.64862977672298749443058341057621873915195465087890625, 0.9589728083751455), (0.83613673143892108807762042488320730626583099365234375, 2.007393224E9), (0.756412389217749225878151264623738825321197509765625, 0.3887003493387362);
[11/08 15:53:41] TRUNCATE TABLE t1, t3, t2, t0 CONTINUE IDENTITY CASCADE;
[11/08 15:53:41] CREATE STATISTICS  IF NOT EXISTS s3 ON c1, c0 FROM t3;
[11/08 15:53:41] DISCARD PLANS;
[11/08 15:53:41] UPDATE t3 SET c1 = (((0.534026)::MONEY)::VARCHAR) WHERE (((((((('[-2005576075,139609743)'::int4range)*('[-1279471797,-990939564]'::int4range)))*((('(-1294067838,-898312840]'::int4range)-('[844893861,1796311825)'::int4range)))))*((((('(-1079969966,2101087292)'::int4range)-('[206010575,306358391)'::int4range)))*((('(-407233959,1380582824]'::int4range)*('(-2073524540,1550121377]'::int4range)))))))@>((((((('(274508463,1317381166]'::int4range)*('[-66392164,2007393224)'::int4range)))-((('[-795053073,174294214]'::int4range)-('(758998688,942459155)'::int4range)))))*((((('(849994296,1803948218)'::int4range)*('[659023851,710689577)'::int4range)))-((('(-1232157390,-1190029316)'::int4range)*('(-1618794814,-1278206033]'::int4range))))))));
[11/08 15:53:41] UPDATE t0 SET c0 = DEFAULT, c1 = 0.61640437379926871219737449791864491999149322509765625 WHERE (t0.c1) BETWEEN (0.45684466959163738675187005355837754905223846435546875) AND (t0.c1);
[11/08 15:53:41] COMMIT;
[11/08 15:53:41] SET SESSION statement_timeout = 5000;
;
