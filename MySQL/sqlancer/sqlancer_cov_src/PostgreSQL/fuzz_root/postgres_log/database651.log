[11/08 13:02:32] \c test;
[11/08 13:02:32] DROP DATABASE IF EXISTS database651;
[11/08 13:02:32] CREATE DATABASE database651 ;
[11/08 13:02:32] \c database651;
[11/08 13:02:32] CREATE UNLOGGED TABLE IF NOT EXISTS t0(c0 inet , c1 REAL , EXCLUDE (c1 WITH %) WITH (autovacuum_enabled=1, parallel_workers=159, autovacuum_vacuum_cost_delay=68, autovacuum_vacuum_scale_factor=0.01) WHERE ((get_byte(('' COLLATE "C"), -1766299124)) BETWEEN (t0.c1) AND (t0.c1)), PRIMARY KEY(c1), UNIQUE(c1)) PARTITION BY LIST(('167.251.43.12')jsonb_path_ops);
[11/08 13:02:32] CREATE TEMPORARY TABLE t0(c0 boolean , EXCLUDE (c0 NULLS LAST WITH =, c0 WITH <@, c0 WITH -)) PARTITION BY LIST(('54.240.119.6')float8_ops) WITH (autovacuum_freeze_max_age=386550282) ON COMMIT DELETE ROWS ;
[11/08 13:02:32] CREATE TABLE IF NOT EXISTS t0(c0 REAL  CHECK ((0.98261554325569566703535429041949100792407989501953125) IN (0.49236747099560751461666541217709891498088836669921875, 0.20332362781583446231792322578257881104946136474609375, 0.07154558386876896936001912763458676636219024658203125)) NO INHERIT UNIQUE PRIMARY KEY, c1 int4range  NOT NULL CHECK (((((t0.c1)::VARCHAR)::VARCHAR(838))||(((((B'1001000011001001001010010100101')&(B'1000100101011101101010010100000')))|(((B'1111111111111111111111111111111110101100010000010110101100101101')|(B'1111111111111111111111111111111110100010011000001111010011000000'))))))!~(0.53111704092831446555322827407508157193660736083984375)::VARCHAR), UNIQUE(c0, c1)) WITH (autovacuum_freeze_table_age=1164798647, autovacuum_freeze_max_age=287333150);
[11/08 13:02:32] CREATE TABLE t1(c0 TEXT COLLATE "en_US.utf8"  UNIQUE DEFAULT ('')) PARTITION BY LIST((0.39240590618113113663412150344811379909515380859375)varchar_pattern_ops) WITH (autovacuum_vacuum_cost_limit=993, autovacuum_enabled=1, parallel_workers=289, fillfactor=66, autovacuum_freeze_max_age=1320177937, autovacuum_analyze_scale_factor=0, autovacuum_freeze_table_age=1491821921, autovacuum_analyze_threshold=371316732, autovacuum_vacuum_cost_delay=93, autovacuum_freeze_min_age=161298145);
[11/08 13:02:32] CREATE TEMPORARY TABLE t1(LIKE t0);
[11/08 13:02:32] CREATE UNLOGGED TABLE IF NOT EXISTS t2(c0 int4range  NULL CHECK ((lower(CAST('37.62.119.29' AS VARCHAR(128))) SIMILAR TO CAST(t2.c0 AS VARCHAR(303))))) PARTITION BY HASH(((0.36347426991336995)::VARCHAR(610)), (to_hex(((('t' COLLATE "C"))||(atand()))))tsquery_ops);
[11/08 13:02:32] CREATE TEMP TABLE t2(c0 bigserial  UNIQUE, UNIQUE(c0), EXCLUDE (c0 DESC NULLS LAST WITH >, c0 DESC WITH >=, (((((((((B'1011100001100111000010010100111')&(B'1110011010001100110100000011100')))#(((B'1010101000111110010001101101101')<<(B'1001000011001001001010010100101')))))|(((CAST(FALSE AS BIT(147)))|(((B'1111111111111111111111111111111111100101101000101010100010010100')|(B'1010010011111100100011000111')))))))||(CAST('41.239.90.188' AS BIT(462))))) varchar_ops NULLS LAST WITH <) WHERE ((t2.c0) BETWEEN (t2.c0) AND (((t2.c0)^(strpos('EC{}', '~')))))) PARTITION BY RANGE((0.376453366598929139996698722825385630130767822265625)inet_bloom_ops);
[11/08 13:02:32] CREATE TABLE IF NOT EXISTS t2(LIKE t0);
[11/08 13:02:32] CREATE TEMPORARY TABLE IF NOT EXISTS t3(LIKE t1);
[11/08 13:02:32] CREATE TEMP TABLE IF NOT EXISTS t4(c0 DECIMAL  NOT NULL PRIMARY KEY UNIQUE, c1 BIT VARYING(82) , CHECK(NOT (((0.13423413)::MONEY)::BOOLEAN)), EXCLUDE (((((((((('(1206269883,1253852988)'::int4range)-('[-650196158,1007813501]'::int4range)))*((('(-480273056,-463980174)'::int4range)-('(-2110000770,570465128)'::int4range)))))*((((('(-1406977857,2051707065]'::int4range)-('[570465128,659835435]'::int4range)))-((('[-702596680,269787948]'::int4range)*('[-1245534511,2083066383)'::int4range)))))))*((((((('(1251533596,1973112341]'::int4range)*('(269787948,1498573410]'::int4range)))-((('[-862850787,-672412845]'::int4range)-('(-2079363764,-752224990)'::int4range)))))*('(-613037251,206682388)'::int4range))))) ASC WITH >=, c1 WITH ?-|) WHERE (CAST((((((('[-252142014,989852668]'::int4range)*('[-480273056,1546880167)'::int4range)))-('[-1756257354,-61045984)'::int4range)))*((((('[-442324844,807309611]'::int4range)*('[-1614746889,1755362140)'::int4range)))-((('(-1510492476,1428104045)'::int4range)-('(-444935229,1546880167)'::int4range)))))) AS BOOLEAN))) WITH (autovacuum_vacuum_cost_delay=21, autovacuum_freeze_table_age=716357440, autovacuum_vacuum_cost_limit=6059, autovacuum_freeze_min_age=444210920, autovacuum_freeze_max_age=1635351177, autovacuum_vacuum_threshold=978219460, autovacuum_analyze_threshold=1192199773);
[11/08 13:02:32] CREATE TEMPORARY TABLE IF NOT EXISTS t4(c0 inet , EXCLUDE (c0 NULLS FIRST WITH =), PRIMARY KEY(c0), FOREIGN KEY (c0) REFERENCES t3(c0) MATCH FULL NOT DEFERRABLE) PARTITION BY LIST((((((((B'110111011101000101111001100100')||(((B'1001111101100100011001111001101')>>(B'1100101110110001001001000001')))))|(((((B'1110100111000110011010111001010')#(B'1111111111111111111111111111111110011010011011100011000110010101')))>>(((B'101100100111000000110100011010')||(B'1111111111111111111111111111111110000000111101110001111100110000')))))))||(B'1010100001101001110101011000100')))timestamp_minmax_ops);
[11/08 13:02:32] CREATE UNLOGGED TABLE t4(LIKE t1);
[11/08 13:02:32] CREATE TEMPORARY TABLE t5(LIKE t0);
[11/08 13:02:32] ALTER TABLE  t5 SET WITHOUT CLUSTER, ALTER c0  SET(n_distinct=-1.0E-5), SET LOGGED;
[11/08 13:02:32] ALTER TABLE  ONLY t1 ALTER c1  TYPE DECIMAL, DISABLE ROW LEVEL SECURITY, REPLICA IDENTITY DEFAULT, ENABLE ROW LEVEL SECURITY, DROP c1, NO FORCE ROW LEVEL SECURITY, ADD CONSTRAINT T FOREIGN KEY (c0, c1) REFERENCES t2(c0, c1) NOT DEFERRABLE;
[11/08 13:02:32] UPDATE t3 SET c1 = '[-1020613527,1428790937]'::int4range, c0 = -1.74468702E8 WHERE ((t3.c1)@>(((t3.c1)*(((((t3.c1)-(t3.c1)))*(t3.c1))))));
[11/08 13:02:32] INSERT INTO t3(c1) VALUES((('(-1869892183,321276871]'::int4range)*(CAST(1852809880 AS int4range)))), ('[1122152008,1859910941)'::int4range), ('(-1866881019,-683677178)'::int4range);
[11/08 13:02:32] INSERT INTO t0(c0) VALUES(0.36347426991336995), (0.6170679799747375), (0.9149336235838234);
[11/08 13:02:32] INSERT INTO t1(c0) VALUES(-8.62850787E8);
[11/08 13:02:32] INSERT INTO t0(c0) OVERRIDING SYSTEM VALUE VALUES(0.0944539933449603);
[11/08 13:02:32] INSERT INTO t1(c1, c0) VALUES((((((((('[-585653852,874088051)'::int4range)-('(-1096754269,2083066383]'::int4range)))*((('[-288476495,1967746694]'::int4range)*('(-1892423678,-609340802]'::int4range)))))*((((('(444586074,1092962955)'::int4range)*('[1252516411,1477956390)'::int4range)))-(((NULL)*('(-1785135889,2083066383)'::int4range)))))))*((((((('[-610336079,-447791039]'::int4range)*('(-1481476654,-422305539)'::int4range)))*((('(-1991148775,269787948]'::int4range)-('[1098873308,1491446203]'::int4range)))))*((('[-458319048,2005820493)'::int4range)*('[-463980174,2087802240]'::int4range)))))), CAST(0.0887065143000229650027677053003571927547454833984375 AS INT));
[11/08 13:02:32] INSERT INTO t5(c1) VALUES((((('[-2131199273,570715710]'::int4range)-((((('(-1863794557,1443316324)'::int4range)-('(-1618432306,269787948]'::int4range)))-((('[-1766299124,1954470387]'::int4range)-('(-1543683554,1104433507]'::int4range)))))))-((((((('[-906364124,-881952745)'::int4range)-('(-1580479980,-61045984]'::int4range)))-((('[557869763,989852668]'::int4range)-('[-550018967,950573026)'::int4range)))))*((((('[1917539913,1961047498]'::int4range)*('[-1036392414,31829105)'::int4range)))*((('(173000903,9223372036854775807)'::int4range)*('(-614890004,593216689)'::int4range)))))))));
[11/08 13:02:32] INSERT INTO t0(c0) OVERRIDING USER VALUE VALUES(0.9976691465433539), (0.27174319058008045), (0.7346652351709395), (0.9336322848981888), (0.43631521183062405);
[11/08 13:02:32] INSERT INTO t2(c0) VALUES(0.5813623), (0.6170679799747375), (-8.15938297E8), (+ (- (CAST(0.5217311863231344215563467514584772288799285888671875 AS INT)))), (0.8767401499677002) ON CONFLICT  DO NOTHING;
[11/08 13:02:32] INSERT INTO t5(c0) VALUES(0.8232291945144498), (6.38563521523805E-4);
[11/08 13:02:32] INSERT INTO t0(c1, c0) VALUES('(-2121122335,-512498656)'::int4range, 0.5463621956716742);
[11/08 13:02:32] RESET ROLE;
[11/08 13:02:32] RESET ROLE;
[11/08 13:02:32] ANALYZE( VERBOSE) t5;
[11/08 13:02:32] UPDATE t4 SET c1 = (((t4.c1)-(((((((t4.c1)*(t4.c1)))*(((t4.c1)*(t4.c1)))))-(t4.c1))))), c0 = 0.9643533073261387 WHERE ((t4.c1)<@(((t4.c1)-(((t4.c1)-('[1122152008,1173084606]'::int4range))))));
[11/08 13:02:32] CREATE MATERIALIZED VIEW v0(c0, c1, c2) AS (SELECT DISTINCT '130.231.247.105', t3.c1, 0.0129468173789011320451436404255218803882598876953125 FROM ONLY t0, t5*, t3*, ONLY t1, t2 WHERE ((t3.c1)>>(((((((t0.c1)-(t1.c1)))*(t5.c1)))-(((t3.c1)*(CAST(B'1111001010010101000110000111010' AS int4range))))))) LIMIT 2210573858441763472 OFFSET 46926394212285631);
[11/08 13:02:32] CREATE RECURSIVE VIEW v0(c0) AS (SELECT length(((0.49542505)::MONEY)::VARCHAR(885)) FROM ONLY t3, ONLY t2, t5* WHERE TRUE);
[11/08 13:02:32] CREATE STATISTICS  s0 ON c0, c1 FROM t3;
[11/08 13:02:32] UPDATE t1 SET c0 = (pg_trigger_depth()), c1 = (((t1.c1)-(t1.c1))) WHERE ((0.04027147305859757)IS DISTINCT FROM(t1.c0));
[11/08 13:02:32] INSERT INTO t5(c1, c0) VALUES((((((((('[-1406977857,748424474)'::int4range)-('[-1275798681,1381416256]'::int4range)))*('[-81440857,1973112341)'::int4range)))*((((('[417997943,896586313)'::int4range)*('[-805355185,1480379503)'::int4range)))*((('[-1404998867,1251533596]'::int4range)*('(-1886843606,-1578053477]'::int4range)))))))-((((((('(1337078733,2026638827]'::int4range)*('(-1028498465,1663412585)'::int4range)))*((('(260387084,558170577]'::int4range)*('[-1991804087,681723831]'::int4range)))))*((((('(-1416149187,-815938297]'::int4range)-('[167147248,1082107285]'::int4range)))-((('[1459679028,1755362140]'::int4range)*('(-1597331816,-1198258949]'::int4range)))))))), 0.5870511133164389);
[11/08 13:02:32] UPDATE t1 SET c0 = -5.85653852E8, c1 = '[718967933,1866737239)'::int4range WHERE (((((+ (176301393))-(- (-156569084))))+(- (('116.29.88.195')::INT))))::BOOLEAN;
[11/08 13:02:32] UPDATE t2 SET c0 = (+ (- (((((1321281938)-(1425841536)))^(((662921660)/(213586497))))))), c1 = DEFAULT WHERE (upper(CAST(-662173602 AS VARCHAR(536))))::BOOLEAN;
[11/08 13:02:32] UPDATE t4 SET c0 = 5.70465128E8 WHERE NOT (FALSE);
[11/08 13:02:32] REINDEX TABLE CONCURRENTLY t2;
[11/08 13:02:32] DELETE FROM ONLY t4 RETURNING t4.c1;
[11/08 13:02:32] RESET ROLE;
[11/08 13:02:32] ALTER TABLE  ONLY t1 VALIDATE CONSTRAINT asdf, NO FORCE ROW LEVEL SECURITY, SET WITHOUT OIDS, ALTER c0  SET(n_distinct_inherited=1);
[11/08 13:02:32] ALTER TABLE  ONLY t5 SET UNLOGGED;
[11/08 13:02:32] ALTER TABLE  ONLY t1 SET WITHOUT OIDS, ALTER c1  TYPE DECIMAL, ALTER c1  RESET(n_distinct_inherited, n_distinct), NO FORCE ROW LEVEL SECURITY, ALTER c1 SET STORAGE EXTERNAL, SET UNLOGGED, ALTER c1 SET STATISTICS 5328, ALTER c0 SET DEFAULT 0.8772848, ENABLE ROW LEVEL SECURITY;
[11/08 13:02:32] ALTER TABLE  ONLY t3 ALTER c1 SET STATISTICS 8817, DROP  IF EXISTS c1, ALTER c0 SET STORAGE PLAIN, ALTER c0  RESET(n_distinct);
[11/08 13:02:32] ALTER TABLE  t5 OWNER TO SESSION_USER;
[11/08 13:02:32] ALTER TABLE  ONLY t0 ALTER c0 SET STORAGE EXTENDED, ENABLE ROW LEVEL SECURITY, ALTER c0 DROP DEFAULT, SET WITHOUT OIDS, SET UNLOGGED, DISABLE ROW LEVEL SECURITY, ALTER c0  SET(n_distinct=-1.0E-5), OWNER TO SESSION_USER, NOT OF, ADD CONSTRAINT 茐 EXCLUDE (((t0.c1) BETWEEN ((((((('(-517291398,1007813501]'::int4range)*(t0.c1)))*(((t0.c1)*(t0.c1)))))*(((t0.c1)-(t0.c1))))) AND (((t0.c1)*(t0.c1)))) NULLS LAST WITH <>) NOT VALID, SET WITHOUT CLUSTER, VALIDATE CONSTRAINT asdf, DROP c1 RESTRICT, ALTER c0 SET STATISTICS 1039, NO FORCE ROW LEVEL SECURITY, FORCE ROW LEVEL SECURITY, REPLICA IDENTITY FULL, ALTER c1 SET NOT NULL, ALTER c0  TYPE smallint;
[11/08 13:02:32] ALTER TABLE  ONLY t5 VALIDATE CONSTRAINT asdf, ALTER c0 SET STORAGE PLAIN, ALTER c0 SET NOT NULL, REPLICA IDENTITY FULL, SET LOGGED;
[11/08 13:02:32] ALTER TABLE  ONLY t1 NO FORCE ROW LEVEL SECURITY;
[11/08 13:02:32] DROP INDEX IF EXISTS i0 CASCADE;
[11/08 13:02:32] UPDATE t5 SET c0 = DEFAULT WHERE (t5.c0)::BOOLEAN;
[11/08 13:02:32] UPDATE t2 SET c0 = -1.404998867E9 WHERE ((num_nonnulls(num_nonnulls(0.48355340649860611978994029414025135338306427001953125)))>(abs((B'1000111111001100011011110111011')::INT)));
[11/08 13:02:32] DROP INDEX IF EXISTS i0, i2;
[11/08 13:02:32] UPDATE t4 SET c0 = (((- (get_bit(CAST(t4.c1 AS VARCHAR), 774324731)))-(((((((-1869892183)*(70599251)))*(+ (-761620161))))^(- (((-483556338)-(173000903)))))))) WHERE TRUE;
[11/08 13:02:32] UPDATE t0 SET c1 = (((t0.c1)*(((t0.c1)-(t0.c1))))) WHERE (((CAST('111.209.126.27' AS VARCHAR(801)))||(t0.c0)) SIMILAR TO text('46.219.131.103'));
[11/08 13:02:32] UPDATE t2 SET c0 = DEFAULT WHERE (to_hex(replace('/', '')))::BOOLEAN;
[11/08 13:02:32] UPDATE t3 SET c1 = '[-212509796,1906397708]'::int4range, c0 = (-6.50196158E8) WHERE NOT (('190.44.64.182') IN ('77.211.122.205'));
[11/08 13:02:32] INSERT INTO t4(c1, c0) OVERRIDING USER VALUE VALUES('(-683677178,1093483006]'::int4range, 0.15822058497717284), ((((((((('(-1182019808,-1014938391]'::int4range)*('(-174468702,213586497)'::int4range)))-('(591288629,2036134568)'::int4range)))*((((('(-914030105,259094471]'::int4range)-('[1851771080,1953108910)'::int4range)))-('(321276871,1131243271)'::int4range)))))-((((((('[-1354528347,1748417468]'::int4range)-('[1933994012,2131014406]'::int4range)))*((('[-1846224783,188216336)'::int4range)*('[-431834567,1416742481]'::int4range)))))-('(-1150764173,1808510264)'::int4range)))), 0.27174319058008045), ((('(-1000884820,1040837062]'::int4range)*(((((range_merge('(-2119621755,-1341973596]'::int4range, '(-2022560539,2113306220)'::int4range))*((('[-1103105796,-774804101]'::int4range)*('(-1339550001,-286637764]'::int4range)))))-((((('(1055630376,1139946814]'::int4range)-('(1141387921,2101470907)'::int4range)))*((('(1119153642,1443316324]'::int4range)*('[-81440857,928899144]'::int4range)))))))), 0.4961003078092959);
[11/08 13:02:32] DROP INDEX IF EXISTS i0, i2;
[11/08 13:02:32] CREATE INDEX i0 ON t3 USING GIN((CAST('201.123.246.251' AS BOOLEAN)) numeric_bloom_ops, c0 ASC);
[11/08 13:02:32] CREATE UNIQUE INDEX i0 ON ONLY t4((((((((((B'10101110101001010010111110110')|(B'1000011110110100010101010100100')))&(((B'1111111111111111111111111111111111101000011001110001101011000001')||(B'1111111111111111111111111111111111000111110110100001100101100101')))))&(B'11010011111111101100001011010')))&(((((((B'1001010100110001110001100011100')||(B'10010111110001100100101101000')))||(((B'1111111001100110100001100111')>>(B'101100000011111110101100101001')))))||(((B'11000000100111010110111101011')#(((B'1100111110101111100101000111')&(B'1111111111111111111111111111111111011111001101110110000001101001'))))))))), c0 oid_minmax_multi_ops, (0.05649782210898213197225459225592203438282012939453125) ASC) WHERE CAST(((t4.c1)*(t4.c1)) AS BOOLEAN);
[11/08 13:02:32] CREATE INDEX i0 ON ONLY t2 USING GIST(c1 DESC);
[11/08 13:02:32] CREATE UNIQUE INDEX i0 ON ONLY t0 USING BTREE((0.0384981234297498975394091758062131702899932861328125), c0 DESC, c0 ASC);
[11/08 13:02:32] RESET ROLE;
[11/08 13:02:32] UPDATE t0 SET c1 = (t0.c1), c0 = 0.9149336235838234 WHERE TRUE;
[11/08 13:02:32] UPDATE t5 SET c1 = DEFAULT WHERE lower_inf(((t5.c1)-(((((t5.c1)*(t5.c1)))*(((t5.c1)*(t5.c1)))))));
[11/08 13:02:32] COMMENT ON TABLE t2 IS NULL;
[11/08 13:02:32] COMMIT;
[11/08 13:02:32] SET SESSION statement_timeout = 5000;
;
