[11/10 19:49:07] \c test;
[11/10 19:49:07] DROP DATABASE IF EXISTS database2545;
[11/10 19:49:07] CREATE DATABASE database2545  TEMPLATE template0;
[11/10 19:49:07] \c database2545;
[11/10 19:49:07] CREATE TEMPORARY TABLE t0(c0 boolean  PRIMARY KEY NOT NULL UNIQUE) PARTITION BY HASH((((((((((B'100001010100101100101011011001')|(B'100001010100101100101011011001')))&(((B'100001010100101100101011011001')|(B'100001010100101100101011011001')))))||(((((B'1111111111111111111111111111111110100110010111101011011000100111')&(B'1111111111111111111111111111111110100110010111101011011000100111')))>>(((B'1111111111111111111111111111111110010001010111101101000100000100')||(B'1111111111111111111111111111111111101100111100011001001100001001')))))))#(NULL))), (CAST(0.60389334 AS INT))jsonb_path_ops, (((((((((B'111111111111111111111111111111111111111111111111111111111111111')#(B'101101011011100100110001')))<<(((B'100001010100101100101011011001')>>(B'1000000100001111110010000000')))))<<(((((B'100001010100101100101011011001')||(B'1111111111111111111111111111111110000111110010001000001100100111')))&(((0.37980774)::MONEY)::BIT(418))))))&(((((((B'1111111111111111111111111111111111010101011011100111010111001111')#(B'1111111111111111111111111111111111101100111100011001001100001001')))<<(((B'1111111111111111111111111111111111101100010010110001011111111010')#(B'1101010111000101110111101010000')))))&(((((B'1101010010010111111011100100100')|(B'1111111111111111111111111111111110011010111110000010110101101011')))#(((B'1101101100000001010001001101000')<<(B'1111111111111111111111111111111110001111100101101001010010001110')))))))))box_ops) WITH (autovacuum_analyze_threshold=923337644, autovacuum_freeze_max_age=34727864, autovacuum_vacuum_cost_limit=5190, autovacuum_enabled=1, autovacuum_vacuum_scale_factor=0.01, fillfactor=85, autovacuum_freeze_min_age=353703740, autovacuum_freeze_table_age=148261972, autovacuum_vacuum_threshold=72845375, autovacuum_vacuum_cost_delay=10) ON COMMIT PRESERVE ROWS ;
[11/10 19:49:07] CREATE TEMP TABLE t0(c0 name COLLATE "en_US.utf8" , c1 REAL , c2 FLOAT ) PARTITION BY LIST(((0.4782414)::INT)tid_bloom_ops) ON COMMIT PRESERVE ROWS ;
[11/10 19:49:07] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 BIT VARYING(430)  PRIMARY KEY NOT NULL, c1 int4range ) PARTITION BY RANGE((CAST(0.6330311 AS MONEY))interval_ops) WITH (autovacuum_freeze_min_age=212842333, autovacuum_vacuum_cost_limit=2455, fillfactor=41) ON COMMIT DELETE ROWS ;
[11/10 19:49:07] CREATE TEMP TABLE IF NOT EXISTS t0(c0 BIT VARYING(110)  NOT NULL, c1 money  UNIQUE CHECK (((((t0.c0)::VARCHAR(260) COLLATE "C"))LIKE(CAST(0.952147540728333741100186671246774494647979736328125 AS VARCHAR(808))))) NULL, c2 bigserial  UNIQUE PRIMARY KEY, c3 DECIMAL  CHECK (lower_inc((((('[-1964593229,1837146728)'::int4range)*('(-2016902361,-1503742425)'::int4range)))*((('(-2016902361,1694969747]'::int4range)-('[-2016902361,1319779545]'::int4range)))))) NO INHERIT NOT NULL) PARTITION BY LIST((upper(''))) WITH (autovacuum_enabled=1, autovacuum_freeze_min_age=480412030, autovacuum_vacuum_cost_limit=3115, autovacuum_freeze_max_age=1641909816, autovacuum_vacuum_threshold=1467313991, parallel_workers=975, autovacuum_vacuum_scale_factor=0.01, fillfactor=10, autovacuum_analyze_scale_factor=0.8, autovacuum_freeze_table_age=1355803453, autovacuum_vacuum_cost_delay=38, autovacuum_analyze_threshold=129407248);
[11/10 19:49:07] CREATE TABLE t0(c0 bigserial , c1 DECIMAL , PRIMARY KEY(c0, c1) WITH (autovacuum_freeze_min_age=688622359, autovacuum_vacuum_cost_limit=8390, autovacuum_analyze_threshold=972164387, autovacuum_analyze_scale_factor=0.5, autovacuum_freeze_table_age=1689993333, parallel_workers=444, autovacuum_vacuum_scale_factor=0.5), EXCLUDE (c0 ASC NULLS FIRST WITH /) WHERE (((CAST(0.6005426922074575 AS BOOLEAN))AND((CAST('131.215.7.218' AS VARCHAR(697)))::BOOLEAN)))) PARTITION BY HASH(('[-1104250957,1783363364)'::int4range), (t0.c1));
[11/10 19:49:07] CREATE TABLE t0(c0 inet  DEFAULT ('26.35.4.217') NULL) PARTITION BY HASH(('31.135.147.9'));
[11/10 19:49:07] CREATE TABLE IF NOT EXISTS t0(c0 integer  CHECK (((((convert_from('', 'UTF8'))||('211.39.0.129')))LIKE((((lower(''))||(0.9579423753563124)) COLLATE "C")))) NO INHERIT PRIMARY KEY NULL, EXCLUDE (c0 timestamp_ops WITH <@), UNIQUE(c0) WITH (autovacuum_freeze_max_age=1749441985, autovacuum_analyze_threshold=1537504152, autovacuum_freeze_table_age=1283767946, autovacuum_vacuum_scale_factor=0.01, autovacuum_vacuum_cost_limit=4343, fillfactor=43, autovacuum_analyze_scale_factor=1.0E-5, autovacuum_vacuum_threshold=1584691575, parallel_workers=1017, autovacuum_vacuum_cost_delay=21, autovacuum_enabled=0), CHECK(((CAST((((('[917525148,1723422264]'::int4range)-('[11909425,516541865)'::int4range)))*((('(-1814355327,-499944422]'::int4range)*('(-2016902361,1508713427)'::int4range)))) AS VARCHAR))LIKE((((((('\')||('35.142.11.105')))||('89.45.4.179')))||(t0.c0)))))) PARTITION BY HASH((((((((((B'111011110100110011001100011')&(B'1111111111111111111111111111111111001110011000100011000101111110')))>>(((B'110101111100101010011000110101')&(B'1111111111111111111111111111111110001011100001011010011010000011')))))#(((((B'1110011101000011100001001101011')>>(B'1111111111111111111111111111111111111111111111111111111111111111')))<<(((B'1111111111111111111111111111111110001010111001101010111110110011')||(B'1111111111111111111111111111111111011110011011001110001100010110')))))))|((((((0.39151620256830155231142498450935818254947662353515625)::BIT)>>(((B'1111111111111111111111111111111111110101001111001110111111001000')#(B'1111111111111111111111111111111111001110011000100011000101111110')))))&(((((B'1111111111111111111111111111111111101100111100011001001100001001')<<(B'1111111111111111111111111111111110011100110001111010000000100011')))&(((B'1111111111111111111111111111111111111010111111001101010010000100')#(B'1001101111111000001111111001'))))))))), (range_merge((((((('(491826009,1339812043)'::int4range)*('[1939980907,2037198918]'::int4range)))*((('(-1104250957,938579371)'::int4range)*('[-1664638941,76693383)'::int4range)))))*((((('(-714181169,1872015468]'::int4range)*('[-912455509,1739960185]'::int4range)))-((('(-2138576265,1412858173)'::int4range)-('[-85656202,1056849852)'::int4range)))))), (((((('(-1356275252,-499944422]'::int4range)*('(-466453336,1739960185]'::int4range)))-((('(-1187369600,-146933566)'::int4range)*('(-949555671,219138951)'::int4range)))))*((((('[-2002847796,244775401]'::int4range)-('[-1503742425,594304247]'::int4range)))-((('[-1143210835,1397747744]'::int4range)-('[-1411364390,-125421695)'::int4range)))))))));
[11/10 19:49:07] CREATE TEMPORARY TABLE t0(c0 TEXT , c1 name  PRIMARY KEY UNIQUE, EXCLUDE ((0.0861980890949010092327853271854110062122344970703125) pg_lsn_bloom_ops ASC WITH +) WITH (autovacuum_freeze_min_age=252876662, autovacuum_vacuum_threshold=2123328969, autovacuum_analyze_scale_factor=1, autovacuum_vacuum_cost_limit=6621, autovacuum_analyze_threshold=1149094172, fillfactor=24, autovacuum_vacuum_cost_delay=18) WHERE (CAST(((((B'1111111111111111111111111111111110101111001010001110000111001100')<<(B'1111111111111111111111111111111110101011111000000100100111011010')))&(((B'110111111100011001010110101011')#(B'1101111100101001011000001101100')))) AS VARCHAR(210))~*current_schema()), CHECK(t0.c1!~(t0.c1 COLLATE "C"))) ON COMMIT DELETE ROWS ;
[11/10 19:49:07] CREATE UNLOGGED TABLE IF NOT EXISTS t0(c0 REAL , c1 FLOAT , CHECK(((upper(lower('ﲀ7-\')))LIKE(((((('[-1857018608,524975651)'::int4range)*('(-1710633369,1860983624]'::int4range)))*((('[694450901,1258805748]'::int4range)-('[-421904033,1783363364]'::int4range)))))::VARCHAR))), EXCLUDE (((chr(strpos((('')||(CAST(0.8447432 AS MONEY))), (-969702403)::VARCHAR)) SIMILAR TO (('-2016902361')||('53.131.194.53')))) ASC WITH >=)) PARTITION BY RANGE((((t0.c1)IS DISTINCT FROM(((- (CAST(t0.c0 AS INT)))/(CAST(0.79523714864541872326952898220042698085308074951171875 AS INT)))))));
[11/10 19:49:07] CREATE TEMP TABLE IF NOT EXISTS t0(c0 money , c1 money ) PARTITION BY RANGE(((((NOT (('i') IN ('MC8Nl', '菹꘵y	⳺x')))::int4range)-((('(-1161890292,-325755936)'::int4range)*((((('(135330944,1848573549)'::int4range)*('(69744371,1524369096]'::int4range)))*((('[-1692160099,-1264289056)'::int4range)-('[-1632086093,-594149335]'::int4range)))))))))interval_minmax_ops, ('122.224.250.107')uuid_minmax_ops, (((((((((B'1001110101010100011110011011001')>>(B'1111111111111111111111111111111111011111110110111000001000101011')))>>(((B'1111111111111111111111111111111111101100111100011001001100001001')||(B'1111111111111111111111111111111111011110011011001110001100010110')))))#(((((B'101110011001001110110111110')|(B'1011110001010010010010001010111')))#(((B'100111000001100100011000001111')|(B'1111111111111111111111111111111110101011111000000100100111011010')))))))&(((((((B'1100100110110011010010001111001')<<(B'1001100011111000100111101110001')))>>(((B'1111111111111111111111111111111110011100000110100010000111011011')|(B'1001000000101011010000110000110')))))>>(((CAST(1978081576 AS BIT(129)))<<(((B'1100110101110010101011000111000')>>(B'1111111111111111111111111111111110000101110000000100100111010111')))))))))) WITH (autovacuum_vacuum_threshold=1468066142, autovacuum_freeze_min_age=802532561, parallel_workers=938, autovacuum_analyze_threshold=643965592) ON COMMIT DELETE ROWS ;
[11/10 19:49:07] CREATE TEMP TABLE IF NOT EXISTS t0(c0 money , c1 FLOAT , c2 inet  CHECK (((md5(lower('2Wqf')))LIKE(((lower('917525148'))||(NOT (('1694969747' SIMILAR TO '-325755936'))))))) PRIMARY KEY DEFAULT ('164.213.142.228') NULL UNIQUE) ON COMMIT PRESERVE ROWS ;
[11/10 19:49:07] CREATE UNLOGGED TABLE IF NOT EXISTS t1(c0 int4range , c1 DECIMAL  PRIMARY KEY NULL CHECK (substr((('-294889606')||('3.62.209.148')), + (1491495440), CAST('200.194.100.99' AS INT))~*(0.7593171)::VARCHAR(147)) NO INHERIT, c2 REAL  UNIQUE) PARTITION BY LIST(((0.45478395)::MONEY)timestamptz_minmax_ops) WITH (autovacuum_analyze_scale_factor=0, autovacuum_freeze_table_age=262839931, autovacuum_vacuum_scale_factor=0.5, fillfactor=43, autovacuum_vacuum_cost_limit=4587, autovacuum_vacuum_threshold=606175563, autovacuum_vacuum_cost_delay=93, autovacuum_freeze_max_age=647098315, parallel_workers=575, autovacuum_freeze_min_age=274215249);
[11/10 19:49:07] CREATE TABLE IF NOT EXISTS t1(LIKE t0 EXCLUDING IDENTITY);
[11/10 19:49:07] CREATE TEMP TABLE IF NOT EXISTS t2(LIKE t0);
[11/10 19:49:07] CREATE TEMPORARY TABLE t3(c0 boolean , c1 bigserial  PRIMARY KEY, FOREIGN KEY (c1, c0) REFERENCES t2(c2, c0) ON UPDATE RESTRICT DEFERRABLE INITIALLY DEFERRED, UNIQUE(c1) WITH (autovacuum_vacuum_threshold=230904107, parallel_workers=903, autovacuum_analyze_threshold=1070551578, autovacuum_vacuum_scale_factor=0.9), EXCLUDE (('242.72.70.102') float4_ops WITH <>, c0 WITH <>, c1 numeric_bloom_ops DESC WITH &), CHECK(t3.c0)) INHERITS(t2, t1, t0) PARTITION BY LIST((0.203577382113000471264285806682892143726348876953125)bytea_minmax_ops);
[11/10 19:49:07] CREATE TEMP TABLE IF NOT EXISTS t3(c0 BIT VARYING(139) , EXCLUDE (((((- (((1258805748)^(1746894477))))::INT)+(+ ((((-1004606413)^(125462115)))::INT)))) DESC NULLS FIRST WITH =, c0 macaddr8_minmax_ops WITH /), PRIMARY KEY(c0), UNIQUE(c0) WITH (autovacuum_freeze_min_age=739114895, autovacuum_freeze_table_age=1703455236, parallel_workers=624, autovacuum_analyze_scale_factor=0.1, fillfactor=77, autovacuum_freeze_max_age=1123232898, autovacuum_enabled=0, autovacuum_vacuum_cost_limit=791, autovacuum_vacuum_cost_delay=0, autovacuum_vacuum_scale_factor=0), CHECK(((t3.c0)<=(t3.c0))), FOREIGN KEY (c0) REFERENCES t2(c0) ON DELETE SET DEFAULT) INHERITS(t1) WITH (autovacuum_vacuum_threshold=995167339, autovacuum_vacuum_cost_limit=9033, autovacuum_analyze_threshold=162534703, autovacuum_freeze_max_age=295716920, autovacuum_analyze_scale_factor=1.0E-5, parallel_workers=331, autovacuum_vacuum_scale_factor=0.5, fillfactor=55, autovacuum_freeze_min_age=665212739, autovacuum_vacuum_cost_delay=31, autovacuum_freeze_table_age=803980445, autovacuum_enabled=1);
[11/10 19:49:07] CREATE TEMP TABLE t3(c0 DECIMAL , c1 inet  UNIQUE NULL CHECK ((((t3.c0)::VARCHAR(450) COLLATE "en_US.utf8") SIMILAR TO (((('2Wqf')||(B'11110001101100100110011000010')) COLLATE "en_US.utf8") COLLATE "en_US.utf8"))) NO INHERIT, FOREIGN KEY (c1) REFERENCES t0(c2) MATCH FULL, CHECK(inet_same_family(t3.c1, '131.87.87.120')), EXCLUDE ((t3.c1) ASC WITH <=), PRIMARY KEY(c0, c1)) PARTITION BY RANGE((CAST(+ (((num_nulls(t3.c1, -1695011477, (0.8447432)::MONEY, FALSE))/(-219858858))) AS VARCHAR)), (quote_literal(upper('bH^^')))) WITH (autovacuum_vacuum_threshold=449854522, fillfactor=12, parallel_workers=573, autovacuum_analyze_scale_factor=0.8, autovacuum_vacuum_cost_limit=1147, autovacuum_freeze_min_age=947194613) ON COMMIT DROP ;
[11/10 19:49:07] CREATE TEMP TABLE t3(LIKE t1);
[11/10 19:49:07] CREATE TABLE t4(c0 DECIMAL  PRIMARY KEY UNIQUE, c1 TEXT COLLATE "en_US.utf8" ) INHERITS(t0, t2, t3, t1);
[11/10 19:49:07] CREATE UNLOGGED TABLE t4(LIKE t1);
[11/10 19:49:07] INSERT INTO t0(c0) VALUES((0.19449805)::MONEY), (CAST(0.54982144 AS MONEY));
[11/10 19:49:07] INSERT INTO t1(c1, c2, c0) VALUES(0.24632975, '158.87.141.115', (0.5410163)::MONEY), (0.54982144, '156.121.57.128', (0.49066603)::MONEY), (num_nonnulls((0.9910649)::VARCHAR(162), 0.62623550913582259891398962281527929008007049560546875, (0.13751787342077614884061631528311409056186676025390625)::VARCHAR!~*(('')||(-483810629))), '195.22.129.217', CAST(0.39278057 AS MONEY));
[11/10 19:49:07] CREATE STATISTICS  IF NOT EXISTS s0 (ndistinct, dependencies) ON c1, c2 FROM t0;
[11/10 19:49:07] UPDATE t3 SET c0 = ((0.54982144)::MONEY), c1 = DEFAULT WHERE TRUE;
[11/10 19:49:07] INSERT INTO t0(c2, c1, c0) VALUES('141.217.82.186', 0.2008222, CAST(0.16483672 AS MONEY)), ('241.15.152.253', + ((CAST(0.24937136 AS MONEY))::INT), (0.6350127)::MONEY);
[11/10 19:49:07] INSERT INTO t0(c0) VALUES((0.5836618)::MONEY), ((0.8913712)::MONEY);
[11/10 19:49:07] INSERT INTO t1(c1, c0, c2) VALUES(((((length('0.6350126863903558'))::VARCHAR)||(((CAST((0.4429131)::MONEY AS INT))^(+ (-27950644))))))::INT, CAST(0.68211 AS MONEY), '122.202.134.108'), (+ (+ (((- (-2134688812))%(((1258805748)*(905094709)))))), CAST(0.96921617 AS MONEY), '16.147.190.52'), (0.28833666, CAST(1.05684986E9 AS MONEY), '173.104.182.236'), (0.45478395, CAST(0.6749912 AS MONEY), '215.125.218.31'), (1.31977958E9, CAST(0.8447432 AS MONEY), '43.157.22.226'), (- (+ (CAST(pg_is_other_temp_schema() AS INT))), CAST(0.6178261 AS MONEY), '195.8.170.179');
[11/10 19:49:07] INSERT INTO t2(c0) VALUES((0.54592794)::MONEY), (CAST(0.33189332 AS MONEY));
[11/10 19:49:07] INSERT INTO t4(c1, c2) VALUES(-1020926907, '110.162.134.122'), (0.59279996, '51.52.145.95'), (0.7291067, '219.3.172.8');
[11/10 19:49:07] INSERT INTO t1(c2) OVERRIDING SYSTEM VALUE VALUES('193.194.240.70');
[11/10 19:49:07] UPDATE t3 SET c1 = DEFAULT WHERE TRUE;
[11/10 19:49:07] INSERT INTO t2(c2, c0, c1) VALUES('207.140.134.227', CAST(0.20109615 AS MONEY), - (num_nonnulls((('(-818015165,19940022]'::int4range)!=('[-1593337400,1585489153)'::int4range)), hostmask('177.8.224.247'))));
[11/10 19:49:07] SET enable_material=0;
[11/10 19:49:07] UPDATE t1 SET c0 = DEFAULT, c1 = DEFAULT WHERE (CAST(0.3724351 AS MONEY)) BETWEEN SYMMETRIC (CAST(0.9233224 AS MONEY)) AND (t1.c0);
[11/10 19:49:07] SET enable_seqscan=DEFAULT;
[11/10 19:49:07] RESET ALL;
[11/10 19:49:07] ALTER TABLE  ONLY t3 NO FORCE ROW LEVEL SECURITY, OWNER TO SESSION_USER, SET WITHOUT CLUSTER, SET WITHOUT OIDS, ALTER c0 DROP NOT NULL, ALTER c0  SET(n_distinct_inherited=-0.1, n_distinct=-0.8), VALIDATE CONSTRAINT asdf, ALTER c0 DROP DEFAULT, NOT OF, ENABLE ROW LEVEL SECURITY, ALTER c1 SET STATISTICS 3021, DROP c1, ADD CONSTRAINT i EXCLUDE (c0 ASC NULLS FIRST WITH <->, c1 xid_ops ASC NULLS FIRST WITH -|-) WHERE ((0.50596564547526001742738799293874762952327728271484375) IN (0.28650980146570581563736368480022065341472625732421875, 0.639757604363399234870257714646868407726287841796875));
[11/10 19:49:07] ALTER TABLE  ONLY t0 SET LOGGED, ALTER c1  RESET(n_distinct);
[11/10 19:49:07] ALTER TABLE  ONLY t2 VALIDATE CONSTRAINT asdf, ALTER c2 SET STATISTICS 3591;
[11/10 19:49:07] ALTER TABLE  ONLY t4 SET UNLOGGED;
[11/10 19:49:07] ANALYZE( SKIP_LOCKED);
[11/10 19:49:07] INSERT INTO t3(c0, c2) VALUES((0.8385058)::MONEY, '96.166.135.82') ON CONFLICT (c0) DO NOTHING;
[11/10 19:49:07] INSERT INTO t1(c2) VALUES('173.224.250.134');
[11/10 19:49:07] INSERT INTO t0(c1, c2) VALUES(-9.697024E8, '118.99.88.254'), ((((((((((((NOT (pg_jit_available()))OR(((('aLWF' SIMILAR TO 'GFo{gP'))OR(('-180555832' SIMILAR TO '#尟6う踂'))))))OR((((('(-1885956978,-1353054399)'::int4range)*('(-885373927,-17893649]'::int4range)))&&((('[1660037479,1860983624]'::int4range)*('[-1503742425,1363669633]'::int4range)))))))OR((('}r*jKIU' COLLATE "en_US.utf8") SIMILAR TO (('n')||(FALSE))))))OR(((('[-1511396402,-325755936)'::int4range)*('[-1129502769,1742776905)'::int4range)))::BOOLEAN)))OR(NOT (CAST('23.62.65.129' AS BOOLEAN)))))::REAL, CAST(to_hex(upper('0.8913711833416992')) AS INET));
[11/10 19:49:07] INSERT INTO t2(c0) VALUES(CAST(0.9910649 AS MONEY));
[11/10 19:49:07] INSERT INTO t0(c0, c1, c2) OVERRIDING USER VALUE VALUES(CAST(0.4258074 AS MONEY), abs(+ (CAST(0.2008222 AS INT))), NULL);
[11/10 19:49:07] INSERT INTO t3(c2, c1, c0) VALUES('166.217.24.136', 0.45478395, CAST(5.5907398E8 AS MONEY));
[11/10 19:49:07] INSERT INTO t2(c1, c0, c2) VALUES(+ (strpos(lower('ZH'), btrim('s	i嶋}<9蘞', 'T''{ys'))), CAST(0.6643377 AS MONEY), '72.9.130.39'), (0.090019606, CAST(0.40767914 AS MONEY), '85.158.95.41'), (-7.1418118E8, CAST(0.68211 AS MONEY), '12.247.252.157'), (+ (CAST((0.40767914)::MONEY AS INT)), CAST(0.02134876 AS MONEY), '89.200.243.70');
[11/10 19:49:07] INSERT INTO t0(c1, c0, c2) VALUES(+ (to_hex(((0.5128761)::VARCHAR COLLATE "en_US.utf8"))), CAST(0.30002764 AS MONEY), '105.236.34.76'), (0.6330311, CAST(0.019309215 AS MONEY), '188.231.113.38'), (+ (-539262421), (0.28678307)::MONEY, '161.6.49.219');
[11/10 19:49:07] INSERT INTO t0(c1, c2, c0) VALUES(NULL, '30.70.102.126', (0.19692782)::MONEY), (((strpos((('-1104250957')||(0.62014289101843977913830485704238526523113250732421875)), (('219138951')||('1524369096'))))-(+ (+ (((1376981720)/(1683119250)))))), '214.126.105.109', (0.7490643)::MONEY);
[11/10 19:49:07] INSERT INTO t2(c0, c2) VALUES((0.5802043)::MONEY, '161.135.246.183') ON CONFLICT  DO NOTHING;
[11/10 19:49:07] CREATE STATISTICS  IF NOT EXISTS s1 (dependencies, ndistinct) ON c0, c2 FROM t0;
[11/10 19:49:07] INSERT INTO t0(c0) VALUES((4.91826016E8)::MONEY);
[11/10 19:49:07] INSERT INTO t4(c2, c1) VALUES('70.103.117.104', 0.315456);
[11/10 19:49:07] INSERT INTO t3(c2, c0, c1) VALUES('109.70.139.121', CAST(0.02134876 AS MONEY), ((CAST((('OP')||(CAST(0.5900154 AS MONEY)))~*CAST('M' AS VARCHAR) AS INT))-(+ (masklen('21.179.72.121'))))) ON CONFLICT  DO NOTHING;
[11/10 19:49:07] CREATE INDEX i0 ON ONLY t1 USING GIN((CAST(CAST(+ (- (-1161890292)) AS INT) AS VARCHAR(445))) date_ops DESC NULLS LAST, (+ (((num_nonnulls(0.35562536252857468443977495553554035723209381103515625))/(((- (2010180130))+(+ (-1503742425))))))), c1 ASC) WHERE ((((version() COLLATE "en_US.utf8") COLLATE "en_US.utf8"))LIKE(CAST(num_nonnulls(t1.c0, -943636349, 174073998, t1.c0) AS VARCHAR)));
[11/10 19:49:07] CREATE UNIQUE INDEX i0 ON ONLY t2 USING HASH(c1);
[11/10 19:49:07] CREATE UNIQUE INDEX i0 ON t0(c0 ASC, ((CAST((CAST(t0.c2 AS INT))::INT AS VARCHAR(943)) SIMILAR TO ((lower('<AKWᡫDz )'))||(CAST(0.41284510834766097 AS INT))))) ASC) INCLUDE(c2) WHERE (((t0.c2)::VARCHAR(686))LIKE(rpad(((- (1283215217))*(CAST(0.409003041983897919209312021848745644092559814453125 AS INT))), (((('')||(t0.c0)))||(NULL)))));
[11/10 19:49:07] CREATE UNIQUE INDEX i0 ON t2 USING BTREE(c0 ASC) WHERE NOT ((((((('(1055074350,1536694296]'::int4range)*(NULL)))*((('(463407647,642990919]'::int4range)*('(-759700435,1666338850]'::int4range)))))&<((((('(-1841206475,491826009)'::int4range)*('(1449798826,1645209454)'::int4range)))*((('(-2143485593,-466453336)'::int4range)-('(-499944422,1425036793]'::int4range)))))));
[11/10 19:49:07] UPDATE t1 SET c2 = '80.215.32.106', c1 = DEFAULT, c0 = (0.24937136)::MONEY WHERE ((t1.c0)<(CAST(0.42650342 AS MONEY)));
[11/10 19:49:07] VACUUM (TRUNCATE) t3(c0);
[11/10 19:49:07] VACUUM (DISABLE_PAGE_SKIPPING 1, TRUNCATE 1, ANALYZE) t1(c1, c2);
[11/10 19:49:07] CREATE STATISTICS  IF NOT EXISTS s2 ON c2, c1 FROM t1;
[11/10 19:49:07] UPDATE t0 SET c2 = ('2.31.0.235') WHERE TRUE;
[11/10 19:49:07] UPDATE t3 SET c0 = (((((((('(-931776372,1860983624]'::int4range)*('[1579754583,1872015468)'::int4range)))*((('[-198209254,917525148)'::int4range)*('[491826009,1837146728]'::int4range)))))-((((('(-879878692,-1]'::int4range)*('(-182973302,750258011]'::int4range)))-((('(1267805929,1694796658)'::int4range)*('(-776552917,463407647]'::int4range)))))))::MONEY), c1 = 0.8851835, c2 = '194.11.112.12' WHERE ((t3.c1)=((((((B'1111111111111111111111111111111110010001010100000010010100010000')&(B'1000101011101101110110101100')))|(B'1111111111111111111111111111111111101100111100011001001100001001')))::INT));
[11/10 19:49:07] UPDATE t2 SET c1 = 0.52363956, c2 = '71.250.243.207' WHERE ((t2.c2)!=(t2.c2));
[11/10 19:49:07] INSERT INTO t4(c1, c2, c0) VALUES(0.8217958, '0.149.68.168', (0.872792)::MONEY), (0.09064941, '169.255.187.5', CAST(1.35330944E8 AS MONEY)), (CAST(0.96794297185502953251301505588344298303127288818359375 AS INT), '216.23.121.171', (0.3938034)::MONEY);
[11/10 19:49:07] ANALYZE t2(c2, c0);
[11/10 19:49:07] CLUSTER t2;
[11/10 19:49:07] CLUSTER t3;
[11/10 19:49:07] CLUSTER ;
[11/10 19:49:07] INSERT INTO t3(c2, c1, c0) OVERRIDING SYSTEM VALUE VALUES('248.131.128.109', num_nulls('25.107.132.39'), CAST(0.6823156 AS MONEY)), ('61.211.115.29', 0.8809025, (0.8677129)::MONEY), ('194.131.235.0', 0.7150845, (1.52436915E9)::MONEY), ('37.119.154.111', 0.56859154, (0.79196435)::MONEY);
[11/10 19:49:07] INSERT INTO t1(c0) VALUES((0.49396387)::MONEY), ((0.4429131)::MONEY), ((1.31977958E9)::MONEY);
[11/10 19:49:07] INSERT INTO t1(c0) VALUES((0.45512328)::MONEY);
[11/10 19:49:07] INSERT INTO t4(c1) VALUES(0.41410908), (CAST(0.48538458449111143711007798628997988998889923095703125 AS INT));
[11/10 19:49:07] INSERT INTO t0(c0, c2) VALUES((-1.25421696E8)::MONEY, '131.22.72.46');
[11/10 19:49:07] INSERT INTO t2(c2) VALUES('27.233.201.39');
[11/10 19:49:07] CREATE INDEX i1 ON t2 USING BTREE(c2 NULLS LAST) INCLUDE(c0);
[11/10 19:49:07] INSERT INTO t2(c2, c0) VALUES('132.46.249.188', CAST(0.5170056 AS MONEY));
[11/10 19:49:07] COMMIT;
[11/10 19:49:07] SET SESSION statement_timeout = 5000;
;
