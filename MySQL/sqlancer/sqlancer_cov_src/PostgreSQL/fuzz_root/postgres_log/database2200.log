[11/10 11:40:44] \c test;
[11/10 11:40:44] DROP DATABASE IF EXISTS database2200;
[11/10 11:40:44] CREATE DATABASE database2200  TEMPLATE template0;
[11/10 11:40:44] \c database2200;
[11/10 11:40:44] CREATE TEMPORARY TABLE t0(c0 money  UNIQUE NULL PRIMARY KEY, UNIQUE(c0), EXCLUDE (('147.84.0.105') macaddr8_minmax_ops ASC WITH >>=, (num_nonnulls('30.30.181.199')) bit_ops WITH <) WITH (autovacuum_vacuum_scale_factor=0.01, autovacuum_freeze_min_age=847615304, parallel_workers=973, autovacuum_vacuum_cost_delay=64));
[11/10 11:40:44] CREATE TEMPORARY TABLE t0(c0 boolean , EXCLUDE (((0.52002394)::MONEY) timetz_ops NULLS FIRST WITH <<) WITH (fillfactor=94, autovacuum_freeze_max_age=1036440987, parallel_workers=1009, autovacuum_analyze_scale_factor=0.9, autovacuum_enabled=1), PRIMARY KEY(c0)) WITH (autovacuum_freeze_min_age=899279267, autovacuum_analyze_scale_factor=0.8, autovacuum_analyze_threshold=5038911, autovacuum_freeze_max_age=228852001, autovacuum_vacuum_threshold=2028966927, autovacuum_vacuum_cost_delay=61, autovacuum_enabled=0, parallel_workers=1014);
[11/10 11:40:44] CREATE TABLE IF NOT EXISTS t0(c0 money , PRIMARY KEY(c0) WITH (autovacuum_vacuum_cost_limit=9173, autovacuum_vacuum_scale_factor=0.5, autovacuum_analyze_scale_factor=0.5, autovacuum_vacuum_cost_delay=9, autovacuum_freeze_max_age=911102821, autovacuum_analyze_threshold=1810027487, autovacuum_enabled=1, fillfactor=78), CHECK(((((((range_merge('[-64985163,1746592521]'::int4range, '(531511910,1103316745)'::int4range))*((('(730505758,9223372036854775807]'::int4range)*('[-9223372036854775808,1138277486]'::int4range)))))*((((('[-1827122481,258770229)'::int4range)*('[548708012,1405390959]'::int4range)))*((('(-1298323138,548708012)'::int4range)-('[531511910,1103316745)'::int4range)))))))-|-((((((('[-212587570,1746592521]'::int4range)-('(-1701157646,-1610756822)'::int4range)))*((('[553953066,2026725559)'::int4range)-('[-716545170,730505758)'::int4range)))))*((((('[-1398878158,364663375]'::int4range)*('(-1677393303,-9984988]'::int4range)))*((('[-944894418,-917210102]'::int4range)-('(-1566279064,1972171232)'::int4range))))))))), EXCLUDE (((CAST(0.80693649921381382927876302346703596413135528564453125 AS VARCHAR(175)) COLLATE "C")) int2_minmax_multi_ops NULLS LAST WITH <>) WHERE (TRUE)) PARTITION BY HASH(((-1.47050419E9)::MONEY), (0.3743240929920397253027886108611710369586944580078125)varchar_ops) WITH (autovacuum_vacuum_scale_factor=0.9, parallel_workers=81, autovacuum_analyze_scale_factor=0.5, autovacuum_freeze_table_age=1385705672, autovacuum_analyze_threshold=1162284100, fillfactor=24, autovacuum_enabled=1, autovacuum_freeze_max_age=1592828131, autovacuum_vacuum_cost_delay=43);
[11/10 11:40:44] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 VARCHAR(56) , c1 FLOAT , c2 name COLLATE "C" ) PARTITION BY RANGE((0.52002394)enum_ops, ((((t0.c2)||(((((B'1111111111111111111111111111111111101000110100010101001000001110')&(B'1111111111111111111111111111111110100100000101001011101010101100')))#(((B'100001000001001010011100101010')|(B'100000101101001001111010101100')))))) SIMILAR TO t0.c2))pg_lsn_bloom_ops, (((ascii(t0.c2))/(CAST('183.218.195.9' AS INT)))), (CAST(0.9534286 AS MONEY)), ('233.133.218.90')inet_ops) WITH (autovacuum_enabled=1, autovacuum_analyze_scale_factor=0.9, autovacuum_analyze_threshold=1799500409, autovacuum_vacuum_cost_delay=50, autovacuum_freeze_max_age=616284096, autovacuum_vacuum_threshold=32120086, autovacuum_vacuum_cost_limit=6654, fillfactor=41, autovacuum_freeze_min_age=734860058, autovacuum_freeze_table_age=1266834780);
[11/10 11:40:44] CREATE TEMP TABLE IF NOT EXISTS t0(c0 FLOAT  NOT NULL UNIQUE, c1 FLOAT  NULL PRIMARY KEY UNIQUE, c2 int4range  UNIQUE DEFAULT ((((((((('[444562731,585111921]'::int4range)-('(-1832191890,-1470504249)'::int4range)))*((('(-917210102,2005905371)'::int4range)-('(-9223372036854775808,-11105536]'::int4range)))))-((((('(-234358023,165641102]'::int4range)*('(-1870825008,-1583794413]'::int4range)))-((('[-388935154,-110147207)'::int4range)-('(-1610756822,1620267082]'::int4range)))))))-((((((('[-1832191890,-9984988)'::int4range)-('(-826514838,-388935154)'::int4range)))*((('(-1827122481,1537520619)'::int4range)-('(-1870825008,1288458395)'::int4range)))))-((((('(-1317633935,1478817511]'::int4range)-('[364663375,991597494]'::int4range)))*((('(-1694063391,1274965313)'::int4range)*('(-1536672736,1515779335)'::int4range))))))))));
[11/10 11:40:44] CREATE UNLOGGED TABLE IF NOT EXISTS t0(c0 VARCHAR(409) , c1 serial , CHECK((((CAST(t0.c0 AS VARCHAR(830)))>((t0.c0 COLLATE "C")))) IS TRUE), EXCLUDE ((NULL) bit_ops ASC WITH >=, (CAST(0.200000714347269070714219196815975010395050048828125 AS VARCHAR)~*t0.c0) name_ops WITH =, (CAST(0.9534286 AS MONEY)) ASC NULLS FIRST WITH |>>) WHERE (((((CAST(0.9534286124915127 AS BOOLEAN))OR(((t0.c1)>(CAST('33.62.221.24' AS INT))))))OR(t0.c0~(+ (t0.c1))::VARCHAR)))) PARTITION BY RANGE(((((((((('[-1610756822,-234358023]'::int4range)-('(-1965254452,-1677393303)'::int4range)))*((('[-1620493069,1591636339]'::int4range)*('(-1583794413,-1583794413)'::int4range)))))*((((('(1517561390,1541076928)'::int4range)-('(-1724649147,676029686]'::int4range)))-((('[-11653163,1078223699)'::int4range)-('[-1583794413,-1470504249]'::int4range)))))))@>((((((('(-1819424324,-212587570]'::int4range)*('[409430179,639249168]'::int4range)))*((('[-218071500,1288458395]'::int4range)-('(-1989937879,384645742)'::int4range)))))*((((('(-1808103281,-130118395]'::int4range)*('(-41885068,845533317)'::int4range)))*((('[-363886624,530667595)'::int4range)*('[165641102,1359182858)'::int4range))))))))));
[11/10 11:40:44] CREATE TABLE t0(c0 serial  PRIMARY KEY UNIQUE, EXCLUDE ((((range_merge((((('[-1881400063,-944894418)'::int4range)-('[-200570290,1925686563)'::int4range)))*((('(-2067345134,-2038403695]'::int4range)*('[-964848294,176696660]'::int4range)))), (((('[980657305,1903795775]'::int4range)-('[-9984988,1769635415)'::int4range)))*((('[-2091824648,1103316745)'::int4range)*('[-1481113301,-816109999)'::int4range))))))-('(-1701157646,-699275915]'::int4range))) ASC NULLS FIRST WITH -) WHERE (((((((('(-1319430119,-666682939)'::int4range)*('[-1583794413,-562280438)'::int4range)))*('(-1067698274,-847676371)'::int4range)))<@((((('(-501610082,409430179]'::int4range)*('[530667595,1070673831]'::int4range)))*(CAST('[553953066,1174774561)'::int4range AS int4range)))))) IS FALSE), UNIQUE(c0));
[11/10 11:40:44] CREATE TEMPORARY TABLE t0(c0 REAL  PRIMARY KEY DEFAULT (0.68440866) CHECK ((((chr(lower('[-1920776979,1903795775)'::int4range)) COLLATE "en_US.utf8"))LIKE(chr(+ (140269010))))) NO INHERIT NOT NULL, c1 BIT VARYING(59) , EXCLUDE (c1 macaddr8_bloom_ops WITH >=, (((((upper('
D,'))||('65.113.199.208')) COLLATE "en_US.utf8") COLLATE "C")) numeric_ops DESC NULLS FIRST WITH -) WITH (autovacuum_vacuum_cost_limit=8540, autovacuum_freeze_min_age=525327664, autovacuum_analyze_threshold=252229925, fillfactor=24, autovacuum_vacuum_cost_delay=24, autovacuum_freeze_table_age=533058726, parallel_workers=668, autovacuum_enabled=0), CHECK((((CAST(FALSE AS INT))/(family('124.110.142.7')))) NOT IN (((ascii('|h/%2R'))/(CAST(1495508131 AS INT))), (((991597494)::INT)/(abs(-934425614))))), UNIQUE(c0, c1)) ON COMMIT DROP ;
[11/10 11:40:44] CREATE UNLOGGED TABLE IF NOT EXISTS t0(c0 name  NULL, c1 DECIMAL );
[11/10 11:40:44] CREATE TABLE t1(c0 boolean ) INHERITS(t0) PARTITION BY RANGE((t1.c0)) WITH (autovacuum_vacuum_cost_delay=10, autovacuum_enabled=0, autovacuum_freeze_table_age=1823282402, autovacuum_vacuum_scale_factor=0.8, autovacuum_freeze_max_age=1550969254, autovacuum_analyze_threshold=296734296, fillfactor=83, autovacuum_vacuum_threshold=794163915, parallel_workers=720);
[11/10 11:40:44] CREATE TEMPORARY TABLE t1(c0 bigserial , c1 bigint  UNIQUE DEFAULT (num_nulls(CAST(0.05104269 AS MONEY), current_schema())), PRIMARY KEY(c1) WITH (autovacuum_freeze_min_age=581115248, autovacuum_vacuum_scale_factor=0.01, autovacuum_vacuum_threshold=555705215, autovacuum_freeze_table_age=1457675022, autovacuum_vacuum_cost_limit=7291, parallel_workers=190), FOREIGN KEY (c1) REFERENCES t0(c1) ON UPDATE SET NULL DEFERRABLE INITIALLY IMMEDIATE, EXCLUDE (((((((((('[-666682939,866673536]'::int4range)-('(-1067698274,1936252244)'::int4range)))*((('[-519933133,1014717655)'::int4range)*('(-259381783,368207865)'::int4range)))))-((('(-699275915,1078223699)'::int4range)-((('(468861396,1572598387]'::int4range)*('(-1989937879,1070673831)'::int4range)))))))*((((((('[-666682939,1903381037]'::int4range)*('[-917210102,-49571387)'::int4range)))*((('(-847676371,1)'::int4range)-('(-388935154,1510741850)'::int4range)))))*('[1480573245,1620694358)'::int4range))))) poly_ops WITH ~*, (t1.c0) NULLS LAST WITH %, (((btrim((B'110001011110101110010010110010')::VARCHAR(750), (('WV?4Y*')||((2.00590541E9)::MONEY))))||((((((('(-1748856478,-1067698274)'::int4range)*('(623257239,1210299347]'::int4range)))-((('[-1583794413,-826514838]'::int4range)-('[-1610756822,-127619097)'::int4range)))))*('[-1881400063,-968533956]'::int4range))))) tid_minmax_multi_ops ASC NULLS FIRST WITH *, (((((to_ascii('j{}'))||(((((B'1111111111111111111111111111111111011000010000110011100111000101')&(B'1111111111111111111111111111111110000110100101110001001011111111')))||(((B'1111111111111111111111111111111111100100010110110011111011000010')#(B'1111001100010111010001011000100')))))))||((((('')||(t1.c0)) COLLATE "en_US.utf8") SIMILAR TO (upper('') COLLATE "en_US.utf8"))))) int8_ops DESC WITH <>)) PARTITION BY RANGE(((ascii(((t1.c1)::VARCHAR(9))::VARCHAR(267))) BETWEEN SYMMETRIC (t1.c0) AND ((((((B'1111111111111111111111111111111110101100100001000000111111111101')<<(B'1111111111111111111111111111111110000000100100110111111011100001')))::INT)-(t1.c1)))), (0.5200239455879916), (0.423844122207292617332541340147145092487335205078125)float4_minmax_ops, (((((((((B'10100011000100100111110011000')#(B'1111111111111111111111111111111111000100101110110010000101101011')))#(((B'101000010010110110010011110110')#(B'1111111111111111111111111111111111011000010001010101000100001111')))))||(((((B'1111111111111111111111111111111111110011010101000010101111001110')<<(B'1000101010000110011010101100100')))<<(((B'1100110000111111001000110001100')>>(B'1100011010111011110011111100111')))))))|(((((((B'100001000001001010011100101010')|(B'1111111111111111111111111111111110011011001001111101111010110000')))|(((B'110011000000111011111011101001')|(B'110111001100001011000110011000')))))|(((((B'1001111100011011100000011100100')<<(B'100001000001001010011100101010')))<<(B'1111111111111111111111111111111110001011100100010000101110010010')))))))array_ops) WITH (fillfactor=65, autovacuum_vacuum_cost_delay=37, autovacuum_freeze_min_age=947723715, autovacuum_analyze_scale_factor=0.1, autovacuum_freeze_max_age=565459769, parallel_workers=431) ON COMMIT DROP ;
[11/10 11:40:44] CREATE UNLOGGED TABLE IF NOT EXISTS t1(c0 VARCHAR(153) COLLATE "en_US.utf8"  UNIQUE DEFAULT (CAST('121.18.33.221' AS VARCHAR))) PARTITION BY LIST((((+ (+ (1687581666)))+((t1.c0)::INT)))uuid_ops) WITH (autovacuum_vacuum_threshold=6038486, autovacuum_vacuum_cost_limit=1411, fillfactor=20, autovacuum_freeze_min_age=848681453, autovacuum_analyze_scale_factor=1.0E-5, autovacuum_vacuum_scale_factor=0, autovacuum_analyze_threshold=1185902447, autovacuum_freeze_table_age=1949613811, parallel_workers=906, autovacuum_freeze_max_age=481342343, autovacuum_vacuum_cost_delay=5, autovacuum_enabled=0);
[11/10 11:40:44] CREATE TEMP TABLE t1(LIKE t0);
[11/10 11:40:44] CREATE TEMPORARY TABLE IF NOT EXISTS t2(c0 boolean  PRIMARY KEY NULL UNIQUE CHECK (t2.c0) NO INHERIT, c1 inet  UNIQUE) INHERITS(t1, t0) PARTITION BY LIST((0.6844086415018584)) WITH (autovacuum_freeze_table_age=1675943423, autovacuum_vacuum_threshold=42441767, autovacuum_freeze_max_age=357734329, autovacuum_analyze_scale_factor=0.8, parallel_workers=24, autovacuum_enabled=0, autovacuum_vacuum_cost_limit=307, autovacuum_analyze_threshold=1563178631, autovacuum_vacuum_cost_delay=95);
[11/10 11:40:44] CREATE UNLOGGED TABLE IF NOT EXISTS t2(LIKE t0 EXCLUDING CONSTRAINTS);
[11/10 11:40:44] CREATE TEMP TABLE IF NOT EXISTS t3(c0 inet  DEFAULT ('78.229.158.5') UNIQUE CHECK (((('78.129.135.225')::VARCHAR)LIKE(reverse(('''xY' COLLATE "en_US.utf8"))))) PRIMARY KEY, c1 BIT VARYING(464)  DEFAULT (((((((((B'1001100110011000101000010011011')||(B'1101000000110101110001100001001')))&(((B'1111111111111111111111111111111110011101010011101001000101010101')|(B'11111101000010101100001001011')))))>>(((((B'1111111111111111111111111111111111001100110110111110010011000011')>>(B'1001010111000011111111000000011')))||(CAST(B'1001011111111100110110101000001' AS BIT(118)))))))#(((((((B'1111111111111111111111111111111110100010101001000111101001101000')#(B'1111101101000111111010110011010')))<<(((B'1111111111111111111111111111111111011011101000001111000111001100')|(B'1111111111111111111111111111111110100101010000100101010011110001')))))&(((((B'1001011000101010001000010000001')<<(B'1110011101000000010011000101001')))||(((B'101110001011001010100001000110')||(B'11000011001110110100010100011'))))))))) NOT NULL, c2 inet  DEFAULT ('78.41.134.130') CHECK (((((t3.c1)>>(((t3.c1)>>((0.5629166)::BIT(679))))))IS NOT DISTINCT FROM(t3.c1))) NOT NULL, CHECK(((TRUE)OR(FALSE)))) PARTITION BY RANGE(((((((((('[-1440875008,860663435]'::int4range)*('[-1150182160,676029686]'::int4range)))*((('[1174774561,1387461740]'::int4range)*('(-1455125602,-826514838]'::int4range)))))*((((('[-501610082,639249168]'::int4range)*('(-544804774,298750578)'::int4range)))-((('(-1259390687,1759178912]'::int4range)-('(-1886454790,-1488002893]'::int4range)))))))*((((((('[-1119277007,1515779335)'::int4range)*('[-1822199196,-826514838]'::int4range)))*((('[-595420084,1746592521]'::int4range)-('(-2075092953,-1197118687]'::int4range)))))*((((('(-107293379,120504655]'::int4range)-('[-822947741,1578572538)'::int4range)))*((('(-1977291362,-1275560675]'::int4range)*('[-274978661,1516002597]'::int4range)))))))))bpchar_pattern_ops, (0.9756156870789800539256475531146861612796783447265625), (0.64920152631165517487232818893971852958202362060546875), (((lower(CAST(0.4876539466334903760724728272180072963237762451171875 AS VARCHAR(549))))||((((((('(-1681883927,-167269541]'::int4range)*('(676029686,762180800)'::int4range)))*((('(-363886624,1473249153)'::int4range)*('[-1749938196,-1542145364)'::int4range)))))*((((('(57773336,281150496)'::int4range)*('(-478847497,845213998]'::int4range)))*((('(-2017189050,-483485229)'::int4range)*('[-1273400685,43435379]'::int4range)))))))))numeric_minmax_ops);
[11/10 11:40:44] CREATE TEMPORARY TABLE t3(LIKE t1);
[11/10 11:40:44] CREATE TEMPORARY TABLE IF NOT EXISTS t4(LIKE t2);
[11/10 11:40:44] ALTER TABLE  ONLY t0 NOT OF;
[11/10 11:40:44] CREATE INDEX i0 ON t2 USING HASH(c0) WHERE (((CAST(0.9029489702146395 AS INT))/(('[135625534,585111921]'::int4range)::INT))) IN (pg_trigger_depth());
[11/10 11:40:44] CREATE INDEX i0 ON t3((0.5200239455879916) ASC NULLS FIRST);
[11/10 11:40:44] VACUUM FREEZE ANALYZE t1(c1, c0);
[11/10 11:40:44] REINDEX TABLE CONCURRENTLY t4;
[11/10 11:40:44] DELETE FROM ONLY t4 WHERE (CAST('-Infinity' AS MONEY)) IN ((0.7214345)::MONEY) RETURNING (t4.c1) BETWEEN (0.29032692508228319372420855870586819946765899658203125) AND (0.16647033593721760613703963826992549002170562744140625);
[11/10 11:40:44] DELETE FROM t2;
[11/10 11:40:44] RESET ROLE;
[11/10 11:40:44] DELETE FROM ONLY t1;
[11/10 11:40:44] LISTEN test;
[11/10 11:40:44] UPDATE t2 SET c1 = (t2.c1) WHERE ((upper_inc((((('[435948475,2000138538]'::int4range)*('[-1677393303,-1254077814]'::int4range)))*((('(-1610756822,-1371037851)'::int4range)*('(-2121663836,-668904528)'::int4range))))))OR((((t2.c0)||('[342828490,1368499015)'::int4range)) COLLATE "C")~t2.c0));
[11/10 11:40:44] RESET ALL;
[11/10 11:40:44] CREATE TEMPORARY SEQUENCE IF NOT EXISTS seq MINVALUE -11105536 CACHE 5076504357897457120 NO CYCLE OWNED BY NONE;
[11/10 11:40:44] CLUSTER t1;
[11/10 11:40:44] CLUSTER ;
[11/10 11:40:44] UPDATE t1 SET c0 = ((0.6301931)::VARCHAR) WHERE pg_jit_available();
[11/10 11:40:44] DELETE FROM t3;
[11/10 11:40:44] CREATE MATERIALIZED VIEW v0(c0, c1, c2) AS (SELECT t4.c0, 0.04026943302423402482048686579219065606594085693359375, 0.7970772959932848067410304793156683444976806640625 FROM ONLY t2, t4, ONLY t1, ONLY t0 WHERE (+ (family('18.50.219.12'))) NOT IN (num_nulls(TRUE, '183.24.1.215', 828720514, -822054594), - (((1639081946)+(-1319430119)))) LIMIT 157592391170318792 OFFSET 73293997905440276);
[11/10 11:40:44] CREATE VIEW v0(c0, c1, c2) AS (SELECT ALL ((((((((B'11011101101001101111000110100')#(B'1111111111111111111111111111111111000110011111011001010101011010')))||(((B'1001110111110111101110001110')#(B'1100000001000110111111010010001')))))#(((CAST((0.36932784)::MONEY AS BIT(49)))&(((B'1111111111111111111111111111111110001010110111001001100011001100')|(B'1111111111111111111111111111111110001101110011110010001011001010')))))))<<(((((((B'10110111011010011101001101110')<<(B'101100001100010100000001001010')))<<(((B'1001101101100111010000011011010')>>(B'1111111111111111111111111111111111001101011110010111110000101101')))))<<(((((B'1011101100001100110000100010011')>>(B'1111111111111111111111111111111111010111101101010001101100010001')))|(((NULL)#(B'1111111111111111111111111111111110000111111110010011101110000111')))))))), 1.537520619E9, (0.44683266617596906211673513098503462970256805419921875)::INT FROM ONLY t4, ONLY t3, ONLY t0, ONLY t2 WHERE ((0.391878320452041517540919812745414674282073974609375)>=(0.42571692530442251101163719795295037329196929931640625)));
[11/10 11:40:44] CREATE OR REPLACE RECURSIVE VIEW v0(c0) AS (SELECT ALL (((((((('[409430179,1503300727)'::int4range)-('[-582074259,1070673831]'::int4range)))*((('[-1067698274,879840462)'::int4range)*('(-1832191890,-205527208]'::int4range)))))-((('[845533317,1094785647]'::int4range)-('[-426695335,1423029358]'::int4range)))))-((((((('[268502327,1560762210)'::int4range)-('(-9223372036854775808,-1583794413)'::int4range)))*((('[-713955162,-485974441]'::int4range)*('(-1109383600,999403596]'::int4range)))))*((('[-903514372,-681569088]'::int4range)*((('(1078223699,1214914123)'::int4range)*('[-1252662827,2144555132)'::int4range)))))))) FROM ONLY t4, t2*, ONLY t3, ONLY t0 LIMIT 5048636180055316161);
[11/10 11:40:44] CREATE TEMPORARY VIEW v0(c0, c1, c2) AS (SELECT DISTINCT ((((((((B'1111111111111111111111111111111111000010000110010010111001111100')&(B'1001111000011111011001110111101')))||(B'10011011101111110101110011110')))>>(((((B'10001000100111010000110011011')#(B'1011010011101000010011000101110')))&(((B'1100011010000100110110010101011')#(B'1000110100101000111001011010001')))))))|(((((((B'1001100101000100111000011101')&(B'1111111111111111111111111111111110010000101001100111100100000111')))#(((B'1111111111111111111111111111111110001001000011101110000010111010')&(B'1111111111111111111111111111111110001101100111011001001101000010')))))#(((((B'1111011101111011101110111000111')<<(B'10101101111000101001001001111')))>>(((B'1111111111111111111111111111111111111001100011010110000111100100')|(B'1111111111111111111111111111111111010111100110101010010000111100')))))))), (t1.c0 SIMILAR TO upper(t1.c0)), (0.902949)::MONEY FROM ONLY t3, ONLY t1, t2* WHERE ((((((t2.c0)||(((-615175332)-(141084034)))))||((0.63126594)::BOOLEAN)))LIKE(CAST(((((B'1111111111111111111111111111111110001000110010000010100001010001')<<(B'1111111111111111111111111111111110011010100110100110010011110010')))&(((B'1111111111111111111111111111111111010101111110110011111001000010')|(B'1011010011101000010011000101110')))) AS VARCHAR))));
[11/10 11:40:44] CREATE TEMP VIEW v0(c0, c1) AS (SELECT CAST(0.067148864 AS MONEY), (((((((('(-944034365,1962910624)'::int4range)-('(-1944299475,-995978662]'::int4range)))-((('(-1882414664,-722800524)'::int4range)*('(-944894418,-605002527)'::int4range)))))*((((('(-524776767,839190989]'::int4range)*('[-736968526,-716545170)'::int4range)))*((('[-1462815680,1288458395]'::int4range)*('(-917210102,409256518]'::int4range)))))))*((- (+ (-716545170)))::int4range)) FROM t4);
[11/10 11:40:44] CREATE OR REPLACE TEMPORARY VIEW v0(c0) AS (SELECT ALL (0.22667877)::MONEY FROM ONLY t1, ONLY t4, ONLY t2, t3 WHERE isempty((((((('[-282144615,1925686563)'::int4range)*('[-1570346709,855883497]'::int4range)))*((('[-234358023,1058720461)'::int4range)*('(-1064455941,672001781]'::int4range)))))*((((('[-2038403695,182196693]'::int4range)*('(-29899836,851117563)'::int4range)))-((('[-1694707639,-1360072283)'::int4range)*(NULL))))))) ORDER BY t4.c1 ASC) WITH LOCAL CHECK OPTION;
[11/10 11:40:44] CREATE MATERIALIZED VIEW v0(c0) AS (SELECT DISTINCT ((((((((B'100111010101000010011101010110')&(B'1111111111111111111111111111111111110010011010101000011111011001')))|(CAST(t2.c0 AS BIT(949)))))&(((((B'1111111111111111111111111111111110110011100100111111100111100010')<<(NULL)))<<(((B'1111111111111111111111111111111110011100110111010101100111111001')<<(B'1111111111111111111111111111111111110010110111010001011110110100')))))))&(((((((B'110000011010010011100110010')|(B'1111111111111111111111111111111110100111101110000000000100101011')))|(((B'1111111111111111111111111111111111101010111011001011011101100101')|(B'1010010010000011101101101100010')))))>>(B'1110011011000010111110001101')))) FROM ONLY t2, t0, t1, t4* WHERE (isempty('(-9984988,1866017550]'::int4range)) IN (lower_inf('[-1684462507,1376782989)'::int4range)) LIMIT 2441514078543991573 OFFSET 1789016020853087444);
[11/10 11:40:44] CREATE MATERIALIZED VIEW v0(c0) AS (SELECT DISTINCT (0.9034933)::MONEY FROM ONLY t1, t0, t3*, t4, t2* WHERE ((((('[-1,570062433)'::int4range)*('[-968269635,-695432359]'::int4range)))*((('[-1694063391,1288458395)'::int4range)*('[-42272494,338133450)'::int4range))))) IN ((((('(-1566279064,1806754970)'::int4range)*('[-1878605279,1078601285)'::int4range)))-((('(-1470504249,-869631931]'::int4range)*('(-1015119602,1541637554]'::int4range))))) LIMIT 2033927916537185245 OFFSET 5801647531276274884);
[11/10 11:40:44] CLUSTER ;
[11/10 11:40:44] TRUNCATE TABLE t4 RESTART IDENTITY RESTRICT;
[11/10 11:40:44] UPDATE t0 SET c1 = (0.23609990626888588405307700668345205485820770263671875) WHERE (((t0.c0 COLLATE "C"))>=(t0.c0));
[11/10 11:40:44] UPDATE t0 SET c1 = 0.699516512111394650474949230556376278400421142578125, c0 = DEFAULT WHERE ((t0.c0)<=(t0.c0));
[11/10 11:40:44] ALTER TABLE  ONLY t0 ENABLE ROW LEVEL SECURITY, ALTER c1 SET STATISTICS 1522;
[11/10 11:40:44] RESET ROLE;
[11/10 11:40:44] UPDATE t0 SET c0 = '-363886624' WHERE (t0.c0 SIMILAR TO ((CAST('21.183.43.184' AS VARCHAR(63)))||((((('(-218071500,1492941286)'::int4range)-('(-1735911177,644579671]'::int4range)))-((('[-1969476006,-1150244283)'::int4range)*('(-1329805489,1288458395]'::int4range)))))));
[11/10 11:40:44] UPDATE t0 SET c1 = DEFAULT, c0 = 'RY1.?' WHERE (CAST(CAST(5.4870803E8 AS MONEY) AS INET)) NOTNULL;
[11/10 11:40:44] UPDATE t0 SET c0 = '3i\_-#BYg', c1 = DEFAULT WHERE (0.5138574)::BOOLEAN;
[11/10 11:40:44] UPDATE t1 SET c1 = 0.4187957131463111437597035546787083148956298828125 WHERE upper_inc((((('[553953066,1274965313]'::int4range)-('(-1965254452,541500669)'::int4range)))-(((NULL)*('[-1694063391,-562280438)'::int4range)))));
[11/10 11:40:44] UPDATE t0 SET c0 = (lower(initcap(((t0.c0)||(1541825946))))), c1 = 0.46224462549659539600810376214212737977504730224609375 WHERE (((('[-1808103281,1174774561]'::int4range)-((('[-1470504249,-1067698274]'::int4range)*((('[-964848294,547078420)'::int4range)*('(444562731,1473736781)'::int4range)))))))<@((((((('[-1118773763,0]'::int4range)-('(-1398878158,258770229]'::int4range)))-((('(-1647504811,-1389641920]'::int4range)*('(800819321,1769635415]'::int4range)))))*((((('(-1449677642,236727679]'::int4range)-('(-659940222,667332974]'::int4range)))*((('(-1025288819,548708012)'::int4range)-('(-671774999,1987869117)'::int4range))))))));
[11/10 11:40:44] ANALYZE t3(c1);
[11/10 11:40:44] ANALYZE;
[11/10 11:40:44] RESET ROLE;
[11/10 11:40:44] ALTER TABLE  ONLY t1 REPLICA IDENTITY NOTHING, SET WITHOUT OIDS, VALIDATE CONSTRAINT asdf, OWNER TO SESSION_USER, ALTER c1  SET DATA TYPE FLOAT, ALTER c1 DROP NOT NULL, ADD CONSTRAINT S FOREIGN KEY (c1, c0) REFERENCES t4(c1, c0) NOT DEFERRABLE NOT VALID, ALTER c0 SET STORAGE PLAIN, ALTER c0 SET STATISTICS 6393, NO FORCE ROW LEVEL SECURITY, ENABLE ROW LEVEL SECURITY, DROP  IF EXISTS c0, ALTER c0  SET(n_distinct_inherited=-0.1, n_distinct=1), ALTER c1 DROP DEFAULT, FORCE ROW LEVEL SECURITY, NOT OF, DISABLE ROW LEVEL SECURITY, SET WITHOUT CLUSTER, SET LOGGED;
[11/10 11:40:44] ALTER TABLE  t2 REPLICA IDENTITY FULL, VALIDATE CONSTRAINT asdf, DROP c1 CASCADE;
[11/10 11:40:44] ALTER TABLE  ONLY t4 ALTER c0  SET(n_distinct=1.0E-4, n_distinct_inherited=1.0E-4), ALTER c0 SET STORAGE EXTERNAL;
[11/10 11:40:44] ALTER TABLE  ONLY t4 SET WITHOUT OIDS;
[11/10 11:40:44] CREATE UNIQUE INDEX i0 ON t4 USING GIN(c0) WHERE ((t4.c1)=(t4.c1));
[11/10 11:40:44] CREATE INDEX i1 ON ONLY t3(((((((((('(237593759,1557900485)'::int4range)-('(857968782,1925686563)'::int4range)))-((('[-102692938,2065731687)'::int4range)-('[-2075692643,-1081227208]'::int4range)))))*((((('(-944894418,332805013]'::int4range)*('[-9223372036854775808,1541076928]'::int4range)))*('(-7327038,1205659910)'::int4range)))))-((((((('(-77370086,3456071)'::int4range)-('(-1566279064,9223372036854775807)'::int4range)))*((('[1174774561,1609657870]'::int4range)*('[-1481113301,1649741776)'::int4range)))))*((((('[-1121391537,1880452673]'::int4range)*('[703526701,1537520619)'::int4range)))-((('(-530017828,-135510736]'::int4range)-('(-677589323,1985224289)'::int4range))))))))), (num_nulls('237.54.10.110', + (strpos(t3.c0, t3.c0)), CAST(upper(t3.c0) AS VARCHAR(624)), (((('[-1653144035,256112093]'::int4range)*('[-41885068,2137212013]'::int4range)))*((('(-1550656238,1611354584]'::int4range)*('(-1677393303,-1533358738)'::int4range)))), ((((TRUE)OR(((((((FALSE)OR(TRUE)))AND(FALSE)))AND(FALSE)))))OR(TRUE)), 0.52797221938189642376215715557918883860111236572265625)) ASC) WHERE ((0.9173125)::MONEY) BETWEEN SYMMETRIC (CAST(0.5451452 AS MONEY)) AND ((-1.31943014E9)::MONEY);
[11/10 11:40:44] CREATE UNIQUE INDEX i0 ON ONLY t1(c0) INCLUDE(c1, c0) WHERE CAST((0.08587983)::MONEY AS BOOLEAN);
[11/10 11:40:44] CREATE INDEX i0 ON ONLY t1(c1 bpchar_bloom_ops, ((((t1.c1)>=(t1.c1))) IS UNKNOWN)) INCLUDE(c1) WHERE (('[-64985163,980657305]'::int4range)::VARCHAR(365)~*text('9.25.14.143')) IN (FALSE, (((B'111110010001100100111011010')||(B'1101001011110100111111001010111'))) NOTNULL, ((t1.c0)LIKE(CAST(t1.c1 AS VARCHAR))));
[11/10 11:40:44] CREATE INDEX i0 ON ONLY t4(c0 ASC, c0) INCLUDE(c0);
[11/10 11:40:44] CREATE INDEX i0 ON ONLY t1(c0 ASC, c1 ASC);
[11/10 11:40:44] CREATE INDEX i0 ON t1(c0 DESC, ('204.1.56.62') record_ops DESC NULLS LAST, c1) INCLUDE(c1, c0);
[11/10 11:40:44] CREATE UNIQUE INDEX i0 ON t1 USING HASH(c1);
[11/10 11:40:44] CREATE INDEX i0 ON ONLY t4 USING BTREE((t4.c1) DESC, (0.9029489702146395) ASC) INCLUDE(c0);
[11/10 11:40:44] CREATE UNIQUE INDEX i0 ON t2 USING BTREE(((((((t2.c0)::int4range)*('[-1965254452,1746592521)'::int4range)))*((((((('(595190966,1138277486]'::int4range)*('[-1298323138,1831040334]'::int4range)))-((('[-388935154,530667595]'::int4range)*('(-64985163,1769635415)'::int4range)))))*((((('(-292476089,982203229]'::int4range)*('(172854634,1766141150)'::int4range)))*((('(-945884346,1972171232)'::int4range)*('(-1136448811,1459821230]'::int4range))))))))), (0.9026345) ASC) INCLUDE(c0, c1);
[11/10 11:40:44] CREATE UNIQUE INDEX i0 ON ONLY t0(c0 ASC) WHERE ((t0.c1)IS DISTINCT FROM(0.11004953826828056673292621781001798808574676513671875));
[11/10 11:40:44] RESET ALL;
[11/10 11:40:44] COMMIT;
[11/10 11:40:44] SET SESSION statement_timeout = 5000;
;
