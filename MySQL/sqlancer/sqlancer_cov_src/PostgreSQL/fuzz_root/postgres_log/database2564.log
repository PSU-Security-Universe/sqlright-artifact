[11/10 19:59:02] \c test;
[11/10 19:59:02] DROP DATABASE IF EXISTS database2564;
[11/10 19:59:02] CREATE DATABASE database2564 WITH ENCODING 'utf8'  TEMPLATE template0;
[11/10 19:59:02] \c database2564;
[11/10 19:59:02] CREATE UNLOGGED TABLE IF NOT EXISTS t0(c0 boolean , c1 REAL  NOT NULL UNIQUE PRIMARY KEY CHECK (t0.c0) NO INHERIT DEFAULT (0.49784753), UNIQUE(c1)) PARTITION BY HASH((((((((((B'1111111111111111111111111111111110011101011111101111101100010110')>>(B'1111111111111111111111111111111111110001010000110110101110001111')))|(((B'1111111111111111111111111111111111010111100011111110011001101001')|(B'1111111111111111111111111111111110010011010100111001110011100110')))))#(((((B'1110011000000100110111010010101')<<(B'100000100011100110011011100001')))||(('[-2036600093,870085204)'::int4range)::BIT)))))<<(((((((B'110011110111000111001001010100')|(B'1101111011001001101000011101011')))#(((B'1111111111111111111111111111111110011100110000111000110111100010')>>(B'10010111111011011110111001010')))))||(((((B'10010111111011011110111001010')&(NULL)))&(((B'1111111111111111111111111111111110001100011100101011000111000001')&(B'1101111011001001101000011101011'))))))))), (CAST(((((((B'1111111111111111111111111111111110110111000111011110011111011011')<<(B'1111111111111111111111111111111110001100011100101011000111000001')))|(((B'1001101010111000111001011010')>>(B'10001011110001010101110011111')))))||(((((B'1111111111111111111111111111111110000100010010100011111101111111')&(B'11110100001000010010010001111')))|(((B'100000001110011000110001010')#(B'1111111111111111111111111111111110000110100110111111001011100011')))))) AS VARCHAR(478))), ('45.226.41.82')) WITH (fillfactor=65, autovacuum_enabled=1, autovacuum_vacuum_cost_delay=25, autovacuum_vacuum_cost_limit=8599, autovacuum_analyze_scale_factor=1.0E-5, autovacuum_freeze_max_age=1426596056);
[11/10 19:59:02] CREATE TEMP TABLE t0(c0 FLOAT , c1 FLOAT  PRIMARY KEY NOT NULL UNIQUE CHECK (((upper(CAST('[-389754164,2030902]'::int4range AS VARCHAR(148))))LIKE((((text('242.12.17.219'))||(pg_jit_available())) COLLATE "C")))) NO INHERIT) WITH (autovacuum_vacuum_cost_delay=99, parallel_workers=586, autovacuum_vacuum_cost_limit=3726);
[11/10 19:59:02] CREATE TEMPORARY TABLE IF NOT EXISTS t1(c0 boolean , c1 int4range  UNIQUE) INHERITS(t0) WITH (autovacuum_vacuum_threshold=1390964350, autovacuum_enabled=1, parallel_workers=871, fillfactor=62, autovacuum_freeze_min_age=803494356, autovacuum_analyze_threshold=399991246, autovacuum_vacuum_scale_factor=0.2, autovacuum_freeze_table_age=986648196, autovacuum_vacuum_cost_limit=8280, autovacuum_freeze_max_age=112745171, autovacuum_vacuum_cost_delay=48) ON COMMIT DELETE ROWS ;
[11/10 19:59:02] CREATE TEMP TABLE t1(c0 BIT VARYING(171) ) PARTITION BY HASH((t1.c0)float4_ops, (t1.c0)name_ops, (0.9340222)oid_minmax_multi_ops) WITH (parallel_workers=675, autovacuum_vacuum_cost_delay=73);
[11/10 19:59:02] CREATE TEMP TABLE t1(c0 int4range , c1 DECIMAL , c2 REAL , UNIQUE(c2, c1, c0), EXCLUDE (((0.795014)::INT) time_ops WITH <@, c1 WITH -) WITH (fillfactor=32)) PARTITION BY HASH((right((t1.c1)::VARCHAR(274), ((+ (-299761038))*(+ (-1221688499)))))macaddr8_ops, (t1.c1)) ON COMMIT PRESERVE ROWS ;
[11/10 19:59:02] CREATE TEMPORARY TABLE IF NOT EXISTS t1(LIKE t0);
[11/10 19:59:02] CREATE UNLOGGED TABLE IF NOT EXISTS t2(c0 int4range , UNIQUE(c0)) PARTITION BY LIST((-3.94722656E8));
[11/10 19:59:02] CREATE TEMPORARY TABLE t2(LIKE t1);
[11/10 19:59:02] CREATE UNLOGGED TABLE t3(c0 FLOAT  PRIMARY KEY, c1 TEXT COLLATE "en_US.utf8"  UNIQUE) INHERITS(t0);
[11/10 19:59:02] CREATE TEMPORARY TABLE IF NOT EXISTS t3(LIKE t2);
[11/10 19:59:02] SET SESSION vacuum_freeze_table_age=10;
[11/10 19:59:02] CREATE STATISTICS  s0 (mcv, ndistinct, dependencies) ON c1, c0 FROM t1;
[11/10 19:59:02] UPDATE t2 SET c0 = -1.66490573E9, c1 = DEFAULT WHERE (0.9600515949503647394891459043719805777072906494140625)::BOOLEAN;
[11/10 19:59:02] UPDATE t1 SET c0 = 0.22981039 WHERE (CAST(-1.65262259E9 AS MONEY))::VARCHAR!~*CAST('143.165.101.105' AS VARCHAR);
[11/10 19:59:02] TRUNCATE TABLE t0, t1, t2 CASCADE;
[11/10 19:59:02] ALTER TABLE  ONLY t3 ALTER c0 SET DEFAULT 0.39567602, FORCE ROW LEVEL SECURITY, NO FORCE ROW LEVEL SECURITY, REPLICA IDENTITY NOTHING, DROP  IF EXISTS c1, ALTER c1 DROP NOT NULL, SET WITHOUT CLUSTER, ALTER c0 SET STORAGE PLAIN, ENABLE ROW LEVEL SECURITY, VALIDATE CONSTRAINT asdf, ALTER c1 SET STATISTICS 6293, ALTER c0  RESET(n_distinct), ADD CONSTRAINT f UNIQUE(c0, c1);
[11/10 19:59:02] ALTER TABLE  ONLY t2 REPLICA IDENTITY NOTHING;
[11/10 19:59:02] DELETE FROM t1 WHERE CAST(CAST(0.049649043928246095 AS VARCHAR) AS BOOLEAN) RETURNING (((lower('-111176219') COLLATE "en_US.utf8") COLLATE "C") COLLATE "C");
[11/10 19:59:02] DELETE FROM t1 RETURNING (0.98053644334999201515046252097818069159984588623046875)::VARCHAR(792);
[11/10 19:59:02] CREATE TEMPORARY VIEW v0(c0, c1, c2) AS (SELECT ALL ((((-1792386714)::VARCHAR(485) COLLATE "C") COLLATE "C") COLLATE "en_US.utf8"), '206.155.45.24', 1.631230844E9 FROM t1* WHERE (- (((1286189409)*(1569251991))))::VARCHAR(911)~(current_schema() COLLATE "C")) WITH CASCADED CHECK OPTION;
[11/10 19:59:02] CREATE MATERIALIZED VIEW v0(c0, c1, c2, c3, c4, c5) AS (SELECT DISTINCT ON (num_nulls(CAST(0.807215326728185633697876255610026419162750244140625 AS DECIMAL), ((((B'1111111111111111111111111111111111111001111010101111101000010010')#(B'1111111111111111111111111111111111001101001101000101011100100011')))&(((B'1111111111111111111111111111111110110111110011000100110101001000')<<(NULL)))))) 0.60540397394928435748084893930354155600070953369140625, '78.211.202.112', 0.20819761011843274101096312733716331422328948974609375, '118.78.77.151', t0.c1, (0.22981039)::MONEY FROM ONLY t2, ONLY t0 WHERE ((((+ (((-571601991)/(-111176219))))*(abs(-363486244))))>(0.7992735)) LIMIT 2810594504774023787 OFFSET 2197913370770521459);
[11/10 19:59:02] CREATE TEMPORARY RECURSIVE VIEW v0(c0, c1, c2) AS (SELECT ALL 0.621747445804536003066687044338323175907135009765625, -1586417906, - (upper((('[-2063240056,1519515764)'::int4range)*('[-975945447,162238042]'::int4range)))) FROM t2, ONLY t1);
[11/10 19:59:02] ALTER TABLE  t0 ENABLE ROW LEVEL SECURITY, FORCE ROW LEVEL SECURITY;
[11/10 19:59:02] RESET ROLE;
[11/10 19:59:02] RESET ALL;
[11/10 19:59:02] ANALYZE( VERBOSE) t1;
[11/10 19:59:02] RESET ALL;
[11/10 19:59:02] INSERT INTO t3(c0) VALUES(inet_client_port());
[11/10 19:59:02] INSERT INTO t1(c1) VALUES(0.9340222), (0.795014);
[11/10 19:59:02] UPDATE t1 SET c0 = 0.7038793, c1 = 0.29745868 WHERE ((((((('(-410250063,1427867070)'::int4range)*('[222685302,2099961097)'::int4range)))-((('(293120927,991995205]'::int4range)*('(69161405,318619082]'::int4range)))))&&((((('[1075799653,1743656183]'::int4range)-('[48023130,1591257299)'::int4range)))-((('[-1652622570,1069149487]'::int4range)-('(-843361847,407638212]'::int4range))))))) IS FALSE;
[11/10 19:59:02] UPDATE t2 SET c0 = DEFAULT WHERE (((0.87571)::MONEY)::VARCHAR(324) SIMILAR TO (CAST(((783639368)%(-1378319999)) AS VARCHAR(285)) COLLATE "en_US.utf8"));
[11/10 19:59:02] UPDATE t3 SET c1 = (t3.c1) WHERE ((('1859864727' COLLATE "C") COLLATE "en_US.utf8") SIMILAR TO (((quote_ident('?1Xé­¼L+') COLLATE "en_US.utf8"))||('123.56.26.150')));
[11/10 19:59:02] DELETE FROM ONLY t2 WHERE ((- (+ (CAST(1617562789 AS INT))))<=(t2.c1)) RETURNING ascii(((quote_literal('|r'))||(CAST(0.39567602 AS MONEY))));
[11/10 19:59:02] RESET ROLE;
[11/10 19:59:02] SET LOCAL synchronize_seqscans=1;
[11/10 19:59:02] DISCARD SEQUENCES;
[11/10 19:59:02] ANALYZE t2(c1);
[11/10 19:59:02] CREATE STATISTICS  IF NOT EXISTS s1 (mcv, ndistinct) ON c1, c0 FROM t2;
[11/10 19:59:02] ALTER TABLE  t2 VALIDATE CONSTRAINT asdf, SET WITHOUT OIDS, ADD CONSTRAINT c FOREIGN KEY (c0, c1) REFERENCES t0(c0, c1) MATCH FULL ON DELETE RESTRICT ON UPDATE NO ACTION NOT DEFERRABLE, ENABLE ROW LEVEL SECURITY, ALTER c0 DROP NOT NULL, NO FORCE ROW LEVEL SECURITY, SET UNLOGGED, DISABLE ROW LEVEL SECURITY, SET WITHOUT CLUSTER, ALTER c0 SET STORAGE EXTERNAL, REPLICA IDENTITY NOTHING;
[11/10 19:59:02] ALTER TABLE  t2 ENABLE ROW LEVEL SECURITY;
[11/10 19:59:02] CLUSTER t2;
[11/10 19:59:02] CLUSTER ;
[11/10 19:59:02] DROP INDEX IF EXISTS i0, i2;
[11/10 19:59:02] DISCARD PLANS;
[11/10 19:59:02] DELETE FROM t2;
[11/10 19:59:02] SET min_parallel_index_scan_size=68445059;
[11/10 19:59:02] DISCARD PLANS;
[11/10 19:59:02] RESET ROLE;
[11/10 19:59:02] UPDATE t3 SET c0 = DEFAULT WHERE ((t3.c1)>(t3.c0));
[11/10 19:59:02] ALTER TABLE  t1 ALTER c1 DROP DEFAULT, NO FORCE ROW LEVEL SECURITY, SET WITHOUT CLUSTER, ALTER c1  SET(n_distinct=-0.5), DISABLE ROW LEVEL SECURITY, ALTER c1  TYPE REAL;
[11/10 19:59:02] INSERT INTO t3(c1, c0) VALUES(0.32083222, 1.61756275E9), (0.23856276, ((get_byte(version(), -389754164))-(abs(CAST(844887424 AS INT))))), (1.56925197E9, 0.3559454), (0.80643266, 0.3950054), (- (num_nulls(((69161405)^(1194087342)), CAST(-1.58641792E9 AS MONEY), (('(-1917386111,628474469)'::int4range)*('[592134598,627501447)'::int4range)))), 5.11976576E8), (0.22981039, 1.59125734E9);
[11/10 19:59:02] INSERT INTO t3(c1, c0) VALUES(2124187481, (CAST(0.3950054 AS MONEY))::INT) ON CONFLICT  DO NOTHING;
[11/10 19:59:02] INSERT INTO t3(c1) VALUES(0.15698531), (-1378319999), (0.61842465);
[11/10 19:59:02] DROP INDEX IF EXISTS i2, i2 CASCADE;
[11/10 19:59:02] DELETE FROM t3 RETURNING ('151.157.56.9')::VARCHAR~CAST(0.10983739191827102121834514036891050636768341064453125 AS VARCHAR(48));
[11/10 19:59:02] COMMIT;
[11/10 19:59:02] SET SESSION statement_timeout = 5000;
;
