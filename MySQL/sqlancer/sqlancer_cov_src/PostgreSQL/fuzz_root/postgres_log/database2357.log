[11/10 16:06:25] \c test;
[11/10 16:06:25] DROP DATABASE IF EXISTS database2357;
[11/10 16:06:25] CREATE DATABASE database2357 WITH ENCODING 'utf8'  TEMPLATE template0;
[11/10 16:06:25] \c database2357;
[11/10 16:06:25] CREATE TEMP TABLE t0(c0 smallint ) WITH (autovacuum_vacuum_cost_limit=6419, autovacuum_vacuum_scale_factor=1.0E-5, autovacuum_analyze_scale_factor=0.1, autovacuum_freeze_table_age=1880464527);
[11/10 16:06:25] CREATE TEMP TABLE IF NOT EXISTS t1(LIKE t0);
[11/10 16:06:25] CREATE TEMPORARY TABLE IF NOT EXISTS t2(LIKE t0);
[11/10 16:06:25] CREATE TABLE t3(LIKE t2);
[11/10 16:06:25] CREATE MATERIALIZED VIEW v0(c0, c1) AS (SELECT ALL 0.8497212258410600238534016170888207852840423583984375, inet_client_port() FROM ONLY t3);
[11/10 16:06:25] SET LOCAL enable_seqscan=DEFAULT;
[11/10 16:06:25] CREATE TEMPORARY SEQUENCE IF NOT EXISTS seq INCREMENT BY -426640699 NO MAXVALUE CACHE 1021268257187883660 OWNED BY NONE;
[11/10 16:06:25] UNLISTEN test;
[11/10 16:06:25] UPDATE t0 SET c0 = 1021268257187883660 WHERE ('210.140.173.12')::VARCHAR(755)!~CAST(1.02126825E18 AS VARCHAR(173));
[11/10 16:06:25] UPDATE t3 SET c0 = (((t3.c0)*(t3.c0))) WHERE (-4.26640699E8) NOT IN (0.15538413391964978, -6.8894566E8);
[11/10 16:06:25] DELETE FROM t3 WHERE ('164.197.46.210') IS NOT NULL;
[11/10 16:06:25] DELETE FROM ONLY t1;
[11/10 16:06:25] UPDATE t1 SET c0 = 1021268257187883660 WHERE (((CAST(0.09995807 AS VARCHAR(231)))||(0.4766654)) SIMILAR TO ((((CAST((0.63684404)::MONEY AS VARCHAR(607)))||(0.63684404)))||(0.750803467191122)));
[11/10 16:06:25] UPDATE t1 SET c0 = DEFAULT;
[11/10 16:06:25] NOTIFY asdf, '';
[11/10 16:06:25] ANALYZE;
[11/10 16:06:25] ALTER TABLE  t3 FORCE ROW LEVEL SECURITY, ALTER c0 SET STATISTICS 6297, ALTER c0 SET NOT NULL, SET WITHOUT CLUSTER, NOT OF, ADD CONSTRAINT F UNIQUE(c0) WITH (autovacuum_freeze_min_age=319630656, autovacuum_freeze_max_age=1560559700, autovacuum_vacuum_threshold=105598781, autovacuum_freeze_table_age=1139028492), ALTER c0  SET(n_distinct_inherited=1.0E-9), ALTER c0 SET STORAGE PLAIN, OWNER TO SESSION_USER, ENABLE ROW LEVEL SECURITY;
[11/10 16:06:25] ALTER TABLE  t3 ALTER c0 DROP DEFAULT, NOT OF, VALIDATE CONSTRAINT asdf, ALTER c0  SET DATA TYPE int4range, ALTER c0  SET(n_distinct=0), OWNER TO CURRENT_USER, ALTER c0 SET NOT NULL, ADD CONSTRAINT F UNIQUE(c0), SET WITHOUT OIDS, REPLICA IDENTITY FULL, SET WITHOUT CLUSTER, FORCE ROW LEVEL SECURITY, ENABLE ROW LEVEL SECURITY, NO FORCE ROW LEVEL SECURITY, DISABLE ROW LEVEL SECURITY;
[11/10 16:06:25] ALTER TABLE  ONLY t3 ALTER c0 SET STORAGE EXTERNAL, REPLICA IDENTITY NOTHING, ADD CONSTRAINT G UNIQUE(c0), VALIDATE CONSTRAINT asdf, ALTER c0 SET STATISTICS 5929, ALTER c0  TYPE bigint, OWNER TO CURRENT_USER, ALTER c0  SET(n_distinct_inherited=-1, n_distinct=-0.1), NO FORCE ROW LEVEL SECURITY, ENABLE ROW LEVEL SECURITY, NOT OF, SET UNLOGGED, ALTER c0 DROP NOT NULL, ALTER c0 DROP DEFAULT, ALTER c0  RESET(n_distinct_inherited, n_distinct);
[11/10 16:06:25] ALTER TABLE  ONLY t2 REPLICA IDENTITY DEFAULT, ADD CONSTRAINT i PRIMARY KEY(c0), VALIDATE CONSTRAINT asdf;
[11/10 16:06:25] CLUSTER ;
[11/10 16:06:25] DELETE FROM t1 RETURNING ((((((((B'110000110101110110010000110111')#(B'1000000011001101111101110001001')))||(((B'1101100011010110110100001101010')&(B'1111111111111111111111111111111110001001010101011001101011000101')))))&(((((B'1111111111111111111111111111111111100110100100011111101011000101')||(B'100100011010101001110000101111')))<<(((B'1111000011100011101010010110111')>>(B'110011011111100000110101101')))))))#(((((((B'1111111111111111111111111111111110001001010101011001101011000101')>>(B'1010000101101010100111110001100')))||(((B'111000101100010001100001000110101010000100001110101010001100')>>(B'11100011000111000010011100110')))))<<(((((B'1111100010110100100111001000011')|(B'1111111111111111111111111111111110101011101010111111100010110111')))&(((B'1111111111111111111111111111111111010011011001001000110000001111')>>(B'11000010100011011111100001001'))))))));
[11/10 16:06:25] UPDATE t2 SET c0 = DEFAULT WHERE pg_is_other_temp_schema();
[11/10 16:06:25] UPDATE t1 SET c0 = DEFAULT WHERE NOT ((CAST(0.3724983332134084168529852831852622330188751220703125 AS BOOLEAN)) IS FALSE);
[11/10 16:06:25] UPDATE t1 SET c0 = DEFAULT;
[11/10 16:06:25] LISTEN test;
[11/10 16:06:25] ALTER TABLE  ONLY t0 OWNER TO SESSION_USER;
[11/10 16:06:25] UPDATE t0 SET c0 = DEFAULT WHERE (((t0.c0)+(t0.c0)))::VARCHAR~*((((('L' COLLATE "en_US.utf8"))||(0.04583018167034469403375851470627821981906890869140625)))||(NOT (NOT (TRUE))));
[11/10 16:06:25] ALTER TABLE  ONLY t2 ALTER c0 SET DEFAULT ((upper((('[165640207,1682297287)'::int4range)*('[-1622019374,1827462854)'::int4range))))-(((ascii('g0^l!'))%(+ (num_nonnulls(500570745, -1913805748, -247904251, ']')))))), NOT OF, ALTER c0  SET(n_distinct_inherited=-1.0E-5, n_distinct=-1.0E-5), SET WITHOUT OIDS;
[11/10 16:06:25] ALTER TABLE  t2 ALTER c0  RESET(n_distinct, n_distinct_inherited), NOT OF, OWNER TO SESSION_USER, REPLICA IDENTITY FULL, ALTER c0  SET(n_distinct=-0.5, n_distinct_inherited=-0.8), SET WITHOUT CLUSTER, ALTER c0 SET STORAGE MAIN, ENABLE ROW LEVEL SECURITY, NO FORCE ROW LEVEL SECURITY;
[11/10 16:06:25] ALTER TABLE  ONLY t3 REPLICA IDENTITY DEFAULT, ALTER c0 SET STORAGE EXTENDED, ALTER c0 DROP NOT NULL, ALTER c0  SET(n_distinct_inherited=-0.2, n_distinct=-0.8), ENABLE ROW LEVEL SECURITY, NO FORCE ROW LEVEL SECURITY, SET WITHOUT CLUSTER, NOT OF, ALTER c0 SET STATISTICS 741, ALTER c0  TYPE boolean, ALTER c0  RESET(n_distinct), FORCE ROW LEVEL SECURITY, ALTER c0 SET DEFAULT pg_backend_pid(), VALIDATE CONSTRAINT asdf, ADD CONSTRAINT L CHECK(TRUE) NOT VALID;
[11/10 16:06:25] CREATE UNIQUE INDEX i0 ON t2(((((family('77.76.199.158'))::INT)*(- ((0.2854687547162116)::INT)))) ASC, ((((((((('(-1,476284134]'::int4range)*('(865864098,1643307373)'::int4range)))-(('225.164.189.173')::int4range)))*(((((NULL)*('(644912651,1456372092]'::int4range)))*((('(-869580751,63593801]'::int4range)-('(178133978,325226754]'::int4range)))))))-((((((('(-1511436814,-879785171)'::int4range)*('[-186191591,165640207]'::int4range)))-((('[-535818544,1787170619)'::int4range)*('[291289664,1293772894]'::int4range)))))-((((('(-247904251,1005766365]'::int4range)-('[700405412,1787170619)'::int4range)))-((('[-599339315,1456372092)'::int4range)-('(610966575,1293772894]'::int4range)))))))))) INCLUDE(c0) WHERE CAST((((((('[-2030128846,-869580751]'::int4range)-('(-1990878523,-1499451978]'::int4range)))-((('[-1229796019,408010505]'::int4range)-('[739525413,1682297287)'::int4range)))))-((((('[-1499451978,1080490889)'::int4range)*('(-1038027685,536630933)'::int4range)))*((('(-1184298837,1056264945)'::int4range)*('(-1229796019,1787170619]'::int4range)))))) AS BOOLEAN);
[11/10 16:06:25] CREATE INDEX i0 ON ONLY t1(c0 ASC);
[11/10 16:06:25] UPDATE t0 SET c0 = -118510972 WHERE NOT (((t0.c0)::VARCHAR) IN ((-748385265)::VARCHAR, substr('-186191591', t0.c0, t0.c0)));
[11/10 16:06:25] UPDATE t3 SET c0 = 435531781 WHERE ((t3.c0)>(t3.c0));
[11/10 16:06:25] UPDATE t0 SET c0 = DEFAULT WHERE ((((('67.233.51.130') IN ('131.91.183.7', '140.89.173.158'))OR(((((t0.c0)-(-2030128846))) BETWEEN SYMMETRIC (t0.c0) AND (t0.c0)) IS FALSE)))OR((('nVL' COLLATE "en_US.utf8")) IN (CAST(B'111110111101010101001011110001' AS VARCHAR), (0.5926020423175311)::VARCHAR, btrim('h✏', '1080490889'))));
[11/10 16:06:25] UPDATE t3 SET c0 = 476284134 WHERE ((((((('[-179748700,1080490889)'::int4range)*('(-1862137160,2097382156]'::int4range)))*((('(-1639700988,1605329079]'::int4range)*('[-50053056,165640207)'::int4range)))))@>((((('[-179748700,1241097892)'::int4range)*('(-1882945653,1107434386)'::int4range)))-((('(-410519210,0)'::int4range)*('[-526477469,1676582851]'::int4range))))))) IS FALSE;
[11/10 16:06:25] UPDATE t0 SET c0 = DEFAULT WHERE ((masklen('73.121.110.105'))IS NOT DISTINCT FROM(t0.c0));
[11/10 16:06:25] CLUSTER t0;
[11/10 16:06:25] CLUSTER t2;
[11/10 16:06:25] CLUSTER ;
[11/10 16:06:25] SET cpu_tuple_cost=10000;
[11/10 16:06:25] CREATE UNIQUE INDEX i0 ON t0 USING BTREE(c0, c0) INCLUDE(c0) WHERE ((replace(('1676582851' COLLATE "C"), ('-457888205' COLLATE "C")))LIKE('1340050401'));
[11/10 16:06:25] CREATE UNIQUE INDEX i0 ON ONLY t2 USING BTREE(c0 ASC) INCLUDE(c0) WHERE NOT ((((((((((((+ (t2.c0)) BETWEEN SYMMETRIC (t2.c0) AND (t2.c0))AND(CAST(t2.c0 AS BOOLEAN))))AND(((((((((((t2.c0)<(t2.c0)))AND((FALSE) IS FALSE)))OR((t2.c0) IN (t2.c0))))AND(((t2.c0)IS NOT DISTINCT FROM(t2.c0)))))OR((0.96546934268089368291754226447665132582187652587890625) IN (0.35571285802013463683834970652242191135883331298828125))))))OR((((t2.c0)IS NOT DISTINCT FROM(t2.c0))) IS TRUE)))AND((t2.c0) IN (t2.c0))))OR(((t2.c0)<=(t2.c0)))));
[11/10 16:06:25] DELETE FROM ONLY t3;
[11/10 16:06:25] RESET ALL;
[11/10 16:06:25] COMMIT;
[11/10 16:06:25] SET SESSION statement_timeout = 5000;
;
