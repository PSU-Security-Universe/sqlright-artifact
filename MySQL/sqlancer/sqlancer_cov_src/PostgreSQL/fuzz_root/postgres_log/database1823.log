[11/09 21:13:32] \c test;
[11/09 21:13:32] DROP DATABASE IF EXISTS database1823;
[11/09 21:13:32] CREATE DATABASE database1823  TEMPLATE template0;
[11/09 21:13:32] \c database1823;
[11/09 21:13:32] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 REAL , c1 inet  PRIMARY KEY NULL DEFAULT ('112.80.247.247'), c2 bigserial  UNIQUE CHECK (((range_merge((((('[871563767,871563767)'::int4range)-('[-522354096,-493475823)'::int4range)))-('[-493475823,1478057432]'::int4range)), (((('(-1133869165,-249087105)'::int4range)*('(-2076523002,-111339218)'::int4range)))*((('[-1133869165,-522354096]'::int4range)-('(-459048554,-111339218]'::int4range))))))>>(((((CAST(NULL AS int4range))-((('[-621981946,871563767]'::int4range)*('(-898187965,-493475823]'::int4range)))))*((((('(-693371539,-111339218)'::int4range)-('[-577695813,576954791]'::int4range)))-((('[-693371539,-111339218]'::int4range)*('(-203620524,224940465)'::int4range)))))))))) PARTITION BY LIST((CAST('190.91.246.150' AS INT))) WITH (autovacuum_vacuum_threshold=1062299422, fillfactor=27, autovacuum_vacuum_cost_delay=44, autovacuum_analyze_threshold=2108274943, autovacuum_analyze_scale_factor=0.8, autovacuum_freeze_table_age=1095936234, autovacuum_vacuum_cost_limit=1135);
[11/09 21:13:32] CREATE TEMPORARY TABLE t0(c0 FLOAT , CHECK((CAST(((((-459048554)+(1888720292)))/(CAST(1478057432 AS INT))) AS VARCHAR) SIMILAR TO split_part(upper('q'), ('T>+')::INT))), PRIMARY KEY(c0), UNIQUE(c0), EXCLUDE ((0.16197979759759806) int2_minmax_ops WITH /));
[11/09 21:13:32] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 BIT VARYING(189)  NOT NULL PRIMARY KEY, UNIQUE(c0), CHECK((t0.c0) BETWEEN SYMMETRIC (t0.c0) AND (((t0.c0)|(((((t0.c0)&(t0.c0)))>>(t0.c0))))))) PARTITION BY HASH(((CAST(0.3931029964808789856078874436207115650177001953125 AS VARCHAR) COLLATE "C"))tsvector_ops, (0.01188200905741909618740237419842742383480072021484375));
[11/09 21:13:32] CREATE TABLE IF NOT EXISTS t0(c0 serial , c1 boolean  NOT NULL CHECK (t0.c1) PRIMARY KEY, UNIQUE(c0) WITH (autovacuum_analyze_scale_factor=0.01, autovacuum_vacuum_cost_limit=9127, autovacuum_freeze_max_age=113464448, autovacuum_enabled=0, autovacuum_vacuum_cost_delay=72, fillfactor=39, autovacuum_analyze_threshold=1977944221, parallel_workers=814, autovacuum_vacuum_threshold=869232052, autovacuum_freeze_table_age=1502845015, autovacuum_freeze_min_age=843909533), CHECK(t0.c1), EXCLUDE (c1 DESC NULLS FIRST WITH <<|) WHERE (t0.c1));
[11/09 21:13:32] CREATE TABLE t0(c0 int4range , c1 boolean , c2 REAL , c3 FLOAT  NOT NULL CHECK (t0.c1) NO INHERIT, CHECK(t0.c1), UNIQUE(c2, c0, c1), PRIMARY KEY(c1, c0)) WITH (autovacuum_analyze_threshold=295014761, autovacuum_freeze_min_age=698436644, autovacuum_freeze_table_age=943247189, autovacuum_freeze_max_age=282436133, autovacuum_vacuum_cost_delay=30);
[11/09 21:13:32] CREATE TABLE IF NOT EXISTS t1(c0 REAL  PRIMARY KEY UNIQUE DEFAULT (abs(num_nonnulls('(7a', 2129962352, B'1111111111111111111111111111111111100100001110001010110001100111', -1937205242, 1245273500))), c1 bigint ) INHERITS(t0) PARTITION BY RANGE((CAST(0.7828233 AS MONEY)), (((range_merge((((('[-2015042624,596413232]'::int4range)*('(-249087105,1478057432)'::int4range)))*((('[-1876516878,1279710387]'::int4range)*('(-831077285,1052259589]'::int4range)))), (((('(-461903520,-249087105)'::int4range)*('(-2095623743,-111339218)'::int4range)))*((('[-2015042624,596413232]'::int4range)-('(-1928749455,-969102000)'::int4range))))))*((((((('[-1760266689,-1255510026]'::int4range)-('(-1957848385,1279710387)'::int4range)))*((('[-577520198,-177977617)'::int4range)*('[-1760266689,-466047897]'::int4range)))))*((((('(-577695813,-177977617]'::int4range)*('[-763320801,-252868560)'::int4range)))-((('[-48550109,1719678261)'::int4range)*('(-1843939450,-1353870698)'::int4range))))))))));
[11/09 21:13:32] CREATE TEMP TABLE t1(LIKE t0 INCLUDING STORAGE);
[11/09 21:13:32] CREATE TEMP TABLE IF NOT EXISTS t2(c0 BIT VARYING(12) , c1 inet , UNIQUE(c0), PRIMARY KEY(c1), CHECK((((((0.28284085)::VARCHAR COLLATE "en_US.utf8") COLLATE "C"))LIKE((CAST((FALSE)::BOOLEAN AS VARCHAR(764)))::VARCHAR))), EXCLUDE (c0 DESC NULLS FIRST WITH <@)) INHERITS(t1) WITH (autovacuum_analyze_threshold=120420283, autovacuum_vacuum_cost_delay=70, fillfactor=58, autovacuum_enabled=0);
[11/09 21:13:32] CREATE UNLOGGED TABLE IF NOT EXISTS t2(c0 FLOAT , FOREIGN KEY (c0) REFERENCES t0(c3) ON UPDATE CASCADE, CHECK((upper('enS') SIMILAR TO chr((((B'1000111010100111111010000010')>>(B'1111111111111111111111111111111111101111100010010010010010110111')))::INT))), UNIQUE(c0), EXCLUDE ((((((((((B'1111111111111111111111111111111111010010100000001010011000011111')||(B'1111111111111111111111111111111111100111000101001000110010110010')))&(((B'1111111111111111111111111111111110010111000101000111011000111111')|(B'1111111111111111111111111111111110000100001100101011100011101011')))))<<(((((B'1111111111111111111111111111111110001101110010110111111011001101')|(B'1110111001110001010101011011000')))||(((NULL)>>(B'1111111111111111111111111111111111011101100100010000111110111011')))))))>>(((((((B'1111111111111111111111111111111110110011010011010110011011001000')>>(B'100011100011001000101100110000')))<<(B'1111111111111111111111111111111110100001100111010101101101000101')))#(((((B'1111111111111111111111111111111110110110101000110011011101010001')||(B'1111111111111111111111111111111111110000000011100001011110000110')))>>(B'1111111111111111111111111111111110101000111100111001111101011000'))))))) range_ops DESC NULLS LAST WITH >, (0.75297026002690625734459217710536904633045196533203125) ASC WITH =, (0.27543661585947887271430545297334901988506317138671875) int8_ops DESC WITH >>));
[11/09 21:13:32] CREATE TABLE IF NOT EXISTS t2(LIKE t1);
[11/09 21:13:32] CREATE TABLE t3(LIKE t1 EXCLUDING DEFAULTS INCLUDING DEFAULTS INCLUDING ALL);
[11/09 21:13:32] CREATE TEMPORARY TABLE IF NOT EXISTS t4(c0 CHAR(451) COLLATE "C"  NULL CHECK ((((t4.c0)||((('[-708069505,1185307013]'::int4range)*('(-1233142118,1789120673]'::int4range))))) NOT IN (t4.c0)) NO INHERIT UNIQUE DEFAULT (lower((abbrev(NULL) COLLATE "en_US.utf8"))) PRIMARY KEY, c1 inet , c2 FLOAT ) PARTITION BY HASH((t4.c1)inet_bloom_ops, (+ (((- (+ (9223372036854775807)))-(+ (('(0,2127358333)'::int4range)::INT)))))numeric_ops);
[11/09 21:13:32] CREATE TABLE IF NOT EXISTS t4(LIKE t3);
[11/09 21:13:32] CREATE TEMPORARY TABLE IF NOT EXISTS t5(c0 DECIMAL , UNIQUE(c0)) INHERITS(t4) WITH (autovacuum_vacuum_cost_delay=75, fillfactor=96, autovacuum_freeze_table_age=969326881, autovacuum_vacuum_scale_factor=1.0E-5, parallel_workers=757, autovacuum_vacuum_cost_limit=874);
[11/09 21:13:32] CREATE TEMP TABLE t5(c0 BIT VARYING(53)  CHECK ((((lower('') COLLATE "C"))||(- (+ (42848145))))!~*((upper(''))||('154.102.129.82'))) PRIMARY KEY, UNIQUE(c0), EXCLUDE (c0 DESC NULLS LAST WITH #, c0 NULLS FIRST WITH &>), FOREIGN KEY (c0) REFERENCES t2(c0) ON DELETE SET DEFAULT ON UPDATE CASCADE DEFERRABLE, CHECK(((replace(reverse('{&~/|h]'), (FALSE)::VARCHAR))LIKE(((((('[-2069709372,-154161805)'::int4range)*('(826465395,1881251244)'::int4range)))*((('(-917903496,219018073)'::int4range)-('[-2095262617,657432497]'::int4range)))))::VARCHAR)))) INHERITS(t4, t3, t0, t1, t2) PARTITION BY RANGE(('41.248.177.226')jsonb_path_ops, (num_nonnulls(t5.c0, 0.32746101192222865083891747417510487139225006103515625, ((t5.c0)|(t5.c0)))), ('233.198.82.37')date_ops) ON COMMIT DELETE ROWS ;
[11/09 21:13:32] CREATE UNLOGGED TABLE IF NOT EXISTS t5(c0 boolean , c1 BIT VARYING(6) , EXCLUDE (c1 NULLS FIRST WITH /) WITH (autovacuum_freeze_table_age=1983382027, parallel_workers=65, autovacuum_enabled=0, autovacuum_vacuum_threshold=353004407, autovacuum_analyze_threshold=457399164, autovacuum_vacuum_cost_delay=10, fillfactor=68, autovacuum_vacuum_cost_limit=3879, autovacuum_analyze_scale_factor=0.2, autovacuum_freeze_min_age=741811917)) INHERITS(t1, t4, t2) PARTITION BY LIST((((((((CAST('98.34.129.181' AS INT))+(CAST('' AS INT))))/(('	_戠(?Ejj')::INT)))-(- (lower('[-1433584156,-518960206]'::int4range)))))macaddr8_bloom_ops);
[11/09 21:13:32] CREATE TABLE IF NOT EXISTS t5(c0 BIT VARYING(38)  NULL PRIMARY KEY UNIQUE, c1 DECIMAL  UNIQUE CHECK (((('	')||((((('[-1973653941,-693371539)'::int4range)*('(-1878182621,-522354096]'::int4range)))*((('[-556452817,1079242189]'::int4range)*('[-622095200,1396920590)'::int4range)))))) SIMILAR TO ((((('')||('166.254.57.212')) COLLATE "C"))||((NULL) BETWEEN (t5.c1) AND (0.4322109516063086243065072267199866473674774169921875))))) NO INHERIT DEFAULT (0.40064437960339349675820130869396962225437164306640625), c2 int4range , UNIQUE(c0, c2, c1), CHECK((((num_nulls(FALSE))+(((-1618152863)*(-1048814131))))) IN (0.9018113, ascii(''))));
[11/09 21:13:32] RESET ROLE;
[11/09 21:13:32] CREATE MATERIALIZED VIEW v0(c0, c1) AS (SELECT DISTINCT ((num_nulls((('퀬?yug(쟪')||('nJ'))))-((CAST(0.6643575 AS MONEY))::INT)), '142.222.102.202' FROM t4*, ONLY t5, t2);
[11/09 21:13:32] CREATE MATERIALIZED VIEW v0(c0, c1) AS (SELECT ALL t2.c3, (0.34078708)::MONEY FROM t2*, ONLY t5, ONLY t0, t1*, t3 LIMIT 6706795521805176247);
[11/09 21:13:32] CREATE MATERIALIZED VIEW v0(c0) AS (SELECT ALL CAST(0.078420475 AS MONEY) FROM t3*, t1* WHERE t1.c1);
[11/09 21:13:32] CREATE RECURSIVE VIEW v0(c0, c1, c2) AS (SELECT ALL (0.34078708)::MONEY, t2.c1, t0.c0 FROM t0*, ONLY t2, ONLY t3, t1*, ONLY t5 WHERE t1.c1 LIMIT 8429677144667097832);
[11/09 21:13:32] CREATE TEMPORARY SEQUENCE IF NOT EXISTS seq AS bigint MINVALUE -518960206 NO CYCLE;
[11/09 21:13:32] CREATE STATISTICS  IF NOT EXISTS s0 ON c1, c3, c2 FROM t4;
[11/09 21:13:32] SET parallel_leader_participation=DEFAULT;
[11/09 21:13:32] DROP INDEX IF EXISTS i0 RESTRICT;
[11/09 21:13:32] CREATE UNIQUE INDEX i0 ON t4 USING GIN(((B'1111111111111111111111111111111111111101000110110010111100100011')::INT) DESC NULLS FIRST, c1 ASC) INCLUDE(c2, c3, c1);
[11/09 21:13:32] CREATE INDEX i0 ON ONLY t1(c1 ASC, (((((((CAST(B'1111111111111111111111111111111111011101100100010000111110111011' AS INT))-(num_nulls(B'1011110110000000100010011101000', CAST(0.8641693 AS MONEY)))))-(((to_hex('-1460428968'))^((t1.c0)::INT)))))^(219018073)))) INCLUDE(c0);
[11/09 21:13:32] CREATE UNIQUE INDEX i0 ON t2 USING BTREE(c1 timestamp_bloom_ops, c1 ASC) INCLUDE(c1, c3, c0, c2) WHERE ((0.8900027)::MONEY) NOTNULL;
[11/09 21:13:32] CREATE UNIQUE INDEX i0 ON ONLY t3(c1, (t3.c3) DESC) INCLUDE(c3, c0, c2, c1) WHERE ((t3.c3) IN (- (164569286), t3.c3, -831077285)) BETWEEN (t3.c1) AND (t3.c1);
[11/09 21:13:32] UPDATE t2 SET c0 = (((((t2.c0)-(((CAST(0.60911841737885996650447850697673857212066650390625 AS int4range))*(t2.c0)))))-(((((t2.c0)*(t2.c0)))*(((((t2.c0)*(t2.c0)))-(((t2.c0)*(t2.c0))))))))) WHERE t2.c1;
[11/09 21:13:32] UPDATE t4 SET c3 = DEFAULT WHERE t4.c1;
[11/09 21:13:32] UPDATE t0 SET c1 = FALSE WHERE ((translate('1', '', '') COLLATE "C") SIMILAR TO ((((0.5843684123719403711305631077266298234462738037109375)::VARCHAR)||(CAST(B'1111111111111111111111111111111111011001100000000101011010111110' AS BIT))) COLLATE "C"));
[11/09 21:13:32] SET vacuum_cleanup_index_scale_factor=100000;
