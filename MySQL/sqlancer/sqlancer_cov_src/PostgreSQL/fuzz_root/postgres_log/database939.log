[11/08 20:33:54] \c test;
[11/08 20:33:54] DROP DATABASE IF EXISTS database939;
[11/08 20:33:54] CREATE DATABASE database939  TEMPLATE template0;
[11/08 20:33:54] \c database939;
[11/08 20:33:54] CREATE TEMP TABLE t0(c0 int4range  NULL UNIQUE DEFAULT (((((range_merge((('(-960798761,727480365)'::int4range)-('(-960798761,401018532)'::int4range)), (('[-481503263,-481503263]'::int4range)-('[-1459497756,-1083453155]'::int4range))))*((((('(1035229493,1557180047)'::int4range)-('(-677098827,929212723]'::int4range)))*((('[1142462773,2095738650]'::int4range)*('(-1083453155,-235347414)'::int4range)))))))-((((((('[-1800778121,401018532)'::int4range)*('(-235347414,567205414]'::int4range)))-((('[-1800778121,-235347414]'::int4range)*('(-1340660323,746731336]'::int4range)))))*((((('(1360008505,1360008505]'::int4range)-('[-1732021708,1820648440)'::int4range)))*((('(-396709280,-246354661]'::int4range)*('(1356554013,1813181928)'::int4range))))))))), EXCLUDE ((0.1879453857854092024837200369802303612232208251953125) DESC WITH <<) WHERE ((((((((((pg_is_other_temp_schema())OR(isempty(t0.c0))))AND(lower_inf(t0.c0))))AND('V39CtC᪩'~*'727480365')))AND(((t0.c0)<(t0.c0))))) IN (((CAST(CAST(-3.9670928E8 AS MONEY) AS VARCHAR))LIKE(CAST(CAST(0.8857805 AS MONEY) AS VARCHAR(412)))))), CHECK((t0.c0) IN (t0.c0))) WITH (autovacuum_vacuum_cost_delay=4, autovacuum_analyze_scale_factor=1.0E-5, autovacuum_freeze_table_age=1936714908, autovacuum_vacuum_threshold=1058083990, autovacuum_analyze_threshold=1406770664, autovacuum_vacuum_scale_factor=0.01);
[11/08 20:33:54] CREATE UNLOGGED TABLE t0(c0 REAL , c1 bigserial  PRIMARY KEY CHECK ((CAST(0.41745517 AS MONEY))::BOOLEAN) NO INHERIT, CHECK(CAST(((t0.c1)>=(t0.c1)) AS VARCHAR(699))~*''));
[11/08 20:33:54] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 inet , c1 bigserial  PRIMARY KEY, EXCLUDE (c1 WITH >=), CHECK(FALSE)) PARTITION BY LIST((((((((((B'1000011111011100101100111010110')||(B'1001111001010100000001001111000')))&(((B'1111111111111111111111111111111111110001111110001110001000101010')&(B'1111111111111111111111111111111111110100011001010100111110111000')))))||(((((B'101011010111000111100000101101')&(B'1111111111111111111111111111111110101001000000011101010011100100')))&(((B'1111111111111111111111111111111111100011010011001101011111100001')|(B'10010001000000110110001011001')))))))<<((upper('567205414'))::BIT(532))))bit_minmax_ops) WITH (autovacuum_freeze_table_age=160081575, fillfactor=29, parallel_workers=757, autovacuum_analyze_scale_factor=1.0E-5, autovacuum_freeze_min_age=945077816, autovacuum_vacuum_threshold=852055812, autovacuum_vacuum_scale_factor=1);
[11/08 20:33:54] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 boolean ) ON COMMIT PRESERVE ROWS ;
[11/08 20:33:54] CREATE TEMPORARY TABLE IF NOT EXISTS t1(c0 BIT VARYING(244) , UNIQUE(c0)) INHERITS(t0) WITH (autovacuum_freeze_max_age=1717118491, autovacuum_vacuum_cost_limit=3665, autovacuum_freeze_table_age=613931520, autovacuum_vacuum_threshold=1560368877) ON COMMIT DELETE ROWS ;
[11/08 20:33:54] CREATE TABLE IF NOT EXISTS t1(LIKE t0);
[11/08 20:33:54] CREATE TEMP TABLE IF NOT EXISTS t2(LIKE t1 INCLUDING STATISTICS);
[11/08 20:33:54] CREATE TEMP TABLE IF NOT EXISTS t3(c0 DECIMAL  DEFAULT (0.8780950843925554583080383963533677160739898681640625) PRIMARY KEY UNIQUE CHECK ((((((((('(-843625337,929212723)'::int4range)*('[-960798761,514523380]'::int4range)))*((('[119435417,304114777]'::int4range)-('[898541475,1068486698)'::int4range)))))*(((0.23359844) IS NULL)::int4range)))>&((((((('(-1087806975,1022799188]'::int4range)-('(304114777,308924159]'::int4range)))*((('[727480365,1181177316]'::int4range)*('[1816613633,1820648440)'::int4range)))))*((((('[401018532,898541475)'::int4range)-('(1142462773,2095738650]'::int4range)))-((('(-1848431197,-1336004167)'::int4range)-('[-1340660323,-892942218]'::int4range))))))))) NO INHERIT NULL);
[11/08 20:33:54] CREATE TEMPORARY TABLE IF NOT EXISTS t3(c0 smallint  GENERATED BY DEFAULT AS IDENTITY, c1 bigint  UNIQUE DEFAULT (+ ((((((B'1111100111010100110111100011010')#(B'1000101100110101100010100111001')))|(((B'10101110001000001100010010101')>>(B'1111111111111111111111111111111110010011100000000011111001011110')))))::INT)) NOT NULL);
[11/08 20:33:54] CREATE TEMPORARY TABLE IF NOT EXISTS t3(LIKE t1 EXCLUDING STORAGE INCLUDING COMMENTS);
[11/08 20:33:54] DROP INDEX IF EXISTS i2;
[11/08 20:33:54] CREATE INDEX i0 ON ONLY t3 USING BTREE(c0 DESC, (t3.c0) date_ops) INCLUDE(c0);
[11/08 20:33:54] CREATE INDEX i0 ON t1 USING BTREE((((((((((B'1001101001100010111110011010100')<<(B'1001110101101000001101010101001')))<<(((B'1111100111010100110111100011010')#(B'1000110011001110101010111100100')))))&(((((B'1000011111011100101100111010110')|(B'1111111111111111111111111111111110111100000001111001011110111010')))|(((B'11111110011010111101010001100')<<(B'1111111111111111111111111111111110101001001000011011100011010101')))))))&(((((((B'1111111111111111111111111111111110010011101010101110101100010001')||(B'1010101010010110101000100011110')))||(((B'1111111111111111111111111111111111001111000000000000010000111001')<<(B'11111110011010111101010001100')))))&(((((B'11011001111101111101111001101')&(B'1111111111111111111111111111111110111111001010010110001000000001')))|(((B'10000010010100010110010101010')||(B'1111111111111111111111111111111110001001101101111110111001000110'))))))))), (('228.65.159.67')::BOOLEAN), c0 DESC, c0);
[11/08 20:33:54] CREATE UNIQUE INDEX i0 ON t2 USING GIST(((((CAST(t2.c0 AS INT))::INT)%(((((('0.8857805214015504')||(-1800778121)))::INT)/(((CAST(0.10659391 AS INT))/((1320426153)::INT)))))))) INCLUDE(c0);
[11/08 20:33:54] CREATE INDEX i0 ON t0 USING GIN(((0.59749881093076229188199022246408276259899139404296875)::FLOAT), c0, ((0.44690967)::MONEY) int8_ops) INCLUDE(c0) WHERE t0.c0;
[11/08 20:33:54] CREATE INDEX i0 ON t1 USING HASH(c0);
[11/08 20:33:54] DELETE FROM t1 WHERE ('0.10659390765569465' SIMILAR TO (((((457112525)/(-843625337)))::VARCHAR)||((('' COLLATE "en_US.utf8") COLLATE "en_US.utf8"))));
[11/08 20:33:54] INSERT INTO t0(c0) VALUES(TRUE);
[11/08 20:33:54] RESET ROLE;
[11/08 20:33:54] INSERT INTO t2(c0) OVERRIDING USER VALUE VALUES(FALSE);
[11/08 20:33:54] DELETE FROM t0 WHERE t0.c0 RETURNING (pg_current_logfile())::INT;
[11/08 20:33:54] ALTER TABLE  t2 ALTER c0  RESET(n_distinct);
[11/08 20:33:54] CLUSTER ;
[11/08 20:33:54] INSERT INTO t2(c0) VALUES(TRUE);
[11/08 20:33:54] CREATE INDEX i1 ON ONLY t1 USING BTREE(c0 multirange_ops NULLS LAST);
[11/08 20:33:54] CREATE INDEX i0 ON ONLY t3(c0 xid_ops DESC, (0.3564875616734404228935773062403313815593719482421875) timestamptz_minmax_multi_ops ASC) INCLUDE(c0);
[11/08 20:33:54] CREATE INDEX i0 ON ONLY t2 USING HASH(c0) WHERE t2.c0;
[11/08 20:33:54] CLUSTER ;
[11/08 20:33:54] SET LOCAL parallel_leader_participation=0;
[11/08 20:33:54] RESET ROLE;
[11/08 20:33:54] ALTER TABLE  t1 ALTER c0  SET(n_distinct_inherited=1.0E-4), REPLICA IDENTITY USING INDEX i0, VALIDATE CONSTRAINT asdf, ALTER c0 SET DEFAULT (0.931056287098485757525168082793243229389190673828125) NOT IN (0.7031720338109506140966686871252022683620452880859375), NOT OF, SET WITHOUT OIDS, ALTER c0  RESET(n_distinct, n_distinct_inherited), ADD CONSTRAINT X CHECK(t1.c0) NOT VALID, SET WITHOUT CLUSTER, ALTER c0 SET STORAGE PLAIN, SET LOGGED, CLUSTER ON i0, ALTER c0 SET STATISTICS 1367, NO FORCE ROW LEVEL SECURITY, FORCE ROW LEVEL SECURITY;
[11/08 20:33:54] ALTER TABLE  ONLY t2 ALTER c0  SET(n_distinct_inherited=1.0E-9, n_distinct=0), ENABLE ROW LEVEL SECURITY, ALTER c0  RESET(n_distinct_inherited), FORCE ROW LEVEL SECURITY, NO FORCE ROW LEVEL SECURITY, ALTER c0  TYPE REAL, CLUSTER ON i0, ALTER c0 SET DEFAULT (((((((('(1557180047,1790955572)'::int4range)-('[30678153,1711847538)'::int4range)))*((('(1050136661,2035584888)'::int4range)-('(-1908858395,-1598312214)'::int4range)))))-('(1141131250,1629858063]'::int4range)))<<((((((('[-1528893924,1770781525)'::int4range)*('[-677098827,349310762]'::int4range)))-((('[-892942218,353222236]'::int4range)-('(456682502,1139694038]'::int4range)))))-((((('[-1457407787,585085020)'::int4range)*('[-843625337,929212723)'::int4range)))-((('(-1834401304,-1411499367)'::int4range)-('[-1702126839,1181177316)'::int4range)))))))), SET WITHOUT CLUSTER, SET LOGGED;
[11/08 20:33:54] CREATE MATERIALIZED VIEW v0(c0) AS (SELECT ALL ((((t1.c0)OR((('\L')||(CAST(-998932710 AS VARCHAR(487))))~*((upper('Y'))||(((B'1000100110110011111100101001101')&(B'1111111111111111111111111111111111010111101001000100101010110101')))))))OR(t0.c0)) FROM t1*, ONLY t0 LIMIT 4131338606954926128 OFFSET 6637903423269659393);
[11/08 20:33:54] DISCARD TEMPORARY;
[11/08 20:33:54] INSERT INTO t1(c0) VALUES(FALSE), (FALSE), (((0.6663937)::MONEY)::BOOLEAN), (FALSE);
[11/08 20:33:54] INSERT INTO t1(c0) VALUES(((right(chr(580724410), ((457112525)/(-1978619698))))||('15.153.204.82'))~*chr(('[-1917788285,69744313]'::int4range)::INT)), (FALSE), ((((chr(-1818073528))||(0.04659479854313952618127814275794662535190582275390625)) SIMILAR TO (to_char('26.225.94.181', 'V39CtC᪩') COLLATE "en_US.utf8")));
[11/08 20:33:54] INSERT INTO t1(c0) VALUES(FALSE);
[11/08 20:33:54] SET LOCAL enable_bitmapscan=DEFAULT;
[11/08 20:33:54] SET SESSION track_io_timing=DEFAULT;
[11/08 20:33:54] DROP INDEX IF EXISTS i0 CASCADE;
[11/08 20:33:54] ALTER TABLE  ONLY t1 ALTER c0  SET(n_distinct_inherited=0), ENABLE ROW LEVEL SECURITY, SET WITHOUT OIDS, SET WITHOUT CLUSTER, NOT OF, REPLICA IDENTITY DEFAULT, FORCE ROW LEVEL SECURITY, ALTER c0 DROP NOT NULL, ALTER c0 SET STATISTICS 6435, ALTER c0  RESET(n_distinct), ALTER c0 SET DEFAULT (CAST('168.152.26.222' AS VARCHAR(155)) SIMILAR TO (pg_current_logfile() COLLATE "C")), VALIDATE CONSTRAINT asdf, ALTER c0  SET DATA TYPE bigint, NO FORCE ROW LEVEL SECURITY, DISABLE ROW LEVEL SECURITY, ADD CONSTRAINT 讜 UNIQUE(c0);
[11/08 20:33:54] COMMIT;
[11/08 20:33:54] SET SESSION statement_timeout = 5000;
;
