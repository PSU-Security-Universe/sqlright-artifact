[11/10 19:16:50] \c test;
[11/10 19:16:50] DROP DATABASE IF EXISTS database2512;
[11/10 19:16:50] CREATE DATABASE database2512  TEMPLATE template0;
[11/10 19:16:50] \c database2512;
[11/10 19:16:50] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 money  DEFAULT (CAST(0.27729 AS MONEY)) PRIMARY KEY UNIQUE, c1 boolean , UNIQUE(c0) WITH (autovacuum_freeze_max_age=1476700710, autovacuum_vacuum_cost_limit=4414, parallel_workers=635, autovacuum_vacuum_scale_factor=0.5, autovacuum_vacuum_cost_delay=29, autovacuum_enabled=0, autovacuum_analyze_threshold=325215496, autovacuum_freeze_table_age=1448585160, autovacuum_vacuum_threshold=1962160468, autovacuum_analyze_scale_factor=0.1, fillfactor=47), CHECK(((CAST(0.27729 AS MONEY))>=(t0.c0))), EXCLUDE (c1 DESC WITH ~, (0.31962928028935467) date_minmax_multi_ops WITH >) WITH (fillfactor=43, autovacuum_enabled=1, parallel_workers=897, autovacuum_analyze_threshold=58026712, autovacuum_vacuum_scale_factor=0.9, autovacuum_vacuum_cost_delay=16, autovacuum_freeze_max_age=1229909568, autovacuum_analyze_scale_factor=0.2, autovacuum_freeze_table_age=1733596621) WHERE (t0.c1)) WITH (autovacuum_vacuum_cost_delay=93, autovacuum_analyze_scale_factor=0.01, autovacuum_enabled=1, autovacuum_analyze_threshold=1252548010, autovacuum_freeze_table_age=22004933, fillfactor=23, autovacuum_freeze_max_age=520643488, autovacuum_freeze_min_age=710403098, autovacuum_vacuum_scale_factor=1, parallel_workers=541) ON COMMIT PRESERVE ROWS ;
[11/10 19:16:50] CREATE UNLOGGED TABLE t0(c0 CHAR(331)  DEFAULT (((lower('5') COLLATE "en_US.utf8") COLLATE "en_US.utf8")), c1 bigserial  UNIQUE PRIMARY KEY, UNIQUE(c0, c1)) PARTITION BY LIST(((('(-903441236,-445136295]'::int4range)-((((((('[-1166439531,768039913]'::int4range)*('(1197256241,1546557153]'::int4range)))*((('[291420061,1546557153)'::int4range)*('[291420061,830825330]'::int4range)))))*((((('(642406416,1546557153]'::int4range)*(NULL)))*((('[830825330,1475362976)'::int4range)*('[220183501,946360228]'::int4range)))))))))varchar_ops);
[11/10 19:16:50] CREATE UNLOGGED TABLE t0(c0 int4range  DEFAULT ((((((((('[35705382,369699433]'::int4range)*('(-1466888035,-446297188]'::int4range)))*((('(-1067007195,1546557153]'::int4range)*('(-1501590921,537297397)'::int4range)))))*((((('(-737657791,-20856609)'::int4range)*('(363139032,1367690130]'::int4range)))*((('[-1,121302866)'::int4range)-('[-358296662,1759978437]'::int4range)))))))-(((((range_merge('[150234140,1314664115)'::int4range, '[-1519057509,1759978437)'::int4range))-((('(-109987484,1367690130)'::int4range)*('(363139032,1044066399]'::int4range)))))*((((('[-2060102746,1515338992]'::int4range)-('(-2146074294,768039913)'::int4range)))-((('(150712085,1367690130)'::int4range)*('(-696549135,1157319681]'::int4range))))))))), c1 int4range , c2 smallint , EXCLUDE (c0 NULLS FIRST WITH >=), CHECK(('107.166.216.21') NOT IN ('83.156.185.74')), PRIMARY KEY(c1, c0), UNIQUE(c2, c1, c0)) PARTITION BY LIST((set_masklen('39.221.186.157', t0.c2)));
[11/10 19:16:50] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 inet  UNIQUE, c1 REAL  NOT NULL DEFAULT (0.31962928)) PARTITION BY HASH((((((((((B'1111111111111111111111111111111111101011011011000111111110100100')||(B'1110101010001001110010101101101')))|(((B'10001000001101001000100110')||(B'1111111111111111111111111111111110101000101001001010010101110110')))))||(((((B'1111111111111111111111111111111110011110001000011101111011100100')<<(B'1100111110100111101010001100000')))>>(((B'11110110100111110001111001011')#(B'111001110101110111101010010')))))))<<(((((((B'1111111111111111111111111111111111010100000010000011110001000001')&(B'1110101000010100100000001101101')))||(((B'1111111111111111111111111111111111001110000010011011001111100001')|(B'1001110010111000010111010110011')))))<<(((((B'100111110011110010001000010011')&(B'1111100100000000010111011100101')))>>(((B'10001000001101001000100110')<<(B'1111111111111111111111111111111111010111111010101010100011011000')))))))))tid_minmax_ops, (+ (abs(CAST(-445136295 AS INT))))macaddr8_ops, (0.31190836892765860799414667781093157827854156494140625)enum_ops, (0.6100781401543169391032961357268504798412322998046875)) WITH (autovacuum_vacuum_cost_delay=38, autovacuum_freeze_min_age=464271338, autovacuum_freeze_table_age=906245406, autovacuum_vacuum_scale_factor=0.9);
[11/10 19:16:50] CREATE TEMP TABLE IF NOT EXISTS t0(c0 DECIMAL  DEFAULT (0.244062357990880496316776770981959998607635498046875)) PARTITION BY HASH((+ (((- (CAST(0.10088891924341836 AS INT)))+((((1083333372)+(-1114511478)))::INT))))bytea_ops, (((((((((B'1001011011111110110001101000110')|(B'1111111111111111111111111111111111100000010000100001111111111100')))>>(((B'1111111111111111111111111111111111011000100001110110110100111010')&(B'110001100001010110001101110010')))))<<(((((B'1111111111111111111111111111111110000101000011010100101011010100')#(B'10001000001101001000100110')))<<(((B'1111111111111111111111111111111111001011101111010011000000011000')<<(B'101000101100001000010100011111')))))))&(((((((B'1111111111111111111111111111111110101100111010111011110000001010')|(B'10001010100001111100001001010')))>>(((B'1111010001010100101110101110001')>>(B'1111111111111111111111111111111110110110011101110101110110111001')))))|(((((B'111011111010010010001001000000')||(B'1111111111111111111111111111111111111110110101101001001100100011')))&(((B'1111111111111111111111111111111110001011111001001111110100110001')#(B'1100111011110100110111000100110')))))))))) WITH (autovacuum_vacuum_threshold=153855957, autovacuum_freeze_min_age=619184579, autovacuum_vacuum_cost_limit=4820, autovacuum_vacuum_scale_factor=0.2, autovacuum_vacuum_cost_delay=36) ON COMMIT DROP ;
[11/10 19:16:50] CREATE TEMP TABLE t0(c0 int4range , c1 REAL  UNIQUE NULL) PARTITION BY RANGE((pg_trigger_depth())timestamp_minmax_ops) WITH (autovacuum_vacuum_cost_delay=76, parallel_workers=141, autovacuum_vacuum_threshold=1041750700, autovacuum_analyze_scale_factor=0.2, autovacuum_analyze_threshold=48983824, autovacuum_freeze_min_age=568361554, autovacuum_vacuum_scale_factor=0, fillfactor=18, autovacuum_enabled=0, autovacuum_vacuum_cost_limit=976, autovacuum_freeze_table_age=1862115908) ON COMMIT DELETE ROWS ;
[11/10 19:16:50] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 REAL , c1 REAL , c2 FLOAT , UNIQUE(c0), PRIMARY KEY(c2), CHECK((((((((('[-1984109927,562189310)'::int4range)-('(-1429832503,-508625854]'::int4range)))*((('(1,863451484]'::int4range)*('(-522819655,2015356372]'::int4range)))))-(range_merge((('(-253644625,290519114]'::int4range)*('(-2062726444,-1931170950)'::int4range)), '(1212991454,1929505632]'::int4range))))>&((((('(-1020916191,-494480651]'::int4range)-((('[-354586975,1546557153)'::int4range)*('(-1350289592,290519114]'::int4range)))))*((((('[-662213318,349015379)'::int4range)*('[-1587291327,2028065435)'::int4range)))-((('[341639662,956672405]'::int4range)*('(682657055,2021992532)'::int4range)))))))))) PARTITION BY LIST(('26.138.185.96')) WITH (autovacuum_freeze_table_age=1458590899, autovacuum_vacuum_cost_delay=48) ON COMMIT DELETE ROWS ;
[11/10 19:16:50] CREATE UNLOGGED TABLE t0(c0 boolean , c1 int4range  UNIQUE NULL, c2 FLOAT , UNIQUE(c0, c1, c2), EXCLUDE ((pg_backend_pid()) float4_bloom_ops NULLS FIRST WITH >=, c0 NULLS LAST WITH #, c2 NULLS LAST WITH /), PRIMARY KEY(c2, c1), CHECK(((7.68039913E8)IS NOT DISTINCT FROM(masklen('20.205.127.21')))));
[11/10 19:16:50] CREATE TABLE IF NOT EXISTS t0(c0 money ) PARTITION BY RANGE((((abs(CAST(1377756024 AS INT)))^(CAST(('' COLLATE "C")~*replace('.J?', '5') AS INT))))uuid_minmax_ops, (-494480651));
[11/10 19:16:50] CREATE TEMP TABLE t0(c0 boolean  CHECK ((NOT (t0.c0)) BETWEEN (t0.c0) AND (t0.c0)) UNIQUE DEFAULT ((strpos(('1929505632' COLLATE "C"), lower('R-')))::BOOLEAN) PRIMARY KEY, c1 money , c2 BIT VARYING(422)  NOT NULL UNIQUE, EXCLUDE (c1 WITH <->) WHERE (t0.c0), CHECK((t0.c2) BETWEEN SYMMETRIC (t0.c2) AND (t0.c2))) PARTITION BY LIST((0.4487404707350081));
[11/10 19:16:50] CREATE UNLOGGED TABLE t0(c0 REAL  PRIMARY KEY, c1 boolean ) PARTITION BY HASH(((0.0073295245)::MONEY), ((0.881018)::MONEY)timetz_bloom_ops) WITH (autovacuum_analyze_threshold=149658144, autovacuum_freeze_max_age=1176044328, autovacuum_analyze_scale_factor=1.0E-5);
[11/10 19:16:50] CREATE TEMP TABLE t0(c0 boolean ) WITH (fillfactor=73, autovacuum_vacuum_cost_delay=88, autovacuum_vacuum_cost_limit=9051, autovacuum_freeze_table_age=1457877449, autovacuum_analyze_threshold=1644756509, autovacuum_freeze_max_age=76962825, autovacuum_vacuum_threshold=548857010, parallel_workers=58, autovacuum_freeze_min_age=610012219);
[11/10 19:16:50] CREATE TABLE t1(LIKE t0);
[11/10 19:16:50] CREATE TABLE t2(c0 bigint  NOT NULL, c1 REAL , c2 int4range ) INHERITS(t0, t1) PARTITION BY LIST((t2.c0)timestamptz_minmax_multi_ops);
[11/10 19:16:50] CREATE UNLOGGED TABLE t2(c0 DECIMAL , c1 money ) PARTITION BY LIST(((t2.c0)::VARCHAR(49)));
[11/10 19:16:50] CREATE TEMPORARY TABLE t3(LIKE t0);
[11/10 19:16:50] CREATE UNLOGGED TABLE IF NOT EXISTS t4(LIKE t1 EXCLUDING STORAGE);
[11/10 19:16:50] CLUSTER ;
[11/10 19:16:50] UPDATE t2 SET c1 = ((0.03564606)::MONEY) WHERE CAST(pg_backend_pid() AS BOOLEAN);
[11/10 19:16:50] SET SESSION geqo_effort=5;
[11/10 19:16:50] CLUSTER ;
[11/10 19:16:50] UPDATE t3 SET c0 = (current_database()~(((('5' COLLATE "en_US.utf8") COLLATE "C"))||('254.176.74.183'))) WHERE ((CAST(((('0.007329524716867097')||('8.60.119.68')) COLLATE "C") AS VARCHAR(540)))LIKE('V'));
[11/10 19:16:50] UPDATE t4 SET c0 = FALSE WHERE (split_part(CAST('182.164.25.52' AS VARCHAR(359)), lower('(-20856609,237740560]'::int4range)) SIMILAR TO replace('/__,	e', ('' COLLATE "en_US.utf8")));
[11/10 19:16:50] UPDATE t1 SET c0 = FALSE WHERE t1.c0;
[11/10 19:16:50] CREATE SEQUENCE IF NOT EXISTS seq AS bigint INCREMENT BY 974118654 NO MAXVALUE CYCLE OWNED BY NONE;
[11/10 19:16:50] CREATE UNIQUE INDEX i0 ON ONLY t0 USING GIST(c0) WHERE ((0.22513454688307488193999006398371420800685882568359375)::VARCHAR(853) SIMILAR TO (CAST(t0.c0 AS VARCHAR(271)) COLLATE "en_US.utf8"));
[11/10 19:16:50] CREATE UNIQUE INDEX i0 ON ONLY t2 USING HASH(c0);
[11/10 19:16:50] CREATE UNIQUE INDEX i0 ON ONLY t2 USING BTREE(c0, (CAST(5.1720288E8 AS MONEY)) ASC);
[11/10 19:16:50] CREATE UNIQUE INDEX i0 ON ONLY t1(c0 DESC, (CAST(CAST(-3.35192288E8 AS MONEY) AS VARCHAR)) ASC, ((((((((('(-1466698377,1121611900)'::int4range)*('[1314664115,2036710873)'::int4range)))-((('(-2026570870,1049007496)'::int4range)-('(-1196345963,-561231944)'::int4range)))))-((((('(-1250551408,-389152886)'::int4range)-('(-20856609,150712085)'::int4range)))*((('(-1080411528,1734449962]'::int4range)*('(-1410986380,1321039138]'::int4range)))))))*((((((('(-2027449478,-1947927247)'::int4range)-('[-1166439531,1871238110]'::int4range)))*((('[-1465604746,-888247040]'::int4range)*('(-2004677309,852472759]'::int4range)))))*((((('(-1027001354,363139032]'::int4range)*('[-1808308556,-1340417678]'::int4range)))*((('(-1935591459,-935191365)'::int4range)*('(242627891,413701458)'::int4range))))))))) ASC NULLS FIRST);
[11/10 19:16:50] CREATE UNIQUE INDEX i0 ON t4 USING BTREE((0.52888444168092174635376068181358277797698974609375), c0) WHERE (t4.c0) IS TRUE;
[11/10 19:16:50] RESET ALL;
[11/10 19:16:50] NOTIFY test;
[11/10 19:16:50] CREATE MATERIALIZED VIEW v0(c0) AS (SELECT DISTINCT ON ((((((((('[1383043744,1497914605)'::int4range)-('[150712085,946974742]'::int4range)))-((('(851386002,1779507775]'::int4range)-('(-905372854,414711390)'::int4range)))))*((((('(-776466287,-696549135)'::int4range)-('[-668264018,1849936897]'::int4range)))*((('(-1931170950,-358296662)'::int4range)*('[-132752358,667886099]'::int4range)))))))-((((('[-1099635192,1963606125]'::int4range)*((('(439153144,1760639826]'::int4range)*('[-914689978,428909564]'::int4range)))))-((((('(-838224927,1285053044)'::int4range)-('[1475362976,2121379364]'::int4range)))*((('(35705382,1711012213)'::int4range)*('(1180743069,1693176241)'::int4range))))))))) t4.c0 FROM ONLY t2, ONLY t0, t4*, t1* WHERE t4.c0 LIMIT 6861973279472036513 OFFSET 8492366975274091339);
[11/10 19:16:50] SET CONSTRAINTS ALL IMMEDIATE;
[11/10 19:16:50] UNLISTEN *;
[11/10 19:16:50] ALTER TABLE  t3 ALTER c0  SET DATA TYPE FLOAT;
[11/10 19:16:50] SET LOCAL gin_fuzzy_search_limit=1269243855;
[11/10 19:16:50] RESET ROLE;
[11/10 19:16:50] RESET ALL;
[11/10 19:16:50] RESET ROLE;
[11/10 19:16:50] DROP INDEX IF EXISTS i0, i0, i2;
[11/10 19:16:50] DELETE FROM ONLY t4;
[11/10 19:16:50] VACUUM FULL ANALYZE t1;
[11/10 19:16:50] DROP INDEX IF EXISTS i1, i1, i0 RESTRICT;
[11/10 19:16:50] CREATE STATISTICS  IF NOT EXISTS s0 ON c1, c0 FROM t2;
[11/10 19:16:50] ALTER TABLE  ONLY t1 FORCE ROW LEVEL SECURITY, DISABLE ROW LEVEL SECURITY;
[11/10 19:16:50] COMMIT;
[11/10 19:16:50] SET SESSION statement_timeout = 5000;
;
