[11/07 18:37:45] \c test;
[11/07 18:37:45] DROP DATABASE IF EXISTS database90;
[11/07 18:37:45] CREATE DATABASE database90 ;
[11/07 18:37:45] \c database90;
[11/07 18:37:45] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 bigint  GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY UNIQUE, EXCLUDE (c0 WITH |/, c0 WITH <<) WHERE ((((((NULL)||((0.5862155)::MONEY)) COLLATE "en_US.utf8"))LIKE(('76.118.76.118')::VARCHAR(720)))), CHECK(((('亚{!fr''A' COLLATE "C"))LIKE((((('h驭nꑌrm' COLLATE "en_US.utf8") COLLATE "en_US.utf8"))||((((('[-1742457362,-216904038)'::int4range)*('(-1468849200,-387463571)'::int4range)))*((('(-720830189,338630147)'::int4range)*('(554280910,1601739978]'::int4range))))))))), UNIQUE(c0) WITH (autovacuum_freeze_min_age=907374802, autovacuum_enabled=1, autovacuum_vacuum_threshold=710491330, autovacuum_vacuum_scale_factor=0.2, autovacuum_freeze_max_age=348477798, parallel_workers=906, autovacuum_freeze_table_age=1670362305, autovacuum_analyze_threshold=177053639, autovacuum_vacuum_cost_limit=2518, autovacuum_vacuum_cost_delay=21, fillfactor=28)) WITH (parallel_workers=583, autovacuum_vacuum_cost_limit=2109);
[11/07 18:37:45] CREATE TEMP TABLE IF NOT EXISTS t0(c0 FLOAT  DEFAULT (-1.4688492E9) UNIQUE NOT NULL, c1 boolean );
[11/07 18:37:45] CREATE TEMPORARY TABLE IF NOT EXISTS t1(LIKE t0);
[11/07 18:37:45] CREATE UNLOGGED TABLE IF NOT EXISTS t2(c0 smallint , c1 BIT VARYING(191)  DEFAULT (((((((((B'1111111111111111111111111111111110110101011101110001010100011001')||(B'1111111111111111111111111111111111010000001111010001111101111011')))||(((B'1110010101010111101111101011010')>>(B'1111111111111111111111111111111111100111010100010110101110110100')))))|(((((B'1111111111111111111111111111111111100001101010001011011100000101')&(B'1101111111101000000011011011010')))||(((B'1111111111111111111111111111111111100000100000011100000001111010')>>(B'1111111111111111111111111111111110110100111000100111011011101011')))))))<<(((((((B'1101010110001011000000001000101')>>(B'1111111111111111111111111111111110011101000000001001101001101101')))|(((B'1100111100000001100001000011')<<(B'0')))))#(((((B'1000100110110101010110101000010')&(B'1111111111111111111111111111111110111110000010101001011001000111')))#(((B'11101011001111101001111100011')<<(B'100010111111011111000001'))))))))) CHECK (((-1207748241)=(CAST(((t2.c1)||(((t2.c1)||(t2.c1)))) AS INT)))) PRIMARY KEY NULL, EXCLUDE ((0.88877372851845215517840870234067551791667938232421875) NULLS LAST WITH +, ((((('-801300613')||(FALSE)) COLLATE "en_US.utf8")!~translate('R~C깖)aj', '', '-528367494'))::VARCHAR) NULLS FIRST WITH *), FOREIGN KEY (c1, c0) REFERENCES t1(c0, c1) ON DELETE RESTRICT ON UPDATE SET NULL) PARTITION BY RANGE((CAST(0.5862155 AS MONEY)), (FALSE)) WITH (autovacuum_freeze_max_age=109592749, autovacuum_vacuum_scale_factor=0.1, autovacuum_freeze_min_age=420788214, autovacuum_analyze_threshold=1411821512, autovacuum_freeze_table_age=294261876, autovacuum_analyze_scale_factor=1, autovacuum_enabled=0, parallel_workers=159, autovacuum_vacuum_cost_delay=69, autovacuum_vacuum_cost_limit=9677, autovacuum_vacuum_threshold=250442368, fillfactor=51);
[11/07 18:37:45] CREATE TABLE IF NOT EXISTS t2(LIKE t1);
[11/07 18:37:45] CREATE TABLE t3(LIKE t0);
[11/07 18:37:45] CREATE UNIQUE INDEX i0 ON ONLY t0(c0 jsonb_ops, c0 DESC);
[11/07 18:37:45] CREATE INDEX i0 ON ONLY t3 USING BTREE(c1);
[11/07 18:37:45] RESET ROLE;
[11/07 18:37:45] DISCARD SEQUENCES;
[11/07 18:37:45] VACUUM (INDEX_CLEANUP, FULL 0) t2(c1);
[11/07 18:37:45] VACUUM (TRUNCATE);
[11/07 18:37:45] RESET ROLE;
[11/07 18:37:45] UPDATE t1 SET c1 = (t1.c1), c0 = 0.6356885 WHERE t1.c1;
[11/07 18:37:45] SET LOCAL seq_page_cost=DEFAULT;
[11/07 18:37:45] INSERT INTO t1(c1) VALUES(DEFAULT);
[11/07 18:37:45] INSERT INTO t2(c1, c0) VALUES(TRUE, 0.5599164), (TRUE, 0.6356885), (TRUE, + ((-1.660904851E9)::INT));
[11/07 18:37:45] ANALYZE( SKIP_LOCKED) t2;
[11/07 18:37:45] DISCARD PLANS;
[11/07 18:37:45] RESET ROLE;
[11/07 18:37:45] DELETE FROM ONLY t1 WHERE (upper('-1749222116') SIMILAR TO ((((0.93409523625392310020032482498208992183208465576171875)::VARCHAR COLLATE "en_US.utf8"))||(pg_is_other_temp_schema())));
[11/07 18:37:45] DELETE FROM ONLY t1 WHERE t1.c1;
[11/07 18:37:45] ALTER TABLE  t2 ALTER c0 SET STATISTICS 1648, SET LOGGED, VALIDATE CONSTRAINT asdf;
[11/07 18:37:45] ALTER TABLE  ONLY t1 NO FORCE ROW LEVEL SECURITY, ALTER c1  SET DATA TYPE money, ENABLE ROW LEVEL SECURITY, SET WITHOUT OIDS, ALTER c0 DROP NOT NULL, REPLICA IDENTITY DEFAULT, DROP  IF EXISTS c1 RESTRICT, NOT OF;
[11/07 18:37:45] ALTER TABLE  ONLY t1 ALTER c0 SET STORAGE MAIN, ADD CONSTRAINT R CHECK(CAST((((('[51634081,1267691599)'::int4range)-('[803313251,1268968220)'::int4range)))*((('[-1404248478,114980703]'::int4range)*('[-1059586796,7988836]'::int4range)))) AS VARCHAR(215))!~*upper(lower('e'))) NOT VALID, SET WITHOUT CLUSTER, REPLICA IDENTITY DEFAULT, NOT OF, NO FORCE ROW LEVEL SECURITY, SET LOGGED, FORCE ROW LEVEL SECURITY, SET WITHOUT OIDS, ALTER c1 SET DEFAULT NOT ((((((('(-509036795,2027557515]'::int4range)*('(-1858974908,1110900183]'::int4range)))*('(1549748384,1878263514]'::int4range)))>>((((('(-2057454037,-882526043)'::int4range)-('[-1797087914,-1649731648]'::int4range)))*(range_merge('[905610096,1549748384)'::int4range, '(-1649731648,803313251)'::int4range)))))), DROP c1, ALTER c1  RESET(n_distinct), VALIDATE CONSTRAINT asdf, ALTER c0  SET DATA TYPE inet, DISABLE ROW LEVEL SECURITY;
[11/07 18:37:45] ALTER TABLE  ONLY t3 ENABLE ROW LEVEL SECURITY, OWNER TO CURRENT_USER, ALTER c0 DROP DEFAULT, SET WITHOUT CLUSTER, DISABLE ROW LEVEL SECURITY, REPLICA IDENTITY USING INDEX i0, ALTER c0 SET STATISTICS 4941, FORCE ROW LEVEL SECURITY, ADD CONSTRAINT x UNIQUE USING INDEX i0, DROP c1 RESTRICT, SET WITHOUT OIDS, ALTER c0 SET STORAGE MAIN, VALIDATE CONSTRAINT asdf;
[11/07 18:37:45] ALTER TABLE  t3 ALTER c0 DROP DEFAULT, NO FORCE ROW LEVEL SECURITY, ENABLE ROW LEVEL SECURITY, ADD CONSTRAINT a EXCLUDE (c0 inet_minmax_multi_ops DESC NULLS LAST WITH <=, (((((((CAST('[-137895624,1537797882)'::int4range AS INT))^(length('-1968058427'))))-(+ (- (295443862)))))^(((length('167743350'))/(((((-1903125403)%(1547181336)))^(abs(-22839012)))))))) int8_ops ASC WITH <->) WHERE (t3.c1);
[11/07 18:37:45] SET SESSION geqo=0;
[11/07 18:37:45] UPDATE t3 SET c1 = TRUE WHERE t3.c1;
[11/07 18:37:45] RESET ALL;
[11/07 18:37:45] REINDEX DATABASE database90;
[11/07 18:37:45] DELETE FROM t1 WHERE t1.c1;
[11/07 18:37:45] REINDEX DATABASE database90;
[11/07 18:37:45] DELETE FROM ONLY t1 WHERE t1.c1;
[11/07 18:37:45] SET track_io_timing=0;
[11/07 18:37:45] LISTEN asdf;
[11/07 18:37:45] CREATE STATISTICS  s0 (ndistinct, mcv, dependencies) ON c0, c1 FROM t1;
[11/07 18:37:45] DISCARD TEMPORARY;
[11/07 18:37:45] RESET ROLE;
[11/07 18:37:45] CREATE INDEX i1 ON ONLY t3 USING GIST(((0.98860854)::MONEY) ASC) WHERE ((((0.472808147710905846139439745456911623477935791015625)::VARCHAR)||(t3.c1)) SIMILAR TO chr(((909857871)%(-1096727792))));
[11/07 18:37:45] CREATE INDEX i1 ON t3 USING GIST((+ (+ (+ ((-1247681495)::INT)))) DESC, c0 ASC, ('193.59.242.10') oid_minmax_ops DESC) INCLUDE(c1, c0) WHERE NOT (((((t3.c1)>=(CAST(B'1001011101001010010110111011010' AS BOOLEAN))))!=(((0.4721527319098222097437655975227244198322296142578125)::VARCHAR SIMILAR TO version()))));
[11/07 18:37:45] CREATE INDEX i1 ON ONLY t3 USING HASH(c0);
[11/07 18:37:45] CREATE MATERIALIZED VIEW v0(c0) AS (SELECT ((CAST(t3.c0 AS int4range))*(range_merge((((('[-882526043,475984065]'::int4range)*('[-438731426,114980703]'::int4range)))*((('[-578041044,606389746]'::int4range)-('(1258805707,1959027218]'::int4range)))), (((('[758480159,1281582661)'::int4range)-('[-1842894539,-1749222116]'::int4range)))*('(-1010752555,2035834572]'::int4range))))) FROM t3*, ONLY t2 WHERE (((lower('#'))LIKE((('38.231.187.128')::VARCHAR COLLATE "en_US.utf8")))) BETWEEN SYMMETRIC ((((('R~C깖)AJ' COLLATE "en_US.utf8"))||(CAST(0.5599164 AS MONEY))) SIMILAR TO ((('-160390068' COLLATE "C"))||(((B'1111111111111111111111111111111111000010000101100110101100011011')|(B'110000011110010110100000001001')))))) AND (t3.c1));
[11/07 18:37:45] CREATE VIEW v0(c0, c1) AS (SELECT ((((+ (abs(1873281995)))+(((pg_trigger_depth())*((0.4974427648254929)::INT)))))-(abs((0.02150630355320004571950676108826883137226104736328125)::INT))), (((((((('(-1649739640,1543628200)'::int4range)*('(-716997134,758480159]'::int4range)))-((('[-1347233896,-72417442]'::int4range)*('(-732096698,173093872)'::int4range)))))*((((('[1772637535,1938371341)'::int4range)-('(-976178107,90777458]'::int4range)))*((('[-1916935110,2027557515]'::int4range)*('[-580243078,1350559019]'::int4range)))))))*((((((('[-1742171549,1258805707]'::int4range)-('(655841249,2036959200)'::int4range)))-((CAST(0.9525231 AS MONEY))::int4range)))*((((('[-66426562,2051726188)'::int4range)*('(485863876,1453790084]'::int4range)))-((('(-1260226837,897655330)'::int4range)*('[-801300613,1348495042]'::int4range)))))))) FROM ONLY t3 WHERE ((((((('(-1797087914,-1643997995]'::int4range)*('[1269116378,1923866458)'::int4range)))*((('(9172929,425145457]'::int4range)*('(-818064458,1611269201)'::int4range)))))>&((((('[1026776197,1193611121]'::int4range)*('[348195032,554280910]'::int4range)))-('(-509036795,475984065)'::int4range)))))::BOOLEAN LIMIT 1527406269265961203);
[11/07 18:37:45] CREATE MATERIALIZED VIEW v0(c0, c1) AS (SELECT ALL ((range_merge((((('[104839825,1315013991)'::int4range)*('(-1534251418,-137895624]'::int4range)))*((('[-899931737,487708987]'::int4range)*('(1281582661,1776458358)'::int4range)))), ((('')::int4range)*((('(-1037551415,-788280110]'::int4range)*('[-1247681495,-276812384]'::int4range))))))*((((((('(-663869095,1268968220)'::int4range)*('(-2093452372,1281582661]'::int4range)))-((CAST(0.6356885 AS MONEY))::int4range)))*((((('(1169198808,2062342315]'::int4range)-('(-255068479,930674557)'::int4range)))*((('(700236101,1280488598]'::int4range)*('[-1949916074,1988353488)'::int4range)))))))), '124.0.141.59' FROM ONLY t2, t3*);
[11/07 18:37:45] CREATE VIEW v0(c0, c1) AS (SELECT DISTINCT ON ((((((((('[974086947,1720835728]'::int4range)*('[-704416270,1470304044]'::int4range)))*((('[-1968058427,-1257654289)'::int4range)*('(-1140654261,1139053887]'::int4range)))))*((((('[1110900183,1137326997)'::int4range)*('[-1802816623,-990718331]'::int4range)))*((('(-1842894539,1806650186]'::int4range)*('(-1754016487,1281582661]'::int4range)))))))*(((range_merge((('(1110900183,1155181890]'::int4range)-('[1281582661,2071313169]'::int4range)), (('(1515517794,1608372333)'::int4range)*('[-1575701795,348195032]'::int4range))))-('(1,986872776)'::int4range))))) pg_trigger_depth(), CAST((((CAST(0.6356885 AS MONEY))::BIT)||(((((B'1100111001110000001111111100100')||(B'1100010100000110001111110101110')))<<(((B'1111111111111111111111111111111111011101110110010011110001010100')<<(B'1111111111111111111111111111111110110010001101000101110010000010')))))) AS INT) FROM t2*, t3* WHERE t3.c1 LIMIT 3599428457165546085);
[11/07 18:37:45] CREATE MATERIALIZED VIEW v0(c0, c1, c2) AS (SELECT 0.58294291418335308918585724313743412494659423828125, ((((((((B'11010110101000001101100011111')#(B'1010011000111101000101100011010')))#(((B'1111111111111111111111111111111111011111001000010101100111000010')|(B'1111111111111111111111111111111111011101100010111100101100101100')))))&(((((B'1111111111111111111111111111111110010101100100001101011110000001')&(B'1111111111111111111111111111111110000001011010100010010100111001')))<<(((B'1111111111111111111111111111111111001111101110110111001110010000')&(B'1111001010110000101111011001100')))))))|(((((((B'11100111101011011000111000100')&(B'1000000111011101000000001011100')))||(((B'1111111111111111111111111111111111111001001000011101110101010010')>>(B'100011101010001001101111001000')))))>>(((((B'1000101000110011011100001000000')||(B'1111111111111111111111111111111110001111011010001010111001010110')))&(((B'1010101101000010011001001011')<<(B'11110001110011001100110110111')))))))), CAST(0.75103205 AS MONEY) FROM ONLY t3, t2);
[11/07 18:37:45] CREATE MATERIALIZED VIEW v0(c0, c1) AS (SELECT DISTINCT ON ((CAST(0.5712143 AS MONEY))::INT) quote_ident(((('(-2057454037,803313251]'::int4range)*('[758480159,1601739978]'::int4range)))::VARCHAR(464)), (((((((('(245576151,1596731345)'::int4range)*('[-1986008970,1581811623]'::int4range)))*(CAST(0.3217799698572070266067157717770896852016448974609375 AS int4range))))-((((('[-1858974908,-1260226837]'::int4range)-('(-1106602425,1352093070)'::int4range)))*((('[1110900183,1110900183]'::int4range)*('[-337849634,930323862)'::int4range)))))))-((((((('[-1993474306,1791328325]'::int4range)*('(-962104246,919967610]'::int4range)))*((('[-1096727792,1853880143)'::int4range)-('(-1369610582,644217998]'::int4range)))))-((((('(-840871402,1601739978)'::int4range)*('(-1759947197,-683099951)'::int4range)))-((('(-685684468,-554805422)'::int4range)*('(644952422,735078466)'::int4range)))))))) FROM t3);
[11/07 18:37:45] CREATE MATERIALIZED VIEW v0(c0) AS (SELECT DISTINCT ON ((((((((('[-1794701342,-1222071536)'::int4range)-('(-1582676280,1949597189)'::int4range)))*((('[-661000922,-16602831]'::int4range)-('[-373740627,1355950801)'::int4range)))))*(((CAST(B'1011101000100110000111011110111' AS int4range))*((('[-1660904851,-720830189]'::int4range)*('[-476431,1373968009]'::int4range)))))))@>('(-9223372036854775808,1094178290)'::int4range))) CAST(CAST(t3.c1 AS VARCHAR) AS DECIMAL) FROM ONLY t2, t3 WHERE t3.c1);
[11/07 18:37:45] CREATE MATERIALIZED VIEW v0(c0, c1) AS (SELECT ALL ((((((upper('8p(*W/+'))||(('lIQz' COLLATE "en_US.utf8"))))||(0.9525231)))||((0.18112099) BETWEEN SYMMETRIC (0.9525231) AND (((+ (1931871642))/(((76281722)^(9223372036854775807))))))), upper((((('(-1232367064,1262078334]'::int4range)*('[-1097295658,1649393394]'::int4range)))*((('[338630147,1343043567)'::int4range)*('(-1718353328,182806191)'::int4range))))) FROM ONLY t2 WHERE t2.c1);
[11/07 18:37:45] CLUSTER t3 USING i1;
[11/07 18:37:45] CLUSTER t3;
[11/07 18:37:45] CLUSTER t2;
[11/07 18:37:45] CLUSTER t2;
[11/07 18:37:45] CLUSTER t3;
[11/07 18:37:45] CLUSTER t3;
[11/07 18:37:45] CLUSTER ;
[11/07 18:37:45] COMMIT;
[11/07 18:37:45] SET SESSION statement_timeout = 5000;
;
