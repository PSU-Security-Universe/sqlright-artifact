[11/10 19:48:14] \c test;
[11/10 19:48:14] DROP DATABASE IF EXISTS database2543;
[11/10 19:48:14] CREATE DATABASE database2543 WITH ENCODING 'utf8'  TEMPLATE template0;
[11/10 19:48:14] \c database2543;
[11/10 19:48:14] CREATE TEMP TABLE t0(c0 money  DEFAULT (CAST(0.99143577 AS MONEY)), c1 integer  PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY, c2 int4range ) PARTITION BY RANGE(((0.1489794)::MONEY), (get_bit(substr(('' COLLATE "en_US.utf8"), t0.c1, t0.c1), pg_trigger_depth())), (t0.c1)int8_minmax_multi_ops) WITH (parallel_workers=113, autovacuum_vacuum_threshold=853864159, autovacuum_vacuum_scale_factor=0) ON COMMIT PRESERVE ROWS ;
[11/10 19:48:14] CREATE TEMP TABLE t0(c0 CHAR(481) , CHECK(NOT ((t0.c0) BETWEEN SYMMETRIC (upper(t0.c0)) AND ((CAST((0.37074697)::MONEY AS VARCHAR) COLLATE "C")))), UNIQUE(c0) WITH (autovacuum_enabled=1, parallel_workers=188, autovacuum_analyze_scale_factor=0.5, autovacuum_freeze_table_age=577728885, autovacuum_freeze_min_age=960138204, autovacuum_vacuum_cost_limit=7578, fillfactor=50, autovacuum_freeze_max_age=1797632135), PRIMARY KEY(c0), EXCLUDE (c0 ASC WITH +, ('155.209.109.153') bytea_minmax_ops DESC NULLS LAST WITH >) WITH (autovacuum_vacuum_threshold=1190199577, autovacuum_freeze_min_age=142988220, fillfactor=32, autovacuum_enabled=0, parallel_workers=752, autovacuum_vacuum_scale_factor=0.8, autovacuum_analyze_threshold=788673402, autovacuum_freeze_table_age=1419725390, autovacuum_freeze_max_age=172003944, autovacuum_analyze_scale_factor=0.2, autovacuum_vacuum_cost_delay=14) WHERE (((t0.c0)LIKE(t0.c0)))) ON COMMIT DROP ;
[11/10 19:48:14] CREATE TEMP TABLE IF NOT EXISTS t0(c0 TEXT COLLATE "en_US.utf8" ) PARTITION BY RANGE((((t0.c0)LIKE(((t0.c0)||((((('(443943889,1394009491)'::int4range)-('(-2107523012,-456801125]'::int4range)))*((('(-2107523012,1281863953]'::int4range)*('[-687435425,-528618675]'::int4range))))))))), (CAST((((('(-126458351,1281863953)'::int4range)-((('(-687435425,160786371]'::int4range)*('(-1272470125,1394009491)'::int4range)))))*((('[29010287,68577290)'::int4range)*((('[-1733860746,-1387958163]'::int4range)*('[1059199779,1481445667]'::int4range)))))) AS INT))timestamp_minmax_ops, (((abbrev('63.4.107.49'))IS NOT DISTINCT FROM((t0.c0 COLLATE "C"))))tid_ops) WITH (autovacuum_vacuum_cost_delay=20, autovacuum_analyze_threshold=2087536868, autovacuum_freeze_max_age=717851339, parallel_workers=390, autovacuum_vacuum_scale_factor=0.8, autovacuum_analyze_scale_factor=0.2, autovacuum_freeze_min_age=20062596, autovacuum_vacuum_cost_limit=4184, autovacuum_vacuum_threshold=1980986126, autovacuum_enabled=0, autovacuum_freeze_table_age=471536676, fillfactor=65);
[11/10 19:48:14] CREATE TEMP TABLE t0(c0 boolean ) PARTITION BY RANGE(((0.3811924849119521230278451184858568012714385986328125)::VARCHAR(962))interval_bloom_ops, ((((((((('[-156677991,907974494]'::int4range)*('[949739117,1562359370)'::int4range)))*((('[-653111831,-161546236)'::int4range)-('[961370598,1241005865]'::int4range)))))-((((('(-764887798,-126458351)'::int4range)*('[-1369992053,-337065365)'::int4range)))-((('(-1751519609,1001985902]'::int4range)*('[160786371,1010091909]'::int4range)))))))*(CAST('193.75.117.20' AS int4range)))));
[11/10 19:48:14] CREATE UNLOGGED TABLE IF NOT EXISTS t0(c0 int4range  NOT NULL DEFAULT ((((('(-161546236,1720642408)'::int4range)*((((('(-1751519609,-1497907579]'::int4range)*('(187511588,187511588]'::int4range)))*(CAST(1777595627 AS int4range))))))-((((((('[1145537217,1619917657]'::int4range)*('(-380345343,1081598969)'::int4range)))-((('(24355312,1586883601]'::int4range)*('[-1530867736,-1387958163]'::int4range)))))*((((('(-1272470125,1396017579)'::int4range)*('[-1476185714,-337065365)'::int4range)))-((('[-629630444,24355312)'::int4range)-('(-988799263,-76906069]'::int4range))))))))), c1 FLOAT  PRIMARY KEY UNIQUE NULL, EXCLUDE ((length(((substr('4á¬£k/yEqA', 1, 1017257886))||((('187511588')||(t0.c0)))))) poly_ops NULLS LAST WITH ?|, (num_nulls(t0.c0)) poly_ops WITH ~~, (length(((FALSE)::VARCHAR(844) COLLATE "C"))) macaddr8_minmax_ops WITH >), CHECK((t0.c1) BETWEEN (t0.c1) AND (CAST(CAST(0.38063982 AS MONEY) AS REAL))), UNIQUE(c0, c1) WITH (autovacuum_analyze_scale_factor=1, autovacuum_freeze_max_age=1015653685, autovacuum_vacuum_cost_delay=43, parallel_workers=316, autovacuum_freeze_min_age=289657816, autovacuum_analyze_threshold=476725324, fillfactor=50, autovacuum_vacuum_threshold=450017134)) WITH (autovacuum_vacuum_scale_factor=0.2, autovacuum_freeze_table_age=1214405148, autovacuum_freeze_max_age=1568040110, autovacuum_enabled=1, fillfactor=24, autovacuum_vacuum_threshold=1527836281, autovacuum_analyze_threshold=1211810327);
[11/10 19:48:14] CREATE UNLOGGED TABLE t0(c0 integer  CHECK ((CAST(CAST(-6.8743546E8 AS MONEY) AS INT)) IS NOT NULL) NO INHERIT, CHECK(lower_inc(NULL))) PARTITION BY RANGE((0.24707259), ('88.77.106.66')int4_ops, (((((((((B'1010101011110110110111000111111')|(B'1111111111111111111111111111111111001010110010011100101001100001')))|(((B'1001100011001111011000100010001')|(B'110101101111100111110110101010')))))<<(((((B'1000100011011110001011000101110')#(B'10101111000111011010110101010')))&(((B'1111111111111111111111111111111110010111111001110001001100101001')&(B'1111111111111111111111111111111110001010000110101111100101011000')))))))||(((((((B'11001010101001001010110000101')>>(B'1111111111111111111111111111111111111000100111000010101010000011')))|(((B'1111111111111111111111111111111111010101011000111111111101010111')#(B'1111111111111111111111111111111110011000101001110110001001110110')))))#(((((B'1111111111111111111111111111111110000010001001011100110111111001')|(B'1111111111111111111111111111111111011010011110001001101000010100')))<<(((B'10101111101101000000000110010')>>(B'1000001010011110110010100111001'))))))))), (t0.c0), ('75.15.40.217')) WITH (autovacuum_vacuum_cost_limit=3069, autovacuum_freeze_max_age=1602207554, autovacuum_enabled=1, autovacuum_vacuum_scale_factor=0.1, autovacuum_freeze_min_age=670631077, autovacuum_analyze_scale_factor=0.8, parallel_workers=420, autovacuum_freeze_table_age=851594026, autovacuum_vacuum_cost_delay=28, fillfactor=33);
[11/10 19:48:14] CREATE TEMP TABLE IF NOT EXISTS t0(c0 int4range , c1 CHAR(21) COLLATE "C"  UNIQUE, CHECK(NOT ((range_merge('[-178334222,1396017579)'::int4range, t0.c0)) IN (t0.c0, ((t0.c0)-(t0.c0)), t0.c0))), EXCLUDE (c1 date_ops ASC WITH >=, c1 timetz_bloom_ops ASC WITH !~~) WHERE (((((CAST(0.8287767 AS VARCHAR(251)))||(CAST(0.7870848 AS MONEY))) COLLATE "en_US.utf8") SIMILAR TO (t0.c1 COLLATE "C")))) WITH (autovacuum_vacuum_cost_limit=1348) ON COMMIT PRESERVE ROWS ;
[11/10 19:48:14] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 money  NOT NULL UNIQUE, c1 BIT VARYING(448) , CHECK(((((((((((TRUE)OR((((t0.c1)||(t0.c1))) IS NULL)))OR(NOT (CAST('[-1166231085,1434152511]'::int4range AS BOOLEAN)))))AND(((t0.c1)>=(((t0.c1)<<(t0.c1)))))))OR(NOT ((0.015735932849116007758993873721919953823089599609375) NOT IN (0.3260657449922248485307818555156700313091278076171875, 0.7711911229833587899662461495609022676944732666015625, 0.43109427567230085287519614212214946746826171875, 0.17753634007360974411682263962575234472751617431640625)))))OR((t0.c1) BETWEEN (t0.c1) AND (((t0.c1)<<(t0.c1)))))), UNIQUE(c1, c0), PRIMARY KEY(c0)) WITH (autovacuum_enabled=0, autovacuum_freeze_max_age=354519345, autovacuum_analyze_scale_factor=0.01, autovacuum_freeze_min_age=206302120);
[11/10 19:48:14] CREATE TEMP TABLE IF NOT EXISTS t0(c0 CHAR(347) COLLATE "C" ) WITH (autovacuum_analyze_threshold=1154523831, fillfactor=48, parallel_workers=9, autovacuum_freeze_table_age=714858232, autovacuum_enabled=0, autovacuum_vacuum_cost_limit=1673) ON COMMIT DROP ;
[11/10 19:48:14] CREATE TABLE IF NOT EXISTS t0(c0 int4range  UNIQUE PRIMARY KEY, c1 bigserial , UNIQUE(c1), CHECK(CAST(0.14958175 AS BOOLEAN)));
[11/10 19:48:14] CREATE TABLE IF NOT EXISTS t0(c0 boolean  PRIMARY KEY, c1 VARCHAR(449) ) WITH (autovacuum_vacuum_cost_delay=98, autovacuum_analyze_scale_factor=0, autovacuum_vacuum_cost_limit=453, autovacuum_freeze_max_age=578182910, fillfactor=71, autovacuum_vacuum_threshold=1500067578);
[11/10 19:48:14] CREATE TEMPORARY TABLE t1(LIKE t0);
[11/10 19:48:14] CREATE TABLE t2(c0 money  PRIMARY KEY UNIQUE, c1 BIT VARYING(445) ) INHERITS(t0);
[11/10 19:48:14] CREATE UNLOGGED TABLE t2(LIKE t1);
[11/10 19:48:14] CREATE UNLOGGED TABLE IF NOT EXISTS t3(c0 int4range  PRIMARY KEY DEFAULT ((((((((('(-437563845,416297325)'::int4range)-('[1762905588,2099311065]'::int4range)))*((('[-1163421183,-205775893)'::int4range)-('(1671493663,1825039221]'::int4range)))))-((((('(-161546236,1690137922)'::int4range)*('[-892745119,396448553)'::int4range)))*(range_merge('[139357549,826177715]'::int4range, '[-2116552930,2073915520)'::int4range))))))-((((((('(-2120996158,2099311065)'::int4range)*('(-1540384252,949739117)'::int4range)))*((('[-2029866082,1434152511]'::int4range)-('(-437563845,451639943)'::int4range)))))-((((('(-619866654,-571550236)'::int4range)*('(384125168,1380158924)'::int4range)))-((('[-1545208794,384125168]'::int4range)-('(-2107523012,603224543)'::int4range))))))))) UNIQUE CHECK (((t3.c0)>&(((t3.c0)*(t3.c0))))) NO INHERIT, c1 TEXT );
[11/10 19:48:14] CREATE TEMPORARY TABLE IF NOT EXISTS t3(c0 TEXT , CHECK((t3.c0) BETWEEN SYMMETRIC (t3.c0) AND (((t3.c0)||((((('(187511588,632134314]'::int4range)-('[304751587,368476210]'::int4range)))*((('[-714866857,948305172]'::int4range)*('(-1370372707,-1350858428]'::int4range)))))))), EXCLUDE ((3.04751584E8) DESC WITH >, ((t3.c0 SIMILAR TO t3.c0)) inet_minmax_ops NULLS LAST WITH <) WHERE ((lower(t3.c0)) NOT IN (t3.c0, (t3.c0 COLLATE "C"), t3.c0))) INHERITS(t0) PARTITION BY HASH((0.5564048771612195576352632997441105544567108154296875), (0.47977502567907392982959891014616005122661590576171875), (0.33026820924172784)pg_lsn_bloom_ops, (0.36003973277816581077814817035687156021595001220703125)tid_ops) WITH (fillfactor=42, autovacuum_analyze_scale_factor=0, autovacuum_vacuum_scale_factor=0.1, autovacuum_freeze_min_age=378407249, autovacuum_freeze_max_age=744978163, autovacuum_freeze_table_age=649633744, autovacuum_analyze_threshold=963327344);
[11/10 19:48:14] CREATE TABLE t3(LIKE t0 EXCLUDING STATISTICS);
[11/10 19:48:14] CREATE TABLE t4(c0 FLOAT , c1 int4range ) PARTITION BY LIST(('244.84.96.74')timetz_minmax_multi_ops) WITH (parallel_workers=121, fillfactor=21, autovacuum_analyze_threshold=1859832463, autovacuum_freeze_min_age=796497708, autovacuum_freeze_max_age=1959831931, autovacuum_vacuum_threshold=2058881639, autovacuum_vacuum_cost_limit=4493, autovacuum_analyze_scale_factor=1, autovacuum_freeze_table_age=849500617, autovacuum_vacuum_cost_delay=56, autovacuum_vacuum_scale_factor=0.1, autovacuum_enabled=0);
[11/10 19:48:14] CREATE TEMPORARY TABLE t4(c0 boolean , c1 REAL ) INHERITS(t1, t3, t2, t0) WITH (autovacuum_freeze_min_age=797030123, autovacuum_vacuum_threshold=682442310) ON COMMIT PRESERVE ROWS ;
[11/10 19:48:14] CREATE TEMP TABLE IF NOT EXISTS t4(c0 boolean , c1 BIT VARYING(149) ) ON COMMIT PRESERVE ROWS ;
[11/10 19:48:14] INSERT INTO t4(c0) VALUES(FALSE), (CAST(('223.195.133.111') IS NULL AS VARCHAR)!~*((CAST('170.145.1.113' AS VARCHAR))||((((('[-1237062251,-892001510)'::int4range)-('[-61885836,826177715]'::int4range)))*((('(-2140015750,-380345343]'::int4range)-('[-322006462,2099311065]'::int4range)))))));
[11/10 19:48:14] INSERT INTO t4(c0) OVERRIDING USER VALUE VALUES(FALSE), (TRUE), (TRUE);
[11/10 19:48:14] VACUUM FULL t1;
[11/10 19:48:14] UPDATE t4 SET c1 = B'1111111111111111111111111111111110000010001001011100110111111001' WHERE ((CAST('194.107.172.119' AS INT))::VARCHAR(647) COLLATE "C")~(upper('ë¶a') COLLATE "en_US.utf8");
[11/10 19:48:14] UPDATE t0 SET c1 = (((to_char((t0.c1) BETWEEN (t0.c1) AND (((t0.c1)||(get_bit(t0.c1, -2095911117)))), ('249.133.242.74')::VARCHAR))||(- (((((-1917957199)+(-561999911)))*(-159155147)))))) WHERE t0.c0;
[11/10 19:48:14] UPDATE t2 SET c0 = DEFAULT WHERE (t2.c0) BETWEEN ((t2.c0) BETWEEN (t2.c0) AND (((((t2.c0)AND(t2.c1~t2.c1)))AND(t2.c0)))) AND (t2.c0);
[11/10 19:48:14] SET CONSTRAINTS ALL DEFERRED;
[11/10 19:48:14] CREATE STATISTICS  IF NOT EXISTS s0 (dependencies, ndistinct, mcv) ON c0, c1 FROM t3;
[11/10 19:48:14] DROP INDEX IF EXISTS i0;
[11/10 19:48:14] RESET ROLE;
[11/10 19:48:14] SET geqo_pool_size=632954162;
[11/10 19:48:14] NOTIFY test, '-}Y';
[11/10 19:48:14] CREATE STATISTICS  IF NOT EXISTS s1 ON c1, c0 FROM t2;
[11/10 19:48:14] UPDATE t3 SET c0 = DEFAULT WHERE (((t3.c1 COLLATE "en_US.utf8") COLLATE "C") COLLATE "C")~CAST((((('[-237205074,1684412835]'::int4range)*('[-1812482545,-1653742688]'::int4range)))*((('(663382066,1153095826]'::int4range)*('(-1497907579,1241005865]'::int4range)))) AS VARCHAR);
[11/10 19:48:14] UPDATE t0 SET c1 = (quote_literal(((0.1489793903730604)::INET)::VARCHAR)), c0 = (t0.c0) WHERE CAST(+ (+ (-1118032417)) AS VARCHAR)!~*(CAST(CAST(0.24707259 AS MONEY) AS VARCHAR)!~t0.c1)::VARCHAR;
[11/10 19:48:14] UPDATE t2 SET c0 = TRUE, c1 = DEFAULT WHERE (((((t2.c1)||((0.5215293)::MONEY)) SIMILAR TO ((t2.c1 COLLATE "en_US.utf8"))::VARCHAR))AND(((upper(t2.c1))<=(t2.c1))));
[11/10 19:48:14] UPDATE t3 SET c1 = '-}y' WHERE t3.c0;
[11/10 19:48:14] DROP INDEX IF EXISTS i2;
[11/10 19:48:14] ALTER TABLE  t3 ALTER c1 SET STATISTICS 6999, ADD CONSTRAINT æ¹ UNIQUE(c0) WITH (autovacuum_analyze_scale_factor=0, parallel_workers=656, autovacuum_freeze_max_age=1883584271) NOT VALID, OWNER TO CURRENT_USER, ALTER c1  TYPE bigint, NO FORCE ROW LEVEL SECURITY, SET WITHOUT CLUSTER, ALTER c0 SET STORAGE EXTERNAL, VALIDATE CONSTRAINT asdf, ALTER c0 SET NOT NULL;
[11/10 19:48:14] ALTER TABLE  t3 ALTER c0 SET STATISTICS 5999, VALIDATE CONSTRAINT asdf;
[11/10 19:48:14] ALTER TABLE  t0 FORCE ROW LEVEL SECURITY;
[11/10 19:48:14] LISTEN test;
[11/10 19:48:14] UPDATE t3 SET c1 = '-437563845', c0 = TRUE WHERE t3.c0;
[11/10 19:48:14] ANALYZE( SKIP_LOCKED);
[11/10 19:48:14] CREATE STATISTICS  IF NOT EXISTS s2 ON c0, c1 FROM t3;
[11/10 19:48:14] UPDATE t4 SET c0 = TRUE, c1 = B'11010011101100000101111010001' WHERE t4.c0;
[11/10 19:48:14] CREATE TEMP SEQUENCE IF NOT EXISTS seq NO MINVALUE START WITH -359031272 CACHE 6953017464548857078 NO CYCLE;
[11/10 19:48:14] CREATE SEQUENCE IF NOT EXISTS seq AS integer INCREMENT BY -541142206 MINVALUE -1910582159 CACHE 1001985902;
[11/10 19:48:14] CREATE STATISTICS  IF NOT EXISTS s3 (dependencies, ndistinct, mcv) ON c0, c1 FROM t2;
[11/10 19:48:14] REINDEX TABLE CONCURRENTLY t0;
[11/10 19:48:14] RESET ROLE;
[11/10 19:48:14] UPDATE t1 SET c1 = '?v[æ®®]', c0 = (((0.5595111512894357) IN (-1.166231085E9)) IS NOT UNKNOWN) WHERE t1.c0;
[11/10 19:48:14] RESET ROLE;
[11/10 19:48:14] UPDATE t4 SET c1 = (t4.c1), c0 = FALSE WHERE t4.c0;
[11/10 19:48:14] INSERT INTO t3(c0) VALUES(FALSE);
[11/10 19:48:14] ALTER TABLE  t1 ENABLE ROW LEVEL SECURITY;
[11/10 19:48:14] DROP INDEX IF EXISTS i0, i3;
[11/10 19:48:14] SET geqo_threshold=1080489046;
[11/10 19:48:14] REINDEX TABLE CONCURRENTLY t2;
[11/10 19:48:14] CREATE VIEW v0(c0, c1, c2, c3) AS (SELECT DISTINCT t0.c1, t4.c1, 0.57192513508236408892315694174612872302532196044921875, abs(- (('(-1370372707,1260360419)'::int4range)::INT)) FROM t1, ONLY t2, ONLY t0, t4* WHERE t1.c0);
[11/10 19:48:14] CREATE OR REPLACE VIEW v0(c0) AS (SELECT DISTINCT ON (0.04551586534420370977471748119569383561611175537109375) CAST((((((('(-1387958163,-528618675]'::int4range)*('(-842395579,-412870715]'::int4range)))-((('[-2035519747,-434276811)'::int4range)*('[-102583112,-44594412)'::int4range)))))*((((('[-9223372036854775808,1971796229]'::int4range)-('(-1854620691,-61256786]'::int4range)))-('[-205775893,2092135981]'::int4range)))) AS VARCHAR(595)) FROM ONLY t3, t0*, ONLY t1 LIMIT 7679233295715254803 OFFSET 4111177864520821681);
[11/10 19:48:14] CREATE MATERIALIZED VIEW v0(c0, c1, c2) AS (SELECT ALL 0.6381053548566448, t4.c1, 0.34766531857153637474766583181917667388916015625 FROM ONLY t1, ONLY t3, t4, ONLY t2 WHERE CAST((((((('(328816053,500511485]'::int4range)-('(-2143536316,-927603164]'::int4range)))*((('(-1640207324,513226723)'::int4range)*('(515531850,800458865)'::int4range)))))*((((('[-2116552930,2006495336]'::int4range)*('(-9223372036854775808,-805727379]'::int4range)))*((('[68115593,1103190456)'::int4range)-('(-1829381976,651236932]'::int4range)))))) AS BOOLEAN) LIMIT 2780105703293354351);
[11/10 19:48:14] CREATE MATERIALIZED VIEW v0(c0, c1, c2) AS (SELECT CAST(0.8287767 AS MONEY), (((((((('[603224543,1562359370]'::int4range)-('[-1850235480,1034279555)'::int4range)))*(CAST('(-178334222,476240356)'::int4range AS int4range))))*((((('(-1609653221,31110851)'::int4range)*('(-823644746,1153170549)'::int4range)))-((('[-1220130058,690709411)'::int4range)*('[-945739452,-578390359)'::int4range)))))))-((((((('(-1755500505,-1301746941)'::int4range)*('[861178397,1059199779]'::int4range)))-((('[1762905588,1815263705)'::int4range)-('[-1272470125,-617597184]'::int4range)))))-(range_merge((('[-817801844,-334995089)'::int4range)-('[-2120996158,699639559)'::int4range)), (('[-641612088,1825039221)'::int4range)*('(67362598,1083069656)'::int4range))))))), 0.1129524096347955808283813894377090036869049072265625 FROM ONLY t3, ONLY t2, ONLY t0, t4* LIMIT 6496902338251558306);
[11/10 19:48:14] CREATE MATERIALIZED VIEW v0(c0) AS (SELECT 0.679254400120017 FROM ONLY t4, t0*, t3*, t1 ORDER BY t1.c0 DESC, t3.c0 DESC, t1.c0 ASC LIMIT 8294517920326353176 OFFSET 4000017397330369676);
[11/10 19:48:14] CREATE OR REPLACE TEMPORARY VIEW v0(c0) AS (SELECT CAST('248.75.173.204' AS INT) FROM t4, ONLY t1 WHERE (((((((('(603224543,675826290]'::int4range)*('(-1809422219,1602969182]'::int4range)))-((('(-1598660907,245655417]'::int4range)-('(-2141522304,1253580140]'::int4range)))))&<((((('(-2078784014,-876613423]'::int4range)-('[167516969,1017257886)'::int4range)))*((('[-1503933743,-161546236)'::int4range)-('(-687435425,-517321214]'::int4range)))))))AND(t1.c0)) LIMIT 4402247543009004137 OFFSET 4272077751073030757) WITH LOCAL CHECK OPTION;
[11/10 19:48:14] CREATE OR REPLACE VIEW v0(c0) AS (SELECT DISTINCT t2.c1 FROM t0*, ONLY t2, t1*, t4, ONLY t3 LIMIT 2134444558865196465) WITH LOCAL CHECK OPTION;
[11/10 19:48:14] CREATE OR REPLACE RECURSIVE VIEW v0(c0) AS (SELECT DISTINCT ON (0.01154022428468770566922785292263142764568328857421875) NULL FROM ONLY t3);
[11/10 19:48:14] CREATE OR REPLACE TEMPORARY RECURSIVE VIEW v0(c0) AS (SELECT ALL (((((((('(-2111451655,-998168110)'::int4range)-('[-936006988,932002169)'::int4range)))-((('[-930431910,160786371)'::int4range)*('[-1791700537,384125168)'::int4range)))))*((((t4.c0)::int4range)*((('[-1097518311,373467158)'::int4range)*('(-2120996158,850385235)'::int4range)))))))*((((((('(-1318055684,1450337817)'::int4range)-('(-365251067,1373513053)'::int4range)))*((('(-136088572,1003276572]'::int4range)*('(-1586909585,1145537217]'::int4range)))))-((((('(1017257886,1380158924]'::int4range)*('(-1305770328,-636628051)'::int4range)))*((('[-1166231085,1059199779]'::int4range)*('[-2139246598,-1812482545]'::int4range)))))))) FROM t4);
[11/10 19:48:14] CREATE OR REPLACE TEMPORARY VIEW v0(c0) AS (SELECT ALL t2.c0 FROM t3, t1*, ONLY t0, t4*, ONLY t2 LIMIT 8028420427344027481 OFFSET 8036144135495164634) WITH CASCADED CHECK OPTION;
[11/10 19:48:14] CREATE MATERIALIZED VIEW v0(c0, c1) AS (SELECT DISTINCT CAST(0.5961887 AS MONEY), num_nonnulls(((((t4.c1)&(t4.c1)))<<(t4.c1)), ascii(t3.c1)) FROM t3, t4, ONLY t0 WHERE t0.c0 LIMIT 6124342605949096824 OFFSET 8430219940550308821);
[11/10 19:48:14] CREATE MATERIALIZED VIEW v0(c0, c1, c2, c3) AS (SELECT '118.154.90.233', ((CAST('i' AS VARCHAR)!~*t2.c1)AND(((t1.c1)LIKE(initcap(t1.c1))))), '0.167.195.235', ((((NOT (t1.c0))OR(t4.c0)))OR(t1.c0)) FROM t1, t2*, t4* WHERE t2.c0);
[11/10 19:48:14] CREATE MATERIALIZED VIEW v0(c0) AS (SELECT ALL 0.7647107309294545185451852375990711152553558349609375 FROM ONLY t4);
[11/10 19:48:14] CREATE RECURSIVE VIEW v0(c0, c1) AS (SELECT ALL 0.86393762387810568714741066287388093769550323486328125, 0.9029833043277126 FROM ONLY t2, t3, ONLY t1, t4);
[11/10 19:48:14] CREATE UNIQUE INDEX i0 ON t0((- (((((CAST((0.41662017)::MONEY AS INT))/((t0.c0)::INT)))*(upper('(-1845338297,1215348425]'::int4range))))) ASC, c1 ASC NULLS LAST) INCLUDE(c0, c1) WHERE t0.c0;
[11/10 19:48:14] CREATE INDEX i0 ON t2((((power(0.9916530358255065)) IN (82281291)) BETWEEN (t2.c0) AND ((lower(t2.c1) SIMILAR TO t2.c1))) DESC, ((CAST(0.9029833 AS MONEY))::INT) ASC) WHERE t2.c0;
[11/10 19:48:14] CREATE UNIQUE INDEX i0 ON ONLY t4 USING GIST(c0 ASC) WHERE t4.c0;
[11/10 19:48:14] CREATE UNIQUE INDEX i0 ON ONLY t1((0.5926744) ASC, ('61.41.156.129') DESC NULLS LAST);
[11/10 19:48:14] CREATE INDEX i0 ON t0 USING HASH(c1) WHERE t0.c0;
[11/10 19:48:14] INSERT INTO t2(c0, c1) VALUES(FALSE, initcap(CAST(((B'101101011010010010010111110101')>>(B'1111111111111111111111111111111111111000111001001110000000011000')) AS VARCHAR(373)))), (TRUE, '{MPF3xl');
[11/10 19:48:14] INSERT INTO t0(c0, c1) VALUES(FALSE, (((((('sNsBA')||('145.75.235.64')))||('245.17.67.153')))::INT)::VARCHAR);
[11/10 19:48:14] INSERT INTO t3(c0, c1) VALUES(TRUE, ']'), (FALSE, '{MPF3xl'), (TRUE, (CAST(0.37074697563345127 AS VARCHAR(106)) COLLATE "C")), (TRUE, 'Hjà»­ljC'), (FALSE, CAST(((upper('{PF3xl') COLLATE "C") COLLATE "en_US.utf8") AS VARCHAR(446)));
[11/10 19:48:14] COMMIT;
[11/10 19:48:14] SET SESSION statement_timeout = 5000;
;
