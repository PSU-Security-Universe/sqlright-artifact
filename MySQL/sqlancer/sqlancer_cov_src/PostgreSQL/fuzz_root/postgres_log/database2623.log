[11/10 22:25:11] \c test;
[11/10 22:25:11] DROP DATABASE IF EXISTS database2623;
[11/10 22:25:11] CREATE DATABASE database2623  TEMPLATE template0;
[11/10 22:25:11] \c database2623;
[11/10 22:25:11] CREATE TEMP TABLE IF NOT EXISTS t0(c0 VARCHAR(138) COLLATE "en_US.utf8" , c1 bigserial , CHECK(((lower_inc((((('(951108519,951108519)'::int4range)*('[-345944601,951108519]'::int4range)))*((('(-9223372036854775808,-1826457395)'::int4range)*('(-345944601,716604490)'::int4range))))))OR((t0.c1) NOT IN (t0.c1, 7.1660449E8)))), UNIQUE(c0), EXCLUDE (c1 WITH <=, (CAST('-Infinity' AS MONEY)) ASC NULLS LAST WITH @@) WHERE (((((((CAST((-3.45944608E8)::MONEY AS BOOLEAN))AND(((t0.c0)LIKE(lower(t0.c0))))))AND(((t0.c0 COLLATE "en_US.utf8") SIMILAR TO t0.c0))))OR(CAST(- (- (t0.c1)) AS BOOLEAN))))) PARTITION BY HASH(('167.192.231.94')xid_ops) ON COMMIT PRESERVE ROWS ;
[11/10 22:25:11] CREATE UNLOGGED TABLE IF NOT EXISTS t0(c0 TEXT , c1 int4range , CHECK((t0.c1) BETWEEN (t0.c1) AND (t0.c1))) PARTITION BY HASH(((upper(t0.c0) COLLATE "en_US.utf8"))float8_minmax_ops, (CAST(0.24936813220669706847587576703517697751522064208984375 AS INT))time_minmax_multi_ops);
[11/10 22:25:11] CREATE TEMPORARY TABLE t0(c0 DECIMAL ) WITH (parallel_workers=740, autovacuum_vacuum_cost_delay=37, autovacuum_vacuum_scale_factor=0.5, autovacuum_vacuum_threshold=1597820172);
[11/10 22:25:11] CREATE UNLOGGED TABLE t1(c0 boolean , EXCLUDE ((CAST(9.5110854E8 AS MONEY)) DESC NULLS LAST WITH >, c0 float8_minmax_ops WITH <>), CHECK(t1.c0), FOREIGN KEY (c0) REFERENCES t0(c0) ON DELETE CASCADE, UNIQUE(c0), PRIMARY KEY(c0)) INHERITS(t0) WITH (autovacuum_analyze_scale_factor=0.2, autovacuum_freeze_min_age=739245485, autovacuum_freeze_table_age=632979867, autovacuum_freeze_max_age=46100674, fillfactor=47, autovacuum_vacuum_scale_factor=0.8, autovacuum_vacuum_cost_limit=6980, autovacuum_vacuum_threshold=781544126, autovacuum_analyze_threshold=179535405);
[11/10 22:25:11] CREATE TABLE t1(c0 money , c1 inet );
[11/10 22:25:11] CREATE TABLE t2(LIKE t0);
[11/10 22:25:11] CREATE TEMP TABLE t3(c0 DECIMAL , c1 inet , c2 FLOAT  NULL DEFAULT (upper((((((('(-1135022386,-1031281246)'::int4range)*('[-1135022386,682032576)'::int4range)))*('[-1154200287,-678798597)'::int4range)))-((((('(-1031281246,716604490)'::int4range)*('(-2087191074,-659841243]'::int4range)))-((('(-849498408,-141340410]'::int4range)-('[1426283847,1543428477)'::int4range)))))))) PRIMARY KEY UNIQUE) INHERITS(t2) WITH (autovacuum_freeze_max_age=1174327045, autovacuum_vacuum_threshold=213645564, parallel_workers=497, autovacuum_freeze_min_age=860307425, autovacuum_analyze_scale_factor=0, autovacuum_enabled=1, autovacuum_analyze_threshold=1533357100);
[11/10 22:25:11] CREATE TEMPORARY TABLE t4(LIKE t3);
[11/10 22:25:11] INSERT INTO t0(c0) VALUES(DEFAULT);
[11/10 22:25:11] ALTER TABLE  t3 ALTER c2  RESET(n_distinct, n_distinct_inherited), ADD CONSTRAINT F PRIMARY KEY(c0, c1);
[11/10 22:25:11] ALTER TABLE  t4 ALTER c0  SET(n_distinct_inherited=0, n_distinct=1.0E-4), SET WITHOUT CLUSTER, ALTER c0 DROP DEFAULT, ALTER c1  TYPE TEXT COLLATE "timestamp_ops", ALTER c2 SET NOT NULL, ALTER c1 SET STATISTICS 3418, REPLICA IDENTITY FULL, ALTER c1 SET STORAGE EXTENDED, DISABLE ROW LEVEL SECURITY, SET LOGGED, FORCE ROW LEVEL SECURITY, OWNER TO SESSION_USER, VALIDATE CONSTRAINT asdf;
[11/10 22:25:11] ALTER TABLE  t2 SET WITHOUT CLUSTER, DISABLE ROW LEVEL SECURITY, ALTER c0  SET(n_distinct_inherited=-1.0E-10, n_distinct=0.1), SET LOGGED, ALTER c0  RESET(n_distinct_inherited, n_distinct), ALTER c0 SET DEFAULT 0.4733490109646947274768535862676799297332763671875, NO FORCE ROW LEVEL SECURITY, SET WITHOUT OIDS, ALTER c0 SET NOT NULL, VALIDATE CONSTRAINT asdf, ENABLE ROW LEVEL SECURITY, ADD CONSTRAINT C EXCLUDE (c0 NULLS FIRST WITH =, c0 float8_minmax_ops ASC WITH =), ALTER c0 SET STATISTICS 3417, FORCE ROW LEVEL SECURITY, REPLICA IDENTITY DEFAULT;
[11/10 22:25:11] ALTER TABLE  t1 ALTER c0 SET STATISTICS 1047, DISABLE ROW LEVEL SECURITY;
[11/10 22:25:11] RESET ROLE;
[11/10 22:25:11] CREATE INDEX i0 ON t3(((0.64886034)::MONEY) DESC NULLS FIRST) INCLUDE(c0, c1, c2) WHERE (((((B'1011001110100111000111000011000')>>(B'1111111111111111111111111111111111010001000000100100100001110110')))::VARCHAR)||((((t3.c2)::INT)/(CAST(B'1111111111111111111111111111111111101011011000010101001100110100' AS INT)))))!~*((pg_current_logfile())||(((((B'1011001110100111000111000011000')<<(B'1111111111111111111111111111111111000010111101010110100010011011')))>>(B'11101100000100000010011101101'))));
[11/10 22:25:11] CREATE INDEX i0 ON ONLY t2((('176.6.107.231')::REAL), c0 ASC);
[11/10 22:25:11] CREATE INDEX i0 ON t0 USING GIN(c0 interval_ops DESC, ((CAST((0.5345085)::MONEY AS VARCHAR) COLLATE "en_US.utf8")), c0 ASC) INCLUDE(c0) WHERE upper_inc((((((('(-1760883481,1505259735]'::int4range)*('(716604490,796094076)'::int4range)))*((('(717977114,1551769024)'::int4range)*('[467227496,495060205]'::int4range)))))*((((('[-564939756,2011819803]'::int4range)*('[-904748440,-402904904)'::int4range)))-((('[-1144607476,1228291784)'::int4range)*('(-2134762502,495060205)'::int4range)))))));
[11/10 22:25:11] CREATE UNIQUE INDEX i0 ON t0(c0 ASC, ('104.201.42.37') float4_minmax_ops ASC) INCLUDE(c0);
[11/10 22:25:11] CREATE UNIQUE INDEX i0 ON ONLY t2 USING GIST((((((((((B'1011011111111101101100101111101')||(B'1011100011111100001110111000000')))>>(((B'101110011000001101001011100')|(B'1111111111111111111111111111111111010000000011010011011001001001')))))&(((((B'111101011101111010100100101011')<<(B'111000101100001100001110100111')))&(((B'1111111111111111111111111111111111100001010100011010010110110000')||(B'1111111111111111111111111111111110101011101001001111000011000110')))))))#(((((((B'1111111111111111111111111111111111011110110111010010000001010111')||(B'1111111111111111111111111111111110101011101001001111000011000110')))>>(((B'1011000110100100100000000111111')|(B'1101011001110101000001010110000')))))#(((((B'101111111000011001111111110110')&(NULL)))>>(((B'1111111111111111111111111111111111101011011000010101001100110100')<<(B'1111111111111111111111111111111110001011011111000000100100010101'))))))))) inet_ops, ((0.5345085)::MONEY) ASC, (0.21469904), (((((((((B'1111111111111111111111111111111110100010011001011100111010010100')#(B'1111111111111111111111111111111110111010000111110101011001000011')))||(((B'101000001011100110010101110000')#(B'1111010110101011111100101100011')))))&(((((B'1110111101011110100111010000110')||(B'1100111101101110111010100100011')))<<(((B'1111010101101011000110011000111')>>(B'1110111101011110100111010000110')))))))|(((((((B'11010010101111111100101001110')<<(B'1001001001101100011111011001000')))<<(((B'101000011001100110111001101110')||(B'110101101000001100000011000110')))))&(((((B'1011111000011001101110101101011')|(B'1100101001010111110110000110')))>>(((B'1111111111111111111111111111111111011110110111010010000001010111')<<(B'101000011001100110111001101110'))))))))) DESC) INCLUDE(c0);
[11/10 22:25:11] CREATE UNIQUE INDEX i0 ON ONLY t1 USING HASH(c1);
[11/10 22:25:11] CREATE INDEX i0 ON ONLY t0((upper(CAST(((B'1111111111111111111111111111111111010111100010100101101011111011')||(B'1011000110100100100000000111111')) AS VARCHAR))), (((to_ascii(('205.23.92.199')::VARCHAR))||(CAST(((((B'1111111111111111111111111111111110101011101001001111000011000110')>>(B'1000010111010100110110111111011')))<<(((B'1111111111111111111111111111111110110101000110111101010101101100')||(B'1111111111111111111111111111111111100010011001100000001101100101')))) AS VARCHAR(504))))) DESC, c0 ASC) WHERE (0.721670945562635779424454085528850555419921875) NOTNULL;
[11/10 22:25:11] UPDATE t3 SET c2 = 0.14141825, c0 = (0.210158833036885095424395331065170466899871826171875) WHERE (('n7uu3^	')::INT) BETWEEN SYMMETRIC (- (- (num_nonnulls(t3.c0)))) AND (t3.c2);
[11/10 22:25:11] UPDATE t4 SET c0 = 0.49211100390075024346714371858979575335979461669921875 WHERE CAST(0.7451645 AS VARCHAR(870))!~lower((('1594678635')||(441973070)));
[11/10 22:25:11] UPDATE t2 SET c0 = 0.189381209816815054836069975863210856914520263671875 WHERE ((((initcap('[]') COLLATE "en_US.utf8") COLLATE "en_US.utf8"))LIKE((('[-25607429,562816969)'::int4range)::VARCHAR COLLATE "en_US.utf8")));
[11/10 22:25:11] SET SESSION geqo_selection_bias=2.0;
[11/10 22:25:11] INSERT INTO t0(c0) VALUES(0.17331425079075912787374136314610950648784637451171875), (0.35058164480954900898979076373507268726825714111328125), (0.18903732825510843884586620333720929920673370361328125), (0.9244081953770095783085025686887092888355255126953125), (0.726622871456835017767161843948997557163238525390625);
[11/10 22:25:11] DISCARD ALL;
[11/10 22:25:11] INSERT INTO t2(c0) VALUES(0.24238004625823628135350418233429081737995147705078125);
[11/10 22:25:11] ANALYZE t2;
[11/10 22:25:11] ALTER TABLE  ONLY t1 ALTER c0  SET DATA TYPE FLOAT, ALTER c1 SET NOT NULL, NO FORCE ROW LEVEL SECURITY;
[11/10 22:25:11] ALTER TABLE  t1 SET LOGGED, ADD CONSTRAINT r CHECK(((0.2895099)::MONEY) BETWEEN (t1.c0) AND ((NOT (((((FALSE)OR(FALSE)))AND(TRUE))))::MONEY)) NOT VALID, ALTER c0 DROP NOT NULL, ALTER c1  RESET(n_distinct_inherited), FORCE ROW LEVEL SECURITY, ENABLE ROW LEVEL SECURITY, VALIDATE CONSTRAINT asdf, NO FORCE ROW LEVEL SECURITY, ALTER c1 SET STATISTICS 4634, ALTER c1 SET STORAGE MAIN, SET WITHOUT OIDS, ALTER c1  SET(n_distinct_inherited=-1.0E-10, n_distinct=-1.0E-10), REPLICA IDENTITY DEFAULT, SET WITHOUT CLUSTER, DROP  IF EXISTS c0, ALTER c0  SET DATA TYPE smallint, DISABLE ROW LEVEL SECURITY, OWNER TO SESSION_USER;
[11/10 22:25:11] ALTER TABLE  t2 REPLICA IDENTITY FULL, ALTER c0  TYPE int4range, FORCE ROW LEVEL SECURITY, ALTER c0 DROP NOT NULL, ALTER c0  RESET(n_distinct_inherited, n_distinct), SET WITHOUT OIDS, DISABLE ROW LEVEL SECURITY, SET WITHOUT CLUSTER, NO FORCE ROW LEVEL SECURITY, ALTER c0 SET DEFAULT 0.12053617282714823577549623223603703081607818603515625, NOT OF, ALTER c0  SET(n_distinct=-0.2), VALIDATE CONSTRAINT asdf, ADD CONSTRAINT ï´¬ CHECK(NOT ((((-678798597)+(-1022432377))) IN (- (1828964180)))) NOT VALID, ALTER c0 SET STATISTICS 8365, ALTER c0 SET STORAGE EXTERNAL, ENABLE ROW LEVEL SECURITY, OWNER TO CURRENT_USER, SET LOGGED;
[11/10 22:25:11] ALTER TABLE  ONLY t2 ALTER c0 SET STATISTICS 5008, FORCE ROW LEVEL SECURITY, NO FORCE ROW LEVEL SECURITY;
[11/10 22:25:11] LISTEN test;
[11/10 22:25:11] ANALYZE( VERBOSE) t2;
[11/10 22:25:11] DROP INDEX IF EXISTS i0, i0, i3 CASCADE;
[11/10 22:25:11] DISCARD ALL;
[11/10 22:25:11] COMMIT;
[11/10 22:25:11] SET SESSION statement_timeout = 5000;
;
