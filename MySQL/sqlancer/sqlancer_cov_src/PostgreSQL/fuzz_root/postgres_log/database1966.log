[11/10 01:25:24] \c test;
[11/10 01:25:24] DROP DATABASE IF EXISTS database1966;
[11/10 01:25:24] CREATE DATABASE database1966 WITH ENCODING 'utf8'  TEMPLATE template0;
[11/10 01:25:24] \c database1966;
[11/10 01:25:24] CREATE TEMP TABLE t0(c0 BIT VARYING(295) , c1 TEXT  CHECK (((upper(((t0.c1)||(0.9985566))))LIKE(t0.c1))) NO INHERIT DEFAULT (CAST(- (((abs(0))*((B'1111111111111111111111111111111111111110101001001111110000010001')::INT))) AS VARCHAR(54))), EXCLUDE (c1 DESC NULLS LAST WITH <, c0 timestamp_ops WITH <<, (0.6473366) timestamptz_minmax_multi_ops WITH <>) WITH (autovacuum_analyze_threshold=972305440, autovacuum_analyze_scale_factor=0.8, fillfactor=76, autovacuum_vacuum_scale_factor=0, autovacuum_freeze_table_age=491985913, autovacuum_vacuum_cost_delay=65, autovacuum_enabled=0, autovacuum_freeze_min_age=249787960) WHERE ((t0.c1 SIMILAR TO t0.c1))) ON COMMIT DELETE ROWS ;
[11/10 01:25:24] CREATE UNLOGGED TABLE t0(c0 DECIMAL  NULL UNIQUE PRIMARY KEY, c1 bigserial , c2 DECIMAL  UNIQUE, c3 DECIMAL ) PARTITION BY LIST((CAST(-2.2742E7 AS MONEY)));
[11/10 01:25:24] CREATE UNLOGGED TABLE t0(c0 bigserial  PRIMARY KEY UNIQUE, c1 DECIMAL , c2 TEXT  CHECK ((t0.c2 COLLATE "C")~*t0.c2));
[11/10 01:25:24] CREATE TABLE IF NOT EXISTS t1(c0 inet ) PARTITION BY HASH(((0.36968648)::MONEY)box_ops, ((0.36968648)::MONEY), ((((((('[-22741999,-22741999]'::int4range)*((('(-655087352,566064584)'::int4range)*('[-1120500733,421493901)'::int4range)))))*((((('[-467402533,691409667)'::int4range)*('(-1120500733,1450415820]'::int4range)))*((('(-509877535,572679056)'::int4range)*('(981325149,1370002141]'::int4range)))))))*((((((('[-1263470932,-1140944840]'::int4range)-('[-482231289,1767700667)'::int4range)))*((('(-1233571915,-946941780)'::int4range)*('[106239069,106239069]'::int4range)))))*((((('[35403797,595535001)'::int4range)-('(-946941780,-509877535]'::int4range)))*((('[-780420243,681271526]'::int4range)-('[-467402533,1731508335]'::int4range)))))))))interval_minmax_ops) WITH (autovacuum_vacuum_cost_limit=1606, autovacuum_enabled=0, parallel_workers=114, autovacuum_analyze_scale_factor=0.01, autovacuum_vacuum_scale_factor=0.2, autovacuum_analyze_threshold=1808811490, autovacuum_freeze_max_age=1985487661, fillfactor=82, autovacuum_freeze_table_age=1643669701);
[11/10 01:25:24] CREATE TABLE t1(c0 money  PRIMARY KEY NULL, c1 CHAR(288) ) PARTITION BY HASH(('109.204.3.241')float8_minmax_ops, (CAST(t1.c0 AS INT))tsvector_ops) WITH (autovacuum_enabled=0, autovacuum_vacuum_cost_delay=16, fillfactor=50, autovacuum_vacuum_threshold=1446942571, parallel_workers=8, autovacuum_freeze_max_age=831455516, autovacuum_analyze_scale_factor=0.1, autovacuum_vacuum_cost_limit=8606, autovacuum_freeze_table_age=888035379, autovacuum_freeze_min_age=611214632, autovacuum_vacuum_scale_factor=0.2, autovacuum_analyze_threshold=2082609060);
[11/10 01:25:24] CREATE UNLOGGED TABLE t1(LIKE t0);
[11/10 01:25:24] CREATE TEMPORARY TABLE IF NOT EXISTS t2(c0 BIT VARYING(248)  UNIQUE, c1 REAL ) INHERITS(t1, t0) PARTITION BY LIST((+ ((t2.c1)::INT))int8_ops) WITH (autovacuum_freeze_max_age=1747188500);
[11/10 01:25:24] CREATE UNLOGGED TABLE IF NOT EXISTS t2(LIKE t0 EXCLUDING DEFAULTS);
[11/10 01:25:24] CREATE TABLE IF NOT EXISTS t3(LIKE t0);
[11/10 01:25:24] CREATE TEMP TABLE IF NOT EXISTS t4(c0 DECIMAL , c1 int4range  UNIQUE CHECK (((t4.c0)=(t4.c0))) NULL, c2 TEXT COLLATE "C" ) INHERITS(t2, t1, t3) ON COMMIT PRESERVE ROWS ;
[11/10 01:25:24] CREATE TEMPORARY TABLE t4(LIKE t2);
[11/10 01:25:24] CREATE UNLOGGED TABLE t5(c0 FLOAT  NOT NULL UNIQUE, c1 VARCHAR(326)  DEFAULT (upper((0.01572658962092765566609386951313354074954986572265625)::VARCHAR)) PRIMARY KEY, EXCLUDE (c1 NULLS LAST WITH >=, (CAST((((((('(-487018223,508020056]'::int4range)*('(1097306195,1636909317)'::int4range)))*((('[934945853,1016384963]'::int4range)-('(-1464789247,691409667]'::int4range)))))-(((NULL)*((('(403990518,1257782279]'::int4range)*('[-809896530,1643473605]'::int4range)))))) AS VARCHAR(184))) int2_ops NULLS FIRST WITH <@) WHERE ((((((((((((('[-517249632,2009853219)'::int4range) NOT IN ('(691409667,1506691460]'::int4range)) NOT IN (upper_inf('[-482231289,1944606045]'::int4range), NOT (FALSE)))AND(lower_inc((('(-1204953911,-517249632)'::int4range)*('[1,1028246753)'::int4range))))))OR((t5.c1 SIMILAR TO (right(t5.c1, -1905528241) COLLATE "en_US.utf8")))))OR(CAST(+ (masklen('245.172.225.21')) AS BOOLEAN))))OR(((t5.c1)IS DISTINCT FROM(t5.c1)))))AND(((CAST(-115736220 AS INT))::BOOLEAN) IS FALSE))), CHECK((((lower(t5.c1) COLLATE "en_US.utf8"))||(CAST(sind() AS VARCHAR)))~t5.c1), UNIQUE(c1, c0)) INHERITS(t4, t2, t0, t1) PARTITION BY LIST((0.247687068165003410058488952927291393280029296875));
[11/10 01:25:24] CREATE TABLE t5(LIKE t3 INCLUDING CONSTRAINTS);
[11/10 01:25:24] DISCARD PLANS;
[11/10 01:25:24] ANALYZE t2;
[11/10 01:25:24] INSERT INTO t0(c2) OVERRIDING USER VALUE VALUES(version()), ((((((-50310491)::VARCHAR(460))||(- (1248799620))) COLLATE "en_US.utf8") COLLATE "en_US.utf8"));
[11/10 01:25:24] DROP INDEX IF EXISTS i2, i1 CASCADE;
[11/10 01:25:24] INSERT INTO t0(c0, c1, c2) VALUES(num_nonnulls(((((B'111001010001010101111111100')#(B'1111111111111111111111111111111110001111011010111100101101011000')))<<(B'10010111000001111100000100010')), 0.6072166), 0.1369236770530601887685406836681067943572998046875, ((lower('0.6473366269437771') COLLATE "C") COLLATE "en_US.utf8")) ON CONFLICT (c2) DO NOTHING;
[11/10 01:25:24] INSERT INTO t4(c2, c0, c1) VALUES(CAST((0.9553798)::MONEY AS VARCHAR(683)), 885167221, 0.59293325879227187780173835562891326844692230224609375), ('fa', ('153.93.160.222')::INT, 0.147268715551769791005654042237438261508941650390625), ((((md5('') COLLATE "C") COLLATE "C") COLLATE "en_US.utf8"), -946941780, 0.76849627518125307457097505903220735490322113037109375), (lower(CAST((('(1114461044,1947409591)'::int4range)*('(-828419500,1257782279)'::int4range)) AS VARCHAR)), 71567354, 0.444222795389718871916784337372519075870513916015625) ON CONFLICT (c2) DO NOTHING;
[11/10 01:25:24] INSERT INTO t3(c0, c2, c1) OVERRIDING USER VALUE VALUES(-1120500733, substr(CAST(((2094430767)*(1636909317)) AS VARCHAR), ((((-638998924)^(1718445252)))+(((1864442745)*(-495062908)))), CAST((0.18674208)::MONEY AS INT)), 0.17717836923337315635507138722459785640239715576171875);
[11/10 01:25:24] CREATE MATERIALIZED VIEW v0(c0) AS (SELECT DISTINCT ON (((((((((B'1100001100100010100000100000101')|(B'1111111111111111111111111111111110000100100010110100101111001100')))>>(((B'1111111111111111111111111111111111011011101010010001011100010001')||(B'1111111111111111111111111111111111100011000000001100011110000011')))))&(((((B'100111000001011001000101110100')#(B'1111111111111111111111111111111111100010101001110000110010000000')))||(((B'101000101111000111101010100001')|(B'1111111111111111111111111111111110001111011010111100101101011000')))))))#(((((((B'11011100001111001000101111')#(B'1111111111111111111111111111111111101101110000111111100001101101')))&(((B'1111111111111111111111111111111111101101110000111111100001101101')<<(B'11011101011110010011101011010')))))>>(((((B'1111111111111111111111111111111110000110011000110111110111110101')#(B'1100011011001011011001001010100')))||(((B'1111111111111111111111111111111111101010110111100010011110001001')>>(B'100010001000100110001110010000'))))))))) CAST(0.18674208 AS MONEY) FROM ONLY t3, ONLY t5, t1, ONLY t4, ONLY t2, ONLY t0 GROUP BY t2.c0, 0.6594310730042980406295782813685946166515350341796875, t4.c0);
[11/10 01:25:24] CREATE MATERIALIZED VIEW v0(c0) AS (SELECT DISTINCT 0.7568775 FROM t1*, ONLY t4, t2*, t0*, ONLY t3 WHERE ((((((t0.c2)=(pg_current_logfile())))AND((((B'1111111111111111111111111111111111011111101110111111011011101010')<<(B'1111111111111111111111111111111110000111110010111010111100001101')))::VARCHAR!~*t0.c2)))AND((upper(t2.c2)) BETWEEN SYMMETRIC (CAST((('[-1125145370,155060740)'::int4range)-('(-1603139540,-1106581436]'::int4range)) AS VARCHAR)) AND (t0.c2))));
[11/10 01:25:24] CREATE TEMP VIEW v0(c0, c1, c2) AS (SELECT ALL t0.c1, 0.643856, ((((((((B'1111111111111111111111111111111110000110010000010000001101111111')||(B'1100000100100000011001001001000')))|(((B'1111111111111111111111111111111111100001100110111110001011100001')||(B'100110000101010010000000001011')))))&((((t4.c1)<=(t4.c1)))::BIT)))|(B'1111111111111111111111111111111110011110110001101100111110101011')) FROM t3, t4*, ONLY t5, ONLY t0 WHERE NOT (pg_jit_available())) WITH LOCAL CHECK OPTION;
[11/10 01:25:24] CREATE MATERIALIZED VIEW v0(c0) AS (SELECT ALL ((((((((B'1111111111111111111111111111111111000110010110110111101100011101')||(B'1001010011011110010101110000100')))#(CAST(t5.c2 AS BIT))))|(((((B'1111111111111111111111111111111110101000011101000000011100010011')>>(B'1111111111111111111111111111111111000010111100110101101010111101')))||(((B'1011110001001011100110001111010')||(B'1111111111111111111111111111111110010011011110101100000001001100')))))))>>(((((((B'1101101001110110111011100010')#(B'1001111101101001111101000010')))>>(((B'1111111111111111111111111111111111111001000110100000000101100100')&(B'1111111111111111111111111111111111011010000010010011100010100111')))))<<(((((B'1111111111111111111111111111111110010101100001000001010001000100')#(B'1110011110110111001100010100110')))|(((B'1100111001101000010111000111111')|(B'1111111111111111111111111111111110111101001101101000010000000011')))))))) FROM ONLY t5, ONLY t0, t2 WHERE (t2.c0) IS NULL LIMIT 7381038755718410805);
[11/10 01:25:24] CREATE MATERIALIZED VIEW v0(c0) AS (SELECT t4.c0 FROM t4, t5*, ONLY t2, ONLY t0, t1 LIMIT 4867602491097988836 OFFSET 2186384249276695428);
[11/10 01:25:24] CREATE VIEW v0(c0) AS (SELECT DISTINCT abs(t3.c0) FROM t3*, ONLY t1, t2) WITH CASCADED CHECK OPTION;
[11/10 01:25:24] CREATE RECURSIVE VIEW v0(c0, c1) AS (SELECT 0.9906258, (('[-607628373,-541329686]'::int4range)<@((((((('(-1717068146,-1582311852]'::int4range)*('[-388912751,1617154015)'::int4range)))-((('[-1518657122,1022763705)'::int4range)*('[75084386,1450415820)'::int4range)))))*((((('[-26444586,316733474)'::int4range)*('(-530272111,-173703565]'::int4range)))*((('(-1494711548,1582869370)'::int4range)*('[-1204953911,1947409591]'::int4range)))))))) FROM t0, t1, t4*, ONLY t3, t5* WHERE isempty((((('(-2047687132,-766889842)'::int4range)*('[-404947049,71567354]'::int4range)))*((('[165608365,167157570)'::int4range)*('[889994690,1981702001]'::int4range))))));
[11/10 01:25:24] VACUUM VERBOSE ANALYZE t3;
[11/10 01:25:24] TRUNCATE TABLE t2, v0, t0, t5;
[11/10 01:25:24] TRUNCATE v0, t3, t5;
[11/10 01:25:24] TRUNCATE t3, v0, t1, t0 CONTINUE IDENTITY;
[11/10 01:25:24] TRUNCATE TABLE v0, t1, t5, t2, t3, t0, t4 RESTART IDENTITY CASCADE;
[11/10 01:25:24] TRUNCATE t0, t5, v0, t2, t3;
[11/10 01:25:24] TRUNCATE TABLE t1, t2, t5, t0, t3, v0, t4;
[11/10 01:25:24] TRUNCATE t4, t0, t1, v0, t3;
[11/10 01:25:24] TRUNCATE t3, t4, t2;
[11/10 01:25:24] INSERT INTO t4(c0, c2) VALUES(-2083992319, upper(lower('-1631137877'))), (+ (((((to_hex('O'))%(abs(2009853219))))%(num_nulls(-353126067, 464463706)))), 'z'), (1799733497, ''), (-1, '');
[11/10 01:25:24] INSERT INTO t4(c0, c2) VALUES(301336484, 'm6SA7ꕋ4'), (-2003437947, '0.955379795055684'), (-781511695, '0.9985566299168037') ON CONFLICT  DO NOTHING;
[11/10 01:25:24] ALTER TABLE  t3 FORCE ROW LEVEL SECURITY, SET WITHOUT OIDS, VALIDATE CONSTRAINT asdf, SET UNLOGGED, ALTER c2  SET(n_distinct=-0.5, n_distinct_inherited=0.1), DISABLE ROW LEVEL SECURITY, ALTER c0  TYPE inet, DROP  IF EXISTS c0 CASCADE, ALTER c1 SET NOT NULL, ALTER c0 SET DEFAULT length((-1517178827)::VARCHAR(240)), NOT OF, NO FORCE ROW LEVEL SECURITY, REPLICA IDENTITY FULL, ENABLE ROW LEVEL SECURITY, ALTER c2 SET STATISTICS 5689, ALTER c0 SET STORAGE PLAIN;
[11/10 01:25:24] ALTER TABLE  t5 SET WITHOUT CLUSTER, NO FORCE ROW LEVEL SECURITY, ADD CONSTRAINT f CHECK(((((t5.c0)IS DISTINCT FROM(-2042559617))) IN ((t5.c2 SIMILAR TO t5.c2))) IS NOT UNKNOWN), DISABLE ROW LEVEL SECURITY, ALTER c2 SET STATISTICS 940, NOT OF, ENABLE ROW LEVEL SECURITY, ALTER c1  SET(n_distinct=1.0E-9), ALTER c1  SET DATA TYPE REAL, DROP c2 CASCADE, ALTER c2 SET DEFAULT ((current_database())||(CAST(0.53782773 AS MONEY))), VALIDATE CONSTRAINT asdf, ALTER c0 SET NOT NULL, FORCE ROW LEVEL SECURITY, SET WITHOUT OIDS, OWNER TO CURRENT_USER, ALTER c2 SET STORAGE PLAIN, REPLICA IDENTITY DEFAULT;
[11/10 01:25:24] RESET ALL;
[11/10 01:25:24] CREATE STATISTICS  IF NOT EXISTS s0 (ndistinct, dependencies, mcv) ON c0, c1 FROM t3;
[11/10 01:25:24] INSERT INTO t0(c0, c2) VALUES(-292616650, (((((((B'1010011010101000111101010001111')>>(B'1110001100011101000110001010001')))::VARCHAR(1))||('55.56.254.250')))||(upper('1248799620')~*lower('683440801')))), (1421788468, ']j');
[11/10 01:25:24] INSERT INTO t4(c2) VALUES('_vjQ1Rpm'), (lower((lower('') COLLATE "en_US.utf8"))), (NULL), (CAST(1235138393 AS VARCHAR(857))), ('{') ON CONFLICT (c1) DO NOTHING;
[11/10 01:25:24] INSERT INTO t4(c0) OVERRIDING USER VALUE VALUES(1549736290), (-24307436);
[11/10 01:25:24] SET LOCAL track_activities=1;
[11/10 01:25:24] DISCARD SEQUENCES;
[11/10 01:25:24] DISCARD SEQUENCES;
[11/10 01:25:24] CREATE STATISTICS  IF NOT EXISTS s1 ON c0, c2 FROM t2;
[11/10 01:25:24] ANALYZE t5(c1, c0);
[11/10 01:25:24] DROP INDEX IF EXISTS i0 RESTRICT;
[11/10 01:25:24] SET geqo_generations=DEFAULT;
[11/10 01:25:24] CREATE STATISTICS  s2 ON c0, c1 FROM t0;
[11/10 01:25:24] CREATE INDEX i0 ON t5 USING BTREE(('196.161.1.138'));
[11/10 01:25:24] CREATE INDEX i0 ON ONLY t5 USING HASH(c1);
[11/10 01:25:24] DELETE FROM t3 WHERE FALSE;
[11/10 01:25:24] ALTER TABLE  ONLY t5 VALIDATE CONSTRAINT asdf, DROP c0 CASCADE, ALTER c1  RESET(n_distinct, n_distinct_inherited);
[11/10 01:25:24] ALTER TABLE  ONLY t0 ALTER c1  SET(n_distinct_inherited=0.1);
[11/10 01:25:24] CLUSTER t2;
[11/10 01:25:24] CLUSTER ;
[11/10 01:25:24] SET CONSTRAINTS ALL IMMEDIATE;
[11/10 01:25:24] CREATE STATISTICS  IF NOT EXISTS s3 (ndistinct) ON c1, c0 FROM t0;
[11/10 01:25:24] DROP INDEX IF EXISTS i0 CASCADE;
[11/10 01:25:24] DROP INDEX IF EXISTS i1 CASCADE;
[11/10 01:25:24] INSERT INTO t0(c1) VALUES(0.54031560525158550678526125921052880585193634033203125);
[11/10 01:25:24] INSERT INTO t1(c1, c0) OVERRIDING SYSTEM VALUE VALUES(0.216855483289938089086490435875020921230316162109375, CAST(((((((B'1111111111111111111111111111111110000110011000110111110111110101')<<(B'1111100110101100111101000101111')))#(((B'1111111111111111111111111111111111001000110010001110000010111101')<<(B'100001101111010111010111001000')))))|(((((B'1000010010011100111100011001110')&(B'1111111111111111111111111111111111011111101110111111011011101010')))||(((B'1111111111111111111111111111111110101011001110110110101011001110')|(B'1111111111111111111111111111111111011001111010011010011001110100')))))) AS INT));
[11/10 01:25:24] INSERT INTO t5(c1) VALUES(0.20396589247073648731856110316584818065166473388671875);
[11/10 01:25:24] INSERT INTO t5(c1, c2, c0) VALUES(0.20602256332145107986519860787666402757167816162109375, current_database(), - (((CAST('93.141.98.92' AS INT))/(CAST(((B'1111111111111111111111111111111110101101111111001000111011110100')#(B'1111111111111111111111111111111110001111001001010000001011100100')) AS INT))))), (0.2740054516074719170859452788135968148708343505859375, 'm6SA7ꕋ4', - (abs((CAST(0.80003756 AS MONEY))::INT))), (0.32304498035636808328519009592127986252307891845703125, '885167221', CAST(((((((B'10110001010000100001110111010')#(B'1111111111111111111111111111111110100001111110000001011010011110')))&(((B'11110010001111100010101011000')>>(B'1010000101001010001100000010011')))))#(((((B'1111101000010111010110101101100')#(B'10110110111100100011011111000')))#(((B'1011100011001011011100100111001')|(B'101001001101100001001100000011')))))) AS INT)), (0.53541047716113165932938500191085040569305419921875, version(), length('K/YPo'));
[11/10 01:25:24] INSERT INTO t1(c0, c2, c1) OVERRIDING SYSTEM VALUE VALUES(abs(get_bit('I', 72268078)), ('153.123.195.68')::VARCHAR(710), 0.35033283596316400210213259924785234034061431884765625), ((0.3055010583574857552235926050343550741672515869140625)::INT, '1006377500', 0.6641244283185330221641606840421445667743682861328125), (566064584, (0.9979205055326822)::VARCHAR, 0.3340676904461421514724861481226980686187744140625);
[11/10 01:25:24] INSERT INTO t2(c2, c0, c1) OVERRIDING USER VALUE VALUES('9', 2105366931, 0.264733958944085134845636275713331997394561767578125), ('', 2087048806, 0.77176396524622370431956142056151293218135833740234375);
[11/10 01:25:24] SET SESSION enable_gathermerge=DEFAULT;
[11/10 01:25:24] COMMIT;
[11/10 01:25:24] SET SESSION statement_timeout = 5000;
;
