[11/11 03:12:09] \c test;
[11/11 03:12:09] DROP DATABASE IF EXISTS database2861;
[11/11 03:12:09] CREATE DATABASE database2861 ;
[11/11 03:12:09] \c database2861;
[11/11 03:12:09] CREATE TEMP TABLE t0(c0 BIT VARYING(468)  NOT NULL UNIQUE, UNIQUE(c0), CHECK((t0.c0) BETWEEN (((((t0.c0)||(((t0.c0)<<(t0.c0)))))&(((t0.c0)>>(((t0.c0)<<(t0.c0))))))) AND (((t0.c0)>>(t0.c0)))), PRIMARY KEY(c0) WITH (autovacuum_vacuum_scale_factor=0.5, autovacuum_freeze_table_age=1356053136, autovacuum_vacuum_cost_limit=524, autovacuum_vacuum_cost_delay=78, autovacuum_analyze_threshold=1330381738, autovacuum_analyze_scale_factor=0, parallel_workers=37)) PARTITION BY HASH((((0.5556545045225018686352314034593291580677032470703125)::VARCHAR(170) COLLATE "en_US.utf8"))oid_bloom_ops);
[11/11 03:12:09] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 money ) PARTITION BY HASH((((CAST(CAST(CAST(0.5141441 AS MONEY) AS INT) AS VARCHAR(266)))LIKE('Qa㤨W)'))), ((((0.49425049285232203)::INT) IS NOT NULL)::VARCHAR)name_minmax_ops, (reverse(lower(upper('&y#?'))))time_minmax_multi_ops, ((t0.c0)::INT)) WITH (autovacuum_freeze_table_age=1501468698);
[11/11 03:12:09] CREATE TEMP TABLE IF NOT EXISTS t0(c0 boolean  UNIQUE PRIMARY KEY, c1 FLOAT , c2 integer  GENERATED  ALWAYS AS (t0.c2) STORED UNIQUE, CHECK(t0.c0), EXCLUDE ((((t0.c2)-(t0.c2))) char_ops WITH <>) WITH (autovacuum_freeze_table_age=1538526367)) WITH (autovacuum_freeze_max_age=537535500, autovacuum_analyze_scale_factor=0.1, autovacuum_vacuum_cost_delay=19, fillfactor=11, autovacuum_vacuum_scale_factor=0, autovacuum_vacuum_threshold=405839432) ON COMMIT PRESERVE ROWS ;
[11/11 03:12:09] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 BIT VARYING(23) , c1 money , UNIQUE(c0, c1)) PARTITION BY HASH(('143.143.143.234')interval_bloom_ops) WITH (autovacuum_analyze_scale_factor=0.2, autovacuum_vacuum_scale_factor=1, fillfactor=51, autovacuum_freeze_min_age=116149020, parallel_workers=347, autovacuum_vacuum_threshold=1257049033, autovacuum_vacuum_cost_limit=7296, autovacuum_enabled=1, autovacuum_freeze_table_age=1412667847);
[11/11 03:12:09] CREATE UNLOGGED TABLE t0(c0 BIT VARYING(237) );
[11/11 03:12:09] CREATE UNLOGGED TABLE t1(LIKE t0);
[11/11 03:12:09] CREATE TEMP TABLE IF NOT EXISTS t2(LIKE t1);
[11/11 03:12:09] CREATE TABLE t3(c0 boolean , UNIQUE(c0), FOREIGN KEY (c0) REFERENCES t1(c0) ON DELETE SET NULL ON UPDATE CASCADE, CHECK(t3.c0)) INHERITS(t0) PARTITION BY RANGE((CAST((('' COLLATE "C")) NOT IN (('Ch84vX98F' COLLATE "C"), ('5uQt0]J^' COLLATE "en_US.utf8")) AS VARCHAR)));
[11/11 03:12:09] CREATE TABLE IF NOT EXISTS t3(LIKE t0);
[11/11 03:12:09] RESET ALL;
[11/11 03:12:09] SET geqo_effort=6;
[11/11 03:12:09] RESET ALL;
[11/11 03:12:09] DELETE FROM ONLY t3 WHERE ((0.48559032862483875181425219125230796635150909423828125)::VARCHAR SIMILAR TO left(num_nonnulls('[-1971070662,381825935)'::int4range), ((CAST(0.20446214 AS MONEY))::VARCHAR COLLATE "C"))) RETURNING (CAST((0.26649633)::MONEY AS VARCHAR) COLLATE "en_US.utf8");
[11/11 03:12:09] DELETE FROM t0 WHERE ((((((t0.c0)>>(t0.c0)))&(t0.c0)))=(((t0.c0)|(t0.c0))));
[11/11 03:12:09] DELETE FROM ONLY t0 WHERE pg_is_other_temp_schema() RETURNING 0.8719748;
[11/11 03:12:09] DELETE FROM t0 WHERE (current_schema() SIMILAR TO upper(('40.143.40.58')::VARCHAR));
[11/11 03:12:09] VACUUM VERBOSE t2;
[11/11 03:12:09] DISCARD SEQUENCES;
[11/11 03:12:09] COMMENT ON COLUMN t1.c0 IS '381825935';
[11/11 03:12:09] UPDATE t2 SET c0 = (t2.c0) WHERE (((((('*')||(1251218154)) COLLATE "C") COLLATE "en_US.utf8"))LIKE((((((t2.c0)>>(t2.c0)))#(t2.c0)))::VARCHAR));
[11/11 03:12:09] DELETE FROM ONLY t1;
[11/11 03:12:09] UPDATE t1 SET c0 = B'1111111111111111111111111111111110001010100000111101100100111010' WHERE (((t1.c0)<<(t1.c0)))::BOOLEAN;
[11/11 03:12:09] UPDATE t1 SET c0 = B'10110110000100011001110001111' WHERE ((0.46123907)::MONEY) ISNULL;
[11/11 03:12:09] UPDATE t2 SET c0 = DEFAULT WHERE (((((((t2.c0)||(t2.c0)))|(t2.c0)))|(t2.c0))) BETWEEN (((t2.c0)<<(t2.c0))) AND (t2.c0);
[11/11 03:12:09] RESET ROLE;
[11/11 03:12:09] DROP INDEX IF EXISTS i2 CASCADE;
[11/11 03:12:09] ANALYZE t0(c0);
[11/11 03:12:09] RESET ROLE;
[11/11 03:12:09] UPDATE t2 SET c0 = B'1001010100101000001001011101010' WHERE (((to_char(range_merge((((((('[-1206325032,-638001809)'::int4range)*('(1404612145,1404612145)'::int4range)))*((('[381825935,1404612145)'::int4range)*('[-1971070662,225215613)'::int4range)))))*((+ (1251218154))::int4range)), (((((('(-1971070662,1404612145)'::int4range)-('(-421549144,-330722860]'::int4range)))*((('[-1714313575,-638001809)'::int4range)-('[601788572,601788572]'::int4range)))))*((((('[-1049733100,-926551898)'::int4range)*('[-1246995720,-421549144]'::int4range)))-((('[-434976407,709824279)'::int4range)-('[-1038730664,381825935)'::int4range))))))), '?X((')~('&y#?' COLLATE "C"))AND((('~q邜~)^' COLLATE "C") SIMILAR TO (('Bh}?YsGy~')||('&')))))) IS TRUE;
[11/11 03:12:09] UPDATE t1 SET c0 = B'1111111111111111111111111111111110011001110100011010011010011001' WHERE NOT (((((('[-421549144,481617569)'::int4range)<<('(-1805898074,2119277056)'::int4range)))OR((('BR')LIKE('')))))::BOOLEAN);
[11/11 03:12:09] RESET ROLE;
[11/11 03:12:09] CREATE UNIQUE INDEX i0 ON t0((((t0.c0)<(((t0.c0)||(t0.c0))))) NULLS LAST, ((0.8719748)::MONEY));
[11/11 03:12:09] CREATE INDEX i0 ON t0((0.78016721818825585099688169066212140023708343505859375) numeric_minmax_ops);
[11/11 03:12:09] CREATE INDEX i0 ON ONLY t2 USING BTREE(c0, c0 NULLS LAST);
[11/11 03:12:09] CREATE MATERIALIZED VIEW v0(c0) AS (SELECT DISTINCT CAST(t2.c0 AS INT) FROM ONLY t2 WHERE (t2.c0)::BOOLEAN LIMIT 6358586228259805744);
[11/11 03:12:09] CREATE VIEW v0(c0, c1, c2) AS (SELECT DISTINCT ON ((((((((('(-1727172240,-774084863)'::int4range)*('[-190130136,311590787]'::int4range)))*((('[-1805898074,481617569)'::int4range)*('(381825935,1243075417]'::int4range)))))-((((('(-302233107,467057992)'::int4range)*('(-2086649654,-190130136]'::int4range)))*((('(-412832629,601788572)'::int4range)*('[-230904433,1958307746]'::int4range)))))))-((((0.33815768)::int4range)-((((('[467057992,1660488052]'::int4range)-('(601788572,1159745938]'::int4range)))*((('(-1517100810,733354034)'::int4range)*('[-1246995720,1703379915]'::int4range))))))))) 0.1704399, ((- (+ (strpos('wKn{/4/', ''))))-(abs(CAST('(311590787,611213895)'::int4range AS INT)))), ((range_merge((((('(-203828228,2146333998]'::int4range)*('(-101763634,709824279]'::int4range)))*((('[-595903625,1863747830]'::int4range)*('[-532488915,563144492]'::int4range)))), (((('[-2140087254,2076778197]'::int4range)*('(-1969240758,517056830)'::int4range)))*((('[-565599614,164423191)'::int4range)*('(292462962,1081046712]'::int4range))))))<<((((((('[-1727172240,242723422]'::int4range)-('[91328215,957647712)'::int4range)))-((('[188856449,709824279)'::int4range)*('(-567602313,467057992)'::int4range)))))-((((('[83251327,292462962]'::int4range)*('[-513786951,293202498)'::int4range)))*((('(-1336275359,1599267569)'::int4range)-('[-412832629,611213895)'::int4range)))))))) FROM ONLY t0, t2*);
[11/11 03:12:09] CREATE MATERIALIZED VIEW v0(c0, c1, c2, c3, c4, c5) AS (SELECT DISTINCT 0.08885508803279762, (t1.c0) BETWEEN SYMMETRIC (t1.c0) AND (t3.c0), (((-434976407)::VARCHAR(911)~(CAST(0.9075804 AS MONEY))::VARCHAR) IS FALSE)::VARCHAR, 0.28608367518796196105057560998830012977123260498046875, (0.35357785)::MONEY, 0.14156675 FROM ONLY t2, ONLY t1, t0, ONLY t3 LIMIT 7704770037035302887);
[11/11 03:12:09] CREATE VIEW v0(c0, c1) AS (SELECT '212.223.35.94', ((range_merge((((('[-962683817,287746946]'::int4range)-('(-329407035,563144492]'::int4range)))*((('[-1418998206,-910917445)'::int4range)*('[-850310781,2135613856)'::int4range)))), (((('(-1406203350,225215613)'::int4range)-('(-978591622,563144492)'::int4range)))-((('[-56017475,1585691841)'::int4range)*('(428826403,543397772]'::int4range))))))-|-((((('[1316509739,1739178002]'::int4range)-((('[-1163055447,1736814912)'::int4range)*('[-1246995720,369633488]'::int4range)))))*((('(-1517100810,830669901]'::int4range)*((('(-329407035,0)'::int4range)*('[-638001809,1445181786]'::int4range)))))))) FROM t0*, t2*, ONLY t1 LIMIT 8896212036060607626) WITH CASCADED CHECK OPTION;
[11/11 03:12:09] CREATE RECURSIVE VIEW v0(c0, c1, c2) AS (SELECT ALL pg_backend_pid(), t1.c0, 0.20408170982299977946894387059728614985942840576171875 FROM ONLY t1, t2, ONLY t0);
[11/11 03:12:09] SET track_counts=1;
[11/11 03:12:09] DROP INDEX IF EXISTS i0, i0, i2;
[11/11 03:12:09] DELETE FROM t0 WHERE (((((0.763668953901305069820182325202040374279022216796875)::VARCHAR(806) COLLATE "C") COLLATE "en_US.utf8"))LIKE(((CAST((0.55196595)::MONEY AS VARCHAR))||(((((t0.c0)|(t0.c0)))&(CAST(539712632 AS BIT(779))))))));
[11/11 03:12:09] SET CONSTRAINTS ALL DEFERRED;
[11/11 03:12:09] RESET ROLE;
[11/11 03:12:09] DELETE FROM ONLY t2;
[11/11 03:12:09] DISCARD TEMPORARY;
[11/11 03:12:09] UPDATE t0 SET c0 = (((((t0.c0)|(t0.c0)))&(CAST(CAST(0.5201071 AS MONEY) AS BIT(375))))) WHERE (((t0.c0)>>(((t0.c0)<<(t0.c0))))) BETWEEN (((t0.c0)&(t0.c0))) AND (((t0.c0)|(((t0.c0)#(((t0.c0)>>(t0.c0)))))));
[11/11 03:12:09] UPDATE t1 SET c0 = B'1111111111111111111111111111111110000011111010001111000010100010' WHERE (((('[-1671562681,1081046712)'::int4range)*((((('(-1001522029,830669901]'::int4range)*('[-1971070662,-415714257]'::int4range)))-((('[-205876798,1206870921)'::int4range)*('(784245696,1060737114)'::int4range)))))))&<((((((('[-1406203350,1736814912]'::int4range)*('[-412832629,1958307746]'::int4range)))*((('(-565599614,1404612145)'::int4range)-('[-2142665566,-1138844221]'::int4range)))))*((((('(614522786,1294143204)'::int4range)-('[-1998893208,1703379915]'::int4range)))*((('(590894640,1863747830]'::int4range)*('[-567602313,665507524)'::int4range))))))));
[11/11 03:12:09] COMMIT;
[11/11 03:12:09] SET SESSION statement_timeout = 5000;
;
