[11/08 18:17:10] \c test;
[11/08 18:17:10] DROP DATABASE IF EXISTS database885;
[11/08 18:17:10] CREATE DATABASE database885  TEMPLATE template0;
[11/08 18:17:10] \c database885;
[11/08 18:17:10] CREATE UNLOGGED TABLE IF NOT EXISTS t0(c0 int4range );
[11/08 18:17:10] CREATE TEMP TABLE IF NOT EXISTS t1(c0 boolean  PRIMARY KEY, c1 int4range , CHECK(((t1.c0)<((t1.c0) BETWEEN (t1.c0) AND (((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) BETWEEN SYMMETRIC (t1.c0) AND (NOT (t1.c0)))))), UNIQUE(c0), EXCLUDE (((((((((B'1001000100000001101110101100110')#(B'11001100101110111000010100001')))<<(((B'1110100011110000101100011111')#(B'1000000010011111011010100100010')))))&(((((B'1001000100000001101110101100110')||(B'1111111111111111111111111111111111011000100100111000100110110100')))&(((B'100110111101101000010101100011')|(B'1111111111111111111111111111111111010111000000001101011111101101')))))))::INT) array_ops WITH *>, c0 varbit_minmax_ops DESC WITH <>) WHERE ((((((((B'1111111111111111111111111111111110011010101110011000010101011110')&(B'100000100101101111001001000100')))|(((B'1111010010111011110101110010010')|(B'1101011100001001100000101000011')))))|(((((B'1111111111111111111111111111111111101100010111001000011010011001')||(B'1110100011110000101100011111')))<<(((B'1111111111111111111111111111111111100100100110101111000110101010')&(B'1001110100010101100000011100100')))))))::BOOLEAN)) INHERITS(t0) PARTITION BY RANGE((((((t1.c1)-(t1.c1)))<@((('(-817479417,-300274297]'::int4range)-(((t1.c1)*(((t1.c1)*('(-2104045187,-563766322)'::int4range)))))))))tsvector_ops) ON COMMIT PRESERVE ROWS ;
[11/08 18:17:10] CREATE TABLE IF NOT EXISTS t1(LIKE t0);
[11/08 18:17:10] CREATE TABLE IF NOT EXISTS t2(LIKE t0 INCLUDING GENERATED);
[11/08 18:17:10] CREATE TEMPORARY TABLE t3(LIKE t1);
[11/08 18:17:10] DISCARD SEQUENCES;
[11/08 18:17:10] ALTER TABLE  t1 ALTER c0 SET STORAGE PLAIN, OWNER TO CURRENT_USER, SET LOGGED, FORCE ROW LEVEL SECURITY, ADD CONSTRAINT 搤 EXCLUDE ((t1.c0) DESC NULLS LAST WITH >=, c0 char_ops WITH @@) NOT VALID, ENABLE ROW LEVEL SECURITY;
[11/08 18:17:10] ALTER TABLE  t2 ADD CONSTRAINT B UNIQUE(c0) NOT VALID, SET UNLOGGED, ENABLE ROW LEVEL SECURITY, DISABLE ROW LEVEL SECURITY, NOT OF, ALTER c0 SET STORAGE EXTENDED, ALTER c0 SET STATISTICS 6858, OWNER TO SESSION_USER, ALTER c0 SET NOT NULL, SET WITHOUT OIDS, REPLICA IDENTITY FULL, SET WITHOUT CLUSTER, ALTER c0 SET DEFAULT (((((((('[-1590896533,-602374636)'::int4range)*('(-602374636,1466439209)'::int4range)))-((('(-1719518800,-60669096)'::int4range)*('(-2104045187,2038002184)'::int4range)))))*((upper('-0.0'))::int4range)))*((((((('[-1719518800,-661419596]'::int4range)-('(-1590896533,2030695842)'::int4range)))-((('[-1031697463,213975608)'::int4range)*('[-459607638,-300274297)'::int4range)))))-((((('[-890825528,-197444667]'::int4range)*('[-687810579,242925549)'::int4range)))*((('(-213238217,495983575]'::int4range)-('[-890825528,-213238217]'::int4range)))))))), ALTER c0  SET(n_distinct_inherited=-1.0E-10, n_distinct=-0.1), FORCE ROW LEVEL SECURITY;
[11/08 18:17:10] ALTER TABLE  ONLY t3 OWNER TO SESSION_USER, SET WITHOUT OIDS;
[11/08 18:17:10] DROP INDEX IF EXISTS i0, i0;
[11/08 18:17:10] CLUSTER t3;
[11/08 18:17:10] CLUSTER ;
[11/08 18:17:10] UNLISTEN asdf;
[11/08 18:17:10] DISCARD TEMP;
[11/08 18:17:10] DELETE FROM ONLY t2 WHERE NOT ((0.280381502226977108449545994517393410205841064453125)::BOOLEAN) RETURNING 0.12354922925617151;
[11/08 18:17:10] DELETE FROM t1 WHERE NOT (NOT (((((t1.c0)*(t1.c0)))<@(((t1.c0)-(t1.c0)))))) RETURNING 1356125786;
[11/08 18:17:10] CREATE OR REPLACE TEMPORARY RECURSIVE VIEW v0(c0, c1, c2) AS (SELECT '246.16.237.41', 0.55324861261560809300164009982836432754993438720703125, 0.019124525836854978 FROM t1 WHERE (t1.c0) BETWEEN (((((((t1.c0)*(t1.c0)))*(((t1.c0)-(t1.c0)))))*(t1.c0))) AND (t1.c0) LIMIT 8400845576983396650);
[11/08 18:17:10] DELETE FROM ONLY t1 WHERE NOT ((((upper(''))||(0.98305887)) SIMILAR TO lower('g'))) RETURNING CAST(((((((NULL)#(B'1111111111111111111111111111111111011000100100111000100110110100')))>>(((B'1010000110101001101011001011010')|(B'100110111101101000010101100011')))))&(((((B'1111001000010011111010110100010')#(B'10011110011110111000010000111')))<<(((B'1111111111111111111111111111111110000000011110011000110010101101')&(B'1111111111111111111111111111111111001100101000000101001100001011')))))) AS INT);
[11/08 18:17:10] DELETE FROM t0 WHERE ((t0.c0)<<(((t0.c0)*(((((t0.c0)*(t0.c0)))-(t0.c0)))))) RETURNING t0.c0;
[11/08 18:17:10] ALTER TABLE  t2 NO FORCE ROW LEVEL SECURITY, ALTER c0  RESET(n_distinct), VALIDATE CONSTRAINT asdf, ALTER c0 SET DEFAULT (((((((('[-1119773805,461948497]'::int4range)*('(-974554753,546763332)'::int4range)))-((('(-962980086,545361165)'::int4range)*('[-22226549,1723131436)'::int4range)))))*('[-1140353679,1723131436)'::int4range)))*((((((B'1111111111111111111111111111111110011011111010110000100100110111')||(B'1111111111111111111111111111111110010011010110011000101001010001')))::int4range)-((((('(-1031697463,846676375]'::int4range)*('(1364857967,2022943051]'::int4range)))-((('[112012011,1774264884]'::int4range)-('(-389989898,547378769)'::int4range)))))))), ALTER c0 SET STATISTICS 605, ALTER c0 SET STORAGE PLAIN, OWNER TO SESSION_USER, SET WITHOUT OIDS, ALTER c0  SET(n_distinct_inherited=1.0E-4, n_distinct=-0.5), SET UNLOGGED, NOT OF, REPLICA IDENTITY DEFAULT, ALTER c0  TYPE int4range, ENABLE ROW LEVEL SECURITY, ADD CONSTRAINT b PRIMARY KEY(c0) NOT VALID, DISABLE ROW LEVEL SECURITY, ALTER c0 DROP NOT NULL;
[11/08 18:17:10] ALTER TABLE  t1 FORCE ROW LEVEL SECURITY;
[11/08 18:17:10] RESET ROLE;
[11/08 18:17:10] ALTER TABLE  ONLY t1 REPLICA IDENTITY FULL, FORCE ROW LEVEL SECURITY, ENABLE ROW LEVEL SECURITY;
[11/08 18:17:10] SET LOCAL geqo=1;
[11/08 18:17:10] RESET ALL;
[11/08 18:17:10] ANALYZE( SKIP_LOCKED) t0;
[11/08 18:17:10] DELETE FROM ONLY t0 WHERE isempty(((((t0.c0)-(t0.c0)))*(t0.c0)));
[11/08 18:17:10] TRUNCATE TABLE t0 RESTART IDENTITY CASCADE;
[11/08 18:17:10] DROP INDEX IF EXISTS i1 RESTRICT;
[11/08 18:17:10] SET enable_indexonlyscan=1;
[11/08 18:17:10] LISTEN test;
[11/08 18:17:10] SET LOCAL seq_page_cost=DEFAULT;
[11/08 18:17:10] RESET ROLE;
[11/08 18:17:10] CREATE INDEX i0 ON t1(c0) INCLUDE(c0) WHERE CAST(((B'1111111111111111111111111111111110010001101110110111101010011100')|(B'1100011110000000101001011100110')) AS BOOLEAN);
[11/08 18:17:10] CREATE INDEX i0 ON t2((CAST((((('炇pJL)Ik4''')||('Infinity')) COLLATE "en_US.utf8") COLLATE "en_US.utf8") AS BIT)) ASC) INCLUDE(c0);
[11/08 18:17:10] CREATE UNIQUE INDEX i0 ON ONLY t2 USING BTREE(c0, c0) INCLUDE(c0) WHERE (0.74959283018450106883534544977010227739810943603515625) ISNULL;
[11/08 18:17:10] CLUSTER t0;
[11/08 18:17:10] CLUSTER t0;
[11/08 18:17:10] CLUSTER ;
[11/08 18:17:10] REINDEX DATABASE CONCURRENTLY database885;
[11/08 18:17:10] CREATE SEQUENCE IF NOT EXISTS seq AS integer MAXVALUE -2104045187 NO CYCLE;
[11/08 18:17:10] CREATE TEMPORARY SEQUENCE IF NOT EXISTS seq AS smallint INCREMENT -1580494602 NO MINVALUE CYCLE;
[11/08 18:17:10] SET geqo_effort=DEFAULT;
[11/08 18:17:10] DROP INDEX IF EXISTS i2, i2;
[11/08 18:17:10] DISCARD TEMPORARY;
[11/08 18:17:10] RESET ROLE;
[11/08 18:17:10] SET CONSTRAINTS ALL DEFERRED;
[11/08 18:17:10] COMMIT;
[11/08 18:17:10] SET SESSION statement_timeout = 5000;
;
