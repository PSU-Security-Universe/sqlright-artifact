[11/11 01:56:49] \c test;
[11/11 01:56:49] DROP DATABASE IF EXISTS database2777;
[11/11 01:56:49] CREATE DATABASE database2777 WITH ENCODING 'utf8'  TEMPLATE template0;
[11/11 01:56:49] \c database2777;
[11/11 01:56:49] CREATE UNLOGGED TABLE IF NOT EXISTS t0(c0 TEXT  UNIQUE DEFAULT ((quote_ident(lower(')')))::VARCHAR) CHECK (((0.26160768982010462746501389119657687842845916748046875) IS NOT NULL) IS UNKNOWN) NOT NULL PRIMARY KEY, c1 int4range  UNIQUE NULL, EXCLUDE (('60.60.151.60') DESC WITH >, c1 date_ops DESC WITH <=) WITH (autovacuum_analyze_scale_factor=1, autovacuum_vacuum_threshold=1135292477, autovacuum_enabled=0, autovacuum_vacuum_cost_limit=1831, autovacuum_vacuum_scale_factor=0.1, autovacuum_freeze_table_age=1778259026, autovacuum_freeze_min_age=884061711, autovacuum_freeze_max_age=769811837, fillfactor=29), CHECK(((t0.c1)@>(((((t0.c1)*(((t0.c1)*(t0.c1)))))*(t0.c1))))), UNIQUE(c1)) PARTITION BY HASH((t0.c0), (0.7370484582909503)float4_minmax_multi_ops) WITH (autovacuum_enabled=0, autovacuum_analyze_scale_factor=1.0E-5, autovacuum_vacuum_cost_limit=555, autovacuum_freeze_max_age=953507142, autovacuum_vacuum_cost_delay=81, autovacuum_freeze_table_age=1202654039, autovacuum_freeze_min_age=206175877, parallel_workers=582, autovacuum_vacuum_scale_factor=0.1, autovacuum_analyze_threshold=1512529328, fillfactor=15);
[11/11 01:56:49] CREATE TEMPORARY TABLE t0(c0 FLOAT  NULL CHECK (((((('[-1289659813,-967478121)'::int4range)*('(-1193166415,1431767690)'::int4range)))::VARCHAR)||(B'101111000100111101010101000011'))!~*CAST(CAST(('OC,' COLLATE "C") AS REAL) AS VARCHAR)) DEFAULT (exp())) WITH (fillfactor=86, autovacuum_analyze_scale_factor=0.5, parallel_workers=280, autovacuum_freeze_max_age=724751427) ON COMMIT DELETE ROWS ;
[11/11 01:56:49] CREATE TEMP TABLE t0(c0 BIT VARYING(85) ) PARTITION BY HASH(((((('(-1289659813,1016155279]'::int4range)-((((('(630111410,1360836172)'::int4range)*('(855051779,1360836172)'::int4range)))*((('(1868037645,1983561504)'::int4range)-('(-1132199161,-471990543)'::int4range)))))))*((((((('(-1843163320,-318570832]'::int4range)*('[-928406560,1868037645)'::int4range)))*((('[208590385,276052292]'::int4range)*('[-1193166415,201538201]'::int4range)))))*('[-1843163320,-1350759646)'::int4range)))))) ON COMMIT PRESERVE ROWS ;
[11/11 01:56:49] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 int4range ) PARTITION BY LIST(((t0.c0) BETWEEN (((((((t0.c0)-(t0.c0)))-(t0.c0)))-(t0.c0))) AND (((((t0.c0)*(t0.c0)))*(((t0.c0)*(t0.c0))))))uuid_bloom_ops) WITH (parallel_workers=34);
[11/11 01:56:49] CREATE TEMPORARY TABLE t0(c0 smallint  UNIQUE NULL CHECK ((((((((B'1111111111111111111111111111111111101110101011110100010001110110')|(B'1101011100000100001000110001010')))|(((B'1111111111111111111111111111111110011011111011001100011000011111')||(B'1100111111111000000100001011110')))))<<(B'1111111111111111111111111111111110011011111011001100011000011111')))::BOOLEAN) NO INHERIT DEFAULT (((0.88672894)::MONEY)::INT) PRIMARY KEY, c1 FLOAT , CHECK(NOT (((0.23209321507518388)>(0.5061579566414088)))), UNIQUE(c0)) PARTITION BY LIST(((((((((('[-1696627860,2115702669)'::int4range)-('[-1085252123,1892499195]'::int4range)))*((('(-2079518351,214495439)'::int4range)*('[-1115858858,789828931)'::int4range)))))-((0.73339518783251300693137864072923548519611358642578125)::int4range)))-(((((CAST('[-1500666689,-1361445155]'::int4range AS int4range))*('[-1071919958,1405639984)'::int4range)))-(range_merge((('[201538201,1597961479]'::int4range)*('(666839134,1597961479)'::int4range)), (('(-1989167951,-1577058789)'::int4range)-('(65891462,1782358225]'::int4range)))))))));
[11/11 01:56:49] CREATE TEMPORARY TABLE IF NOT EXISTS t0(c0 int4range , c1 BIT VARYING(288)  DEFAULT (((((((B'1111111111111111111111111111111111101110011010100110010000010110')#(B'1111111111111111111111111111111110011010101110011111000100001101')))|(((B'1111111111111111111111111111111111111101010011010100111101001100')<<(B'1111111111111111111111111111111110010000111010110111110011000111')))))::VARCHAR(397))::BIT(32)) PRIMARY KEY, UNIQUE(c0, c1)) PARTITION BY LIST((CAST(0.21183427 AS MONEY))int4_minmax_ops) WITH (autovacuum_vacuum_scale_factor=0.1, autovacuum_vacuum_threshold=1947887923, autovacuum_freeze_table_age=269094255, autovacuum_analyze_scale_factor=0.8, parallel_workers=968, autovacuum_analyze_threshold=1165437547);
[11/11 01:56:49] CREATE UNLOGGED TABLE t0(c0 boolean , c1 integer  PRIMARY KEY DEFAULT (((((+ (+ (-1788303790)))+(inet_client_port())))*(pg_backend_pid())))) PARTITION BY RANGE((((('0.5061579566414088' COLLATE "en_US.utf8"))||(t0.c1)))timestamp_ops, ((0.50615793)::MONEY), (t0.c1)tid_ops);
[11/11 01:56:49] CREATE TABLE IF NOT EXISTS t0(c0 money , c1 FLOAT  PRIMARY KEY NOT NULL);
[11/11 01:56:49] CREATE TEMP TABLE t1(c0 int4range ) PARTITION BY HASH((0.1769798029447897658172905721585266292095184326171875), (((((((-127673511)::int4range)*(t1.c0)))-(((((t1.c0)*(t1.c0)))*(t1.c0))))) BETWEEN (t1.c0) AND (t1.c0))array_ops, (- ((((((B'100111111111000000111010100001')|(B'1111111111111111111111111111111110001000110110011110001101000110')))||(((B'1111001011111000010010010010101')&(B'1111111111111111111111111111111110101111010011110001010110100011')))))::INT))range_ops);
[11/11 01:56:49] CREATE TEMPORARY TABLE IF NOT EXISTS t1(c0 FLOAT , c1 bigserial  UNIQUE PRIMARY KEY, c2 FLOAT  UNIQUE DEFAULT (0.46556033772901906) NOT NULL) INHERITS(t0) ON COMMIT DELETE ROWS ;
[11/11 01:56:49] CREATE UNLOGGED TABLE t1(c0 TEXT COLLATE "en_US.utf8"  PRIMARY KEY, UNIQUE(c0)) INHERITS(t0);
[11/11 01:56:49] CREATE TABLE t1(c0 int4range , c1 int4range , PRIMARY KEY(c0, c1) WITH (autovacuum_analyze_scale_factor=0, autovacuum_vacuum_cost_limit=8351, autovacuum_freeze_max_age=1191025407, parallel_workers=626, autovacuum_freeze_table_age=595632646, autovacuum_freeze_min_age=991745513, autovacuum_vacuum_cost_delay=72, autovacuum_vacuum_threshold=1809591295, autovacuum_enabled=0, autovacuum_analyze_threshold=1552650783), UNIQUE(c0) WITH (autovacuum_freeze_max_age=854299934, autovacuum_vacuum_cost_limit=5064, autovacuum_analyze_scale_factor=0.2, autovacuum_analyze_threshold=1818854388, autovacuum_vacuum_scale_factor=0.5, parallel_workers=873), CHECK(((upper(('D' COLLATE "en_US.utf8")))LIKE(CAST(((('' COLLATE "en_US.utf8"))||(0.68280937900532434614575549858273006975650787353515625)) AS VARCHAR)))), FOREIGN KEY (c1, c0) REFERENCES t0(c0, c1) MATCH SIMPLE ON UPDATE SET NULL) WITH (autovacuum_freeze_min_age=778327672);
[11/11 01:56:49] CREATE TABLE t1(c0 FLOAT ) INHERITS(t0);
[11/11 01:56:49] CREATE TEMP TABLE t1(c0 REAL , CHECK(pg_is_other_temp_schema()), PRIMARY KEY(c0), UNIQUE(c0) WITH (autovacuum_vacuum_threshold=2108404894, autovacuum_analyze_scale_factor=0.5, autovacuum_freeze_table_age=700876303, autovacuum_freeze_min_age=715458032, fillfactor=84, autovacuum_vacuum_cost_delay=98, parallel_workers=693, autovacuum_vacuum_cost_limit=9202, autovacuum_vacuum_scale_factor=0.2, autovacuum_freeze_max_age=995639148, autovacuum_analyze_threshold=360564057, autovacuum_enabled=1), EXCLUDE (c0 ASC WITH &, (CAST((((('[-1071919958,-977365838]'::int4range)-((('(-14736414,2024313129]'::int4range)*('(-483002938,-259263650]'::int4range)))))-(((CAST('Y' AS int4range))*('(65891462,1100140343)'::int4range)))) AS INT)) NULLS LAST WITH >=, c0 WITH <=, c0 cidr_ops DESC WITH <=) WHERE (((((CAST('145.207.76.237' AS INT))::VARCHAR(747))||(upper('OC,'))) SIMILAR TO 'Y')), FOREIGN KEY (c0) REFERENCES t0(c0) ON UPDATE RESTRICT);
[11/11 01:56:49] CREATE TABLE IF NOT EXISTS t1(LIKE t0);
[11/11 01:56:49] CREATE TABLE t2(LIKE t1 EXCLUDING DEFAULTS);
[11/11 01:56:49] CREATE UNLOGGED TABLE t3(c0 TEXT  NULL PRIMARY KEY) INHERITS(t2, t1, t0);
[11/11 01:56:49] CREATE TEMPORARY TABLE t3(c0 DECIMAL , c1 REAL ) PARTITION BY RANGE((to_hex((CAST((-1.69662784E9)::MONEY AS VARCHAR(578)) COLLATE "en_US.utf8"))), (CAST('10.178.149.241' AS INT))) WITH (autovacuum_freeze_table_age=1097057593, fillfactor=56, autovacuum_vacuum_threshold=225053506, autovacuum_freeze_max_age=1446334327, autovacuum_analyze_threshold=838514236, autovacuum_vacuum_scale_factor=0.2, autovacuum_analyze_scale_factor=0.8, autovacuum_enabled=1, autovacuum_vacuum_cost_delay=95, autovacuum_freeze_min_age=796583404, autovacuum_vacuum_cost_limit=9878);
[11/11 01:56:49] CREATE TEMPORARY TABLE IF NOT EXISTS t3(c0 boolean , c1 money , CHECK(t3.c0), PRIMARY KEY(c0), FOREIGN KEY (c0, c1) REFERENCES t2(c1, c0) ON DELETE CASCADE NOT DEFERRABLE, EXCLUDE (c1 macaddr_ops NULLS LAST WITH #, (t3.c0) bpchar_minmax_ops DESC NULLS FIRST WITH <=), UNIQUE(c0) WITH (autovacuum_freeze_min_age=251825347, autovacuum_freeze_max_age=1746674508, autovacuum_vacuum_scale_factor=0.8, autovacuum_freeze_table_age=1477844216, fillfactor=67)) INHERITS(t0, t2) ON COMMIT PRESERVE ROWS ;
[11/11 01:56:49] CREATE TEMP TABLE t3(LIKE t2);
[11/11 01:56:49] CREATE UNLOGGED TABLE IF NOT EXISTS t4(LIKE t2);
[11/11 01:56:49] ANALYZE( SKIP_LOCKED) t0;
[11/11 01:56:49] INSERT INTO t3(c0) VALUES((0.7858906)::MONEY);
[11/11 01:56:49] INSERT INTO t2(c1, c0) VALUES(0.024663381, (0.45939016)::MONEY);
[11/11 01:56:49] ALTER TABLE  ONLY t4 NO FORCE ROW LEVEL SECURITY, ALTER c0 DROP NOT NULL, ALTER c1  SET(n_distinct=1.0E-9, n_distinct_inherited=-1.0E-10);
[11/11 01:56:49] DISCARD SEQUENCES;
[11/11 01:56:49] DELETE FROM ONLY t4 WHERE (t4.c0) BETWEEN (t4.c0) AND (CAST(0.7235785 AS MONEY)) RETURNING t4.c0;
[11/11 01:56:49] DELETE FROM t1 WHERE ((btrim('p', '') COLLATE "C"))::BOOLEAN RETURNING (((((((('(-419901079,1998323773)'::int4range)*('(-1040665938,293833009]'::int4range)))*((('(-1141248504,2024313129)'::int4range)*('[1065135650,2024313129]'::int4range)))))&<((((('[1080358968,1892499195)'::int4range)*('[-1196782453,-291939383)'::int4range)))-((('(-1132199161,1)'::int4range)-('(-1696627860,552720723)'::int4range)))))))OR(('190.94.63.156')::BOOLEAN));
[11/11 01:56:49] DELETE FROM t0;
[11/11 01:56:49] SET jit_inline_above_cost=532441707276537800;
[11/11 01:56:49] INSERT INTO t2(c1) OVERRIDING USER VALUE VALUES(-4.83002944E8);
[11/11 01:56:49] INSERT INTO t0(c0) VALUES(CAST(1.59796147E9 AS MONEY)), (CAST(1.01615526E9 AS MONEY)), (CAST(0.7777066 AS MONEY));
[11/11 01:56:49] INSERT INTO t2(c1) VALUES((((abs(651721764))::INT)/(length(CAST((0.63881314)::MONEY AS VARCHAR))))), (0.39025447);
[11/11 01:56:49] INSERT INTO t3(c0, c1) VALUES((0.2623615)::MONEY, num_nulls((((('[-1581896960,2024313129]'::int4range)-('(-1346098754,651721764]'::int4range)))-((('(-923031178,-419901079]'::int4range)*('[-1448137988,-483002938)'::int4range)))), 0.4843138939134667975139336704160086810588836669921875));
[11/11 01:56:49] INSERT INTO t3(c1, c0) OVERRIDING USER VALUE VALUES(0.46556035, CAST(0.8943563 AS MONEY)), (+ (((pg_trigger_depth())/(1292221267))), (0.3554005)::MONEY), (0.3554005, CAST(0.78763556 AS MONEY)), (-1.44813798E9, CAST(0.30186018 AS MONEY));
[11/11 01:56:49] COMMENT ON TABLE t1 IS NULL;
[11/11 01:56:49] SET wal_compression=DEFAULT;
[11/11 01:56:49] DELETE FROM ONLY t0 WHERE ((- (((2024313129)%(37202482))))::BOOLEAN) IS FALSE RETURNING lower(to_ascii(upper('d')));
[11/11 01:56:49] DELETE FROM t3;
[11/11 01:56:49] ALTER TABLE  ONLY t0 ALTER c1  SET(n_distinct=-0.2), NOT OF, SET WITHOUT OIDS, DISABLE ROW LEVEL SECURITY, ALTER c0 DROP NOT NULL, FORCE ROW LEVEL SECURITY, ENABLE ROW LEVEL SECURITY, DROP c0 RESTRICT, VALIDATE CONSTRAINT asdf, ALTER c1 SET STORAGE EXTENDED, ALTER c0  RESET(n_distinct), SET LOGGED, NO FORCE ROW LEVEL SECURITY, SET WITHOUT CLUSTER, ALTER c0  TYPE BIT VARYING(116);
[11/11 01:56:49] ALTER TABLE  ONLY t0 SET WITHOUT CLUSTER, FORCE ROW LEVEL SECURITY, VALIDATE CONSTRAINT asdf, SET WITHOUT OIDS, ALTER c0 SET NOT NULL, ALTER c0 DROP DEFAULT, ALTER c0 SET STORAGE EXTERNAL, ALTER c1 SET STATISTICS 9293, ALTER c1  TYPE TEXT COLLATE "macaddr_ops", OWNER TO SESSION_USER, ALTER c1  RESET(n_distinct), DROP c0 RESTRICT, SET LOGGED, ALTER c0  SET(n_distinct_inherited=1, n_distinct=-1.0E-5), NO FORCE ROW LEVEL SECURITY, DISABLE ROW LEVEL SECURITY, ADD CONSTRAINT g FOREIGN KEY (c0) REFERENCES t2(c0) DEFERRABLE INITIALLY DEFERRED, NOT OF;
[11/11 01:56:49] ALTER TABLE  t0 ADD CONSTRAINT L EXCLUDE ((t0.c0) range_ops WITH ~<=~, c1 ASC WITH -);
[11/11 01:56:49] ALTER TABLE  ONLY t3 ALTER c0  SET DATA TYPE DECIMAL, VALIDATE CONSTRAINT asdf;
[11/11 01:56:49] ALTER TABLE  ONLY t0 ENABLE ROW LEVEL SECURITY, VALIDATE CONSTRAINT asdf, SET WITHOUT CLUSTER, DROP c0 CASCADE, REPLICA IDENTITY DEFAULT, ALTER c1 DROP DEFAULT, ALTER c1  SET(n_distinct=-0.5);
[11/11 01:56:49] ALTER TABLE  ONLY t0 SET WITHOUT OIDS;
[11/11 01:56:49] DISCARD TEMP;
[11/11 01:56:49] INSERT INTO t1(c1, c0) VALUES(0.924056, CAST(0.4440994 AS MONEY)), (0.7005502, (0.8313889)::MONEY), (0.6840712, (0.4296501)::MONEY), (0.7771909, (0.4448951)::MONEY);
[11/11 01:56:49] DROP INDEX IF EXISTS i1 CASCADE;
[11/11 01:56:49] INSERT INTO t2(c1, c0) VALUES(((- (((inet_client_port())+(num_nulls(CAST(0.011728151 AS MONEY), CAST(0.8014986 AS MONEY), TRUE)))))+(((+ (+ (1892499195)))*((((B'1111111111111111111111111111111111011111001010100100011111101011')::INT)^(((1729129534)*(-977365838)))))))), (5.527207E8)::MONEY);
[11/11 01:56:49] INSERT INTO t4(c1, c0) VALUES(-1.78830374E9, CAST(0.63881314 AS MONEY)), (CAST(((((((B'1010101010101110000101010001010')#(B'1111111111111111111111111111111110100001111111111111111000011011')))|(('34.81.252.2')::BIT)))<<(B'1111111111111111111111111111111111010010010001100001000100111111')) AS REAL), (-9.7736582E8)::MONEY);
[11/11 01:56:49] DISCARD TEMP;
[11/11 01:56:49] INSERT INTO t1(c0) VALUES(CAST(0.09052077 AS MONEY)), ((0.4027017)::MONEY);
[11/11 01:56:49] INSERT INTO t1(c1, c0) OVERRIDING USER VALUE VALUES(6.5891464E7, CAST(0.06659468 AS MONEY));
[11/11 01:56:49] RESET ROLE;
[11/11 01:56:49] DROP INDEX IF EXISTS i3, i4;
[11/11 01:56:49] DROP INDEX IF EXISTS i1, i1 RESTRICT;
[11/11 01:56:49] INSERT INTO t1(c0, c1) VALUES(CAST(0.6910931 AS MONEY), -1.35075968E9), (CAST(0.77380216 AS MONEY), family('221.198.64.61'));
[11/11 01:56:49] UPDATE t1 SET c0 = (t1.c0), c1 = (0.5677664) WHERE ((CAST(((upper('Y-_/V>~G3'))||((434090608) ISNULL)) AS VARCHAR))LIKE(((((('-1448137988' COLLATE "C"))||(((843972240)+(-420156536)))))||(CAST((('[-504293478,1847760782)'::int4range)*('[-1357758760,1930696015)'::int4range)) AS int4range)))));
[11/11 01:56:49] DROP INDEX IF EXISTS i2, i1;
[11/11 01:56:49] NOTIFY asdf, '3+Sk4!';
[11/11 01:56:49] DELETE FROM ONLY t4 WHERE (((CAST(0.06500174 AS MONEY)) BETWEEN SYMMETRIC (t4.c0) AND (t4.c0))AND(lower('ﺰ')!~(- (-498302660))::VARCHAR)) RETURNING 0.86502927143673369325682642738684080541133880615234375;
[11/11 01:56:49] INSERT INTO t1(c1, c0) VALUES(0.27019003, CAST(0.22978827 AS MONEY)), (0.938866, CAST(0.3341548 AS MONEY)), (0.41363576, CAST(0.11644323 AS MONEY));
[11/11 01:56:49] INSERT INTO t1(c0, c1) VALUES((0.2585941)::MONEY, - (CAST(((((B'1100110010001111000011001111')&(B'1111111111111111111111111111111111101110101011110100010001110110')))#(((B'1001001001011010000110111011011')#(B'1111111111111111111111111111111110110110101001110101101011110001')))) AS INT)));
[11/11 01:56:49] INSERT INTO t4(c0) VALUES((0.6521442)::MONEY), ((-1.19316646E9)::MONEY), (CAST(0.77858317 AS MONEY)), ((-5.5087718E8)::MONEY), ((0.30620107)::MONEY);
[11/11 01:56:49] INSERT INTO t1(c0, c1) OVERRIDING SYSTEM VALUE VALUES(CAST(0.88618433 AS MONEY), 0.8832357), ((0.8366896)::MONEY, 0.33623472);
[11/11 01:56:49] INSERT INTO t0(c0) VALUES((0.63710546)::MONEY), (CAST(0.45073843 AS MONEY));
[11/11 01:56:49] INSERT INTO t2(c1, c0) VALUES(-1.99898637E9, CAST(0.76322573 AS MONEY)), (0.2107732, CAST(-1.19678246E9 AS MONEY)), (0.30352682, (-2.9501744E8)::MONEY), (0.3554005, CAST(0.22751354 AS MONEY)), (((abs(((2131654816)/(-485917720))))+(ascii(text('241.170.58.105')))), CAST(7.8982893E8 AS MONEY));
[11/11 01:56:49] INSERT INTO t2(c0, c1) VALUES(CAST(0.10780323 AS MONEY), 0.036978796);
[11/11 01:56:49] SET cpu_index_tuple_cost=DEFAULT;
[11/11 01:56:49] INSERT INTO t4(c0) VALUES((0.28851512)::MONEY);
[11/11 01:56:49] INSERT INTO t1(c0, c1) OVERRIDING SYSTEM VALUE VALUES((0.09014035)::MONEY, 0.8542842), ((0.49134907)::MONEY, 0.97268975), ((0.33704677)::MONEY, 0.22751354), (CAST(8.5505178E8 AS MONEY), 0.41285604);
[11/11 01:56:49] INSERT INTO t2(c0, c1) VALUES(CAST(0.585532 AS MONEY), 0.7209579), (CAST(0.8313889 AS MONEY), 0.8618591), ((0.45073843)::MONEY, -4.83002944E8);
[11/11 01:56:49] INSERT INTO t2(c0) VALUES((0.634515)::MONEY);
[11/11 01:56:49] INSERT INTO t4(c1) VALUES(5.527207E8), (0.21024953);
[11/11 01:56:49] ANALYZE( VERBOSE) t0(c0);
[11/11 01:56:49] INSERT INTO t1(c0, c1) VALUES((0.8320443)::MONEY, 1.25578138E9), ((1.43021248E9)::MONEY, 0.27019003);
[11/11 01:56:49] INSERT INTO t2(c0) VALUES((0.29172406)::MONEY), (CAST(0.03385678 AS MONEY)), ((0.71688414)::MONEY);
[11/11 01:56:49] INSERT INTO t4(c0, c1) VALUES(CAST(0.4761743 AS MONEY), 0.5810788), (CAST(0.46417338 AS MONEY), 0.5589674), ((0.85241455)::MONEY, 1.25578138E9), ((0.7678046)::MONEY, 0.21024953);
[11/11 01:56:49] UPDATE t1 SET c0 = (t1.c0), c1 = (CAST((((((('[-997033003,2070866580]'::int4range)*('(-2043976463,-259263650)'::int4range)))*((('[44385133,1777603519)'::int4range)*('[-1623179369,135516245]'::int4range)))))*((((('(-267345628,574323762]'::int4range)*('(-2075145335,1859311809)'::int4range)))*((('(622617637,1062799822]'::int4range)-('[-259263650,0]'::int4range)))))) AS INT)) WHERE ((upper((t1.c1)::VARCHAR))LIKE(upper(((NULL)||(0.39410516358115244006654620534391142427921295166015625)))));
[11/11 01:56:49] UPDATE t0 SET c1 = (t0.c1), c0 = (t0.c0) WHERE (num_nulls(('' SIMILAR TO ''), 0.68559574777609155749047431527287699282169342041015625)) IS NOT NULL;
[11/11 01:56:49] UPDATE t4 SET c1 = -1.34609882E9, c0 = DEFAULT WHERE ((upper_inf((('(-419901079,1007061369]'::int4range)*('(788967117,1632118980)'::int4range))))OR((((((('(-471990543,-71285419]'::int4range)*('[-1848199973,-541564529)'::int4range)))-((('(288718756,346337112)'::int4range)*('[-550877205,-483002938)'::int4range)))))-|-(((range_merge('(-1317090857,1729129534)'::int4range, '[-1071919958,1309359349]'::int4range))*((('[-1069009855,1428118118]'::int4range)*('(-1408378928,-458805518)'::int4range))))))));
[11/11 01:56:49] INSERT INTO t0(c1) OVERRIDING USER VALUE VALUES(0.8943563), (+ (num_nulls((('-1132199161')||(1998323773))))) ON CONFLICT  DO NOTHING;
[11/11 01:56:49] CREATE STATISTICS  IF NOT EXISTS s0 ON c1, c0 FROM t0;
[11/11 01:56:49] UPDATE t1 SET c1 = (0.7899543) WHERE NOT (((((NOT ((t1.c0) ISNULL))OR(FALSE)))OR(('' COLLATE "C")~(0.5819444071023884)::VARCHAR(520))));
[11/11 01:56:49] DISCARD PLANS;
[11/11 01:56:49] VACUUM FREEZE ANALYZE t4(c0, c1);
[11/11 01:56:49] RESET ROLE;
[11/11 01:56:49] INSERT INTO t2(c1, c0) VALUES(0.3602152, CAST(0.70272535 AS MONEY));
[11/11 01:56:49] INSERT INTO t1(c0) VALUES((0.5771934)::MONEY);
[11/11 01:56:49] INSERT INTO t0(c0) OVERRIDING USER VALUE VALUES(CAST(0.66857725 AS MONEY)), (CAST(0.26594207 AS MONEY)), (NULL), (CAST(0.46158564 AS MONEY)), (CAST('-Infinity' AS MONEY));
[11/11 01:56:49] INSERT INTO t2(c1) VALUES(length(CAST(('-1699090163' COLLATE "C") AS VARCHAR))), (0.755638), (6.668391E8), (0.036978796), (0.77380216);
[11/11 01:56:49] CREATE MATERIALIZED VIEW v0(c0, c1, c2, c3) AS (SELECT DISTINCT (((((((('(-1581896960,1315360386)'::int4range)-('[-1193166415,-85507753]'::int4range)))*((('[-446967660,1827733120]'::int4range)*('[-866618503,-639885832)'::int4range)))))*(range_merge((('(651721764,1487277704]'::int4range)-('[-698884196,54413306]'::int4range)), (('(171708892,2096614882)'::int4range)-('(-489418585,958972571)'::int4range))))))-((CAST((t2.c1) BETWEEN SYMMETRIC (t1.c1) AND (2092239338) AS INT))::int4range)), ((((CAST((0.64021206)::MONEY AS VARCHAR(775)))||(CAST(t2.c0 AS BOOLEAN))))||(((((((B'1111111111111111111111111111111111011010110000001000110100111111')>>(B'1100000000110011101010011001')))&(CAST('8.136.26.64' AS BIT))))<<(((((B'1111111111111111111111111111111111001111110110000100000000111000')>>(B'11110011001100010010101010001')))|(((B'1111111111111111111111111111111111101000010010110000101000011001')&(B'1111111111111111111111111111111111000000000110111100110010101010')))))))), (((((CAST('46.101.43.197' AS VARCHAR(590)))||(0.7444844)) COLLATE "C"))||('123.152.24.231')), (((((((('(-1818952426,2038178965]'::int4range)*('[-1833123655,-471990543]'::int4range)))*((('[-654713537,-161617927)'::int4range)*('(-1850578673,1308312954)'::int4range)))))*((((('(-59994268,1686153850]'::int4range)*('[-977365838,1659082136]'::int4range)))*((('(-1852378534,-928406560]'::int4range)-('[-1115858858,1334788508]'::int4range)))))))*((((((('(-928047523,1782358225)'::int4range)*('(-951020913,2024313129)'::int4range)))*('(-395279436,358851119]'::int4range)))*((((('(-1461639174,1016155279)'::int4range)*('(-1196782453,1780014770)'::int4range)))*(CAST(1.803686282E9 AS int4range))))))) FROM t2*, t1* GROUP BY (((((((('[1195567468,1896930628)'::int4range)-('[-347434843,1139611988)'::int4range)))-((('[-295017450,1100140343]'::int4range)*('[-1171177872,1592950466]'::int4range)))))*(((CAST(t2.c1 AS int4range))-((('(1021861913,1888034026]'::int4range)*('(-317005207,52629434)'::int4range)))))))*((((((('(-746264322,407702916]'::int4range)*('[-1353771613,1781251364)'::int4range)))-((('(510010705,1857323425]'::int4range)*('[-1560100402,651721764)'::int4range)))))*((((('(-1803951102,-923031178)'::int4range)-('(-1619080541,-611588431)'::int4range)))-('(-832481910,276052292)'::int4range)))))));
[11/11 01:56:49] CREATE OR REPLACE VIEW v0(c0, c1) AS (SELECT DISTINCT (((CAST(- ('2123641726') AS VARCHAR(664)) COLLATE "C"))LIKE((((to_ascii(''))||('63.224.21.228')) COLLATE "en_US.utf8"))), 0.39258897302202200307874591089785099029541015625 FROM t1, t2* WHERE (CAST(0.41090554 AS MONEY))::BOOLEAN LIMIT 5911434427535588449) WITH CASCADED CHECK OPTION;
[11/11 01:56:49] CREATE MATERIALIZED VIEW v0(c0, c1, c2) AS (SELECT ((((((((B'1111111111111111111111111111111110001000101111100111100001100110')&(B'1001110110110100011001111010100')))>>(((B'1111111111111111111111111111111110001001100010100110000110101100')>>(B'1100000000110011101010011001')))))<<(((((B'1111111111111111111111111111111111010101011011010110110011000010')||(B'1101010001111001010000011010001')))||(((B'10000101001100111001100100011')||(B'1110100110100011100101101000011')))))))<<(((((((B'1111111111111111111111111111111110001000000010011010011000101010')#(B'1111111111111111111111111111111111101010110111111000111000000111')))|(((B'11000111000000100111101001110')#(B'10101111011100110010100110101')))))&(((((B'1111111111111111111111111111111110110101010100000110101001000101')<<(B'1111111111111111111111111111111110101001100111110101000011001001')))#(((B'1101010001111001010000011010001')|(B'11100110101111101001110011010')))))))), '91.112.183.102', set_masklen('139.177.44.49', CAST(CAST(0.28784673538860727770583025630912743508815765380859375 AS INT) AS INT)) FROM ONLY t0, ONLY t2 WHERE ((1232443097)<=(((ascii('-928406560'))-(((+ (764286390))-(CAST('[564237288,651721764]'::int4range AS INT))))))));
[11/11 01:56:49] CREATE OR REPLACE TEMP RECURSIVE VIEW v0(c0, c1) AS (SELECT DISTINCT 0.04989248773205912090844549311441369354724884033203125, (((((((('(-1350759646,-224940144)'::int4range)*('(-1346098754,1]'::int4range)))*((('(-1665020390,201538201]'::int4range)*('[-45265076,1597961479]'::int4range)))))*((((('[-1992710418,536657696]'::int4range)*('[-1132199161,-86248390]'::int4range)))-((('[1080358968,1324584636]'::int4range)-('[-259263650,1928823902)'::int4range)))))))&&((((((('(-275675774,1437882556]'::int4range)*('[-2005841157,-1632683420]'::int4range)))*(CAST(t4.c0 AS int4range))))*((((('[-1011838798,782794064]'::int4range)-('(-1323130086,1744570462]'::int4range)))*('[-1374287768,-624915137]'::int4range)))))) FROM ONLY t4);
[11/11 01:56:49] CREATE MATERIALIZED VIEW v0(c0) AS (SELECT ALL '134.153.215.68' FROM ONLY t0, ONLY t2, t4 WHERE (0.9701965957902255)::BOOLEAN LIMIT 2589078522548635733 OFFSET 3187729815373624975);
[11/11 01:56:49] CREATE MATERIALIZED VIEW v0(c0, c1, c2) AS (SELECT DISTINCT ON ('50.201.127.57') to_hex(((('(-1497940596,-1201769619]'::int4range)::VARCHAR(222))||(t1.c1))), ((CAST(0.31105503 AS BOOLEAN))AND(CAST(5.52720723E8 AS BOOLEAN))), ((((((CAST(t2.c0 AS BIT(120)))||(((B'1000100110000010101000110110')<<(B'1111111111111111111111111111111111001010001000111111100111001111')))))&(((((B'1111111111111111111111111111111110101001000110011000101101001001')#(B'1111111111111111111111111111111111111000010111100010010101110011')))#(((B'1111111111111111111111111111111111111101010011010100111101001100')&(B'100110101001111000111101101001')))))))<<(((((((B'1111111111111111111111111111111111010110001000100001000100011110')>>(B'1111111111111111111111111111111110011010010111000111110001011101')))<<(((B'1111111111111111111111111111111110101011000010010011100100101011')||(B'1111111111111111111111111111111111001000101010011010001111100000')))))&(((((B'1111111111111111111111111111111110111011111110011110111000001000')<<(B'1111111111111111111111111111111110011001001000101000000001110111')))|(((B'1001001010111010101111000111110')|(B'1000010101001010100111111110110')))))))) FROM ONLY t0, ONLY t1, t2*, t4* LIMIT 6993218623008562216 OFFSET 1903429207671820222);
[11/11 01:56:49] CREATE TEMP VIEW v0(c0, c1) AS (SELECT ALL (((((CAST('191.69.118.12' AS VARCHAR(816)) COLLATE "en_US.utf8"))||(CAST('70.251.80.157' AS BOOLEAN))))||((((((('[-761388295,-127673511)'::int4range)-(NULL)))*('(-462322525,-14736414]'::int4range)))-(CAST((0.37726805)::MONEY AS int4range))))), 0.36866451937128997 FROM ONLY t4 LIMIT 1307399220776632713);
[11/11 01:56:49] CREATE MATERIALIZED VIEW v0(c0) AS (SELECT num_nonnulls((CAST(0.13962008 AS MONEY)) BETWEEN SYMMETRIC (t2.c0) AND (t2.c0)) FROM t2, ONLY t4 WHERE ((chr(lower('(-1348053279,789828931]'::int4range)))LIKE(((('F' COLLATE "C") COLLATE "C") COLLATE "C"))) ORDER BY t2.c1 DESC);
[11/11 01:56:49] COMMIT;
[11/11 01:56:49] SET SESSION statement_timeout = 5000;
;
